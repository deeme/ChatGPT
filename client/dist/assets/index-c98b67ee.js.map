{"version":3,"file":"index-c98b67ee.js","sources":["../../../clientdev/src/data-provider/sse.mjs","../../../clientdev/src/data-provider/createPayload.ts","../../../clientdev/src/store/endpoints.js","../../../clientdev/src/utils/buildTree.js","../../../clientdev/src/utils/getDefaultConversation.js","../../../clientdev/src/store/submission.js","../../../clientdev/src/store/conversation.js","../../../clientdev/src/store/conversations.js","../../../clientdev/src/store/user.js","../../../clientdev/src/store/text.js","../../../clientdev/src/store/search.js","../../../clientdev/src/store/preset.js","../../../clientdev/src/store/token.js","../../../clientdev/src/store/index.js","../../../clientdev/src/data-provider/request.ts","../../../clientdev/src/data-provider/api-endpoints.ts","../../../clientdev/src/data-provider/data-service.ts","../../../clientdev/src/data-provider/react-query-service.ts","../../../clientdev/src/data-provider/headers-helpers.ts","../../../clientdev/src/hooks/AuthContext.tsx","../../../clientdev/src/components/MessageHandler/index.jsx","../../../clientdev/src/components/Nav/NewChat.jsx","../../../clientdev/src/utils/index.jsx","../../../clientdev/src/components/svg/Panel.jsx","../../../clientdev/src/components/svg/Spinner.jsx","../../../clientdev/src/components/Conversations/Pages.jsx","../../../clientdev/src/components/svg/RenameIcon.jsx","../../../clientdev/src/components/svg/CheckMark.jsx","../../../clientdev/src/components/Conversations/RenameButton.jsx","../../../clientdev/src/components/svg/TrashIcon.jsx","../../../clientdev/src/components/svg/CrossIcon.jsx","../../../clientdev/src/components/Conversations/DeleteButton.jsx","../../../clientdev/src/components/svg/ConvoIcon.jsx","../../../clientdev/src/components/Conversations/Conversation.jsx","../../../clientdev/src/components/Conversations/index.jsx","../../../clientdev/src/components/Nav/SearchBar.jsx","../../../clientdev/src/components/Nav/NavLink.jsx","../../../clientdev/src/components/ui/Button.tsx","../../../clientdev/src/components/ui/Dialog.tsx","../../../clientdev/src/components/ui/DialogTemplate.jsx","../../../clientdev/src/components/ui/Input.tsx","../../../clientdev/src/components/ui/Label.tsx","../../../clientdev/src/components/ui/Checkbox.tsx","../../../clientdev/src/components/ui/Dropdown.jsx","../../../clientdev/src/utils/screenshotContext.jsx","../../../clientdev/src/utils/cleanupPreset.js","../../../clientdev/src/components/Nav/ExportConversation/ExportModel.jsx","../../../clientdev/src/components/Nav/ClearConvos.jsx","../../../clientdev/src/components/svg/DarkModeIcon.jsx","../../../clientdev/src/components/svg/LightModeIcon.jsx","../../../clientdev/src/hooks/ThemeContext.jsx","../../../clientdev/src/components/Nav/DarkMode.jsx","../../../clientdev/src/components/svg/LogOutIcon.jsx","../../../clientdev/src/components/Nav/Logout.jsx","../../../clientdev/src/components/svg/DotsIcon.jsx","../../../clientdev/src/components/Nav/NavLinks.jsx","../../../clientdev/src/hooks/useDebounce.js","../../../clientdev/src/components/Nav/index.jsx","../../../clientdev/src/components/Nav/MobileNav.jsx","../../../clientdev/src/routes/Root.jsx","../../../clientdev/src/hooks/useDocumentTitle.js","../../../clientdev/src/components/svg/SunIcon.jsx","../../../clientdev/src/components/svg/LightningIcon.jsx","../../../clientdev/src/components/svg/CautionIcon.jsx","../../../clientdev/src/components/ui/Landing.jsx","../../../clientdev/src/components/Messages/ScrollToBottom.jsx","../../../clientdev/src/components/Messages/Content/SubRow.jsx","../../../clientdev/src/components/svg/Clipboard.jsx","../../../clientdev/src/components/Messages/Content/CodeBlock.jsx","../../../clientdev/src/utils/languages.mjs","../../../clientdev/src/components/Messages/Content/Content.jsx","../../../clientdev/src/components/svg/EditIcon.jsx","../../../clientdev/src/components/svg/RegenerateIcon.jsx","../../../clientdev/src/components/Messages/HoverButtons.jsx","../../../clientdev/src/components/Messages/SiblingSwitch.jsx","../../../clientdev/src/components/svg/GPTIcon.jsx","../../../clientdev/src/components/svg/BingIcon.jsx","../../../clientdev/src/utils/getIcon.jsx","../../../clientdev/src/utils/handleSubmit.js","../../../clientdev/src/components/Messages/Message.jsx","../../../clientdev/src/components/Messages/MultiMessage.jsx","../../../clientdev/src/components/Endpoints/SaveAsPresetDialog.jsx","../../../clientdev/src/components/ui/SelectDropDown.jsx","../../../clientdev/src/components/ui/Slider.tsx","../../../clientdev/src/components/ui/InputNumber.tsx","../../../clientdev/src/components/ui/HoverCard.tsx","../../../clientdev/src/components/Endpoints/OpenAI/OptionHover.jsx","../../../clientdev/src/components/Endpoints/OpenAI/Settings.jsx","../../../clientdev/src/components/Endpoints/BingAI/Settings.jsx","../../../clientdev/src/components/Endpoints/Google/OptionHover.jsx","../../../clientdev/src/components/Endpoints/Google/Settings.jsx","../../../clientdev/src/components/Endpoints/Settings.jsx","../../../clientdev/src/components/Endpoints/EndpointOptionsDialog.jsx","../../../clientdev/src/components/Messages/MessageHeader.jsx","../../../clientdev/src/components/Messages/index.jsx","../../../clientdev/src/components/svg/StopGeneratingIcon.jsx","../../../clientdev/src/components/Input/NewConversationMenu/FileUpload.jsx","../../../clientdev/src/components/Input/SetTokenDialog/InputWithLabel.jsx","../../../clientdev/src/components/Input/SetTokenDialog/index.jsx","../../../clientdev/src/components/Input/SubmitButton.jsx","../../../clientdev/src/components/Endpoints/EndpointOptionsPopover.jsx","../../../clientdev/src/components/Input/OpenAIOptions/index.jsx","../../../clientdev/src/components/Input/ChatGPTOptions/index.jsx","../../../clientdev/src/components/ui/Tabs.tsx","../../../clientdev/src/components/Input/BingAIOptions/index.jsx","../../../clientdev/src/components/svg/MessagesSquared.jsx","../../../clientdev/src/components/Endpoints/Google/Examples.jsx","../../../clientdev/src/components/Input/GoogleOptions/index.jsx","../../../clientdev/src/components/Endpoints/EditPresetDialog.jsx","../../../clientdev/src/components/ui/DropdownMenu.tsx","../../../clientdev/src/components/Input/NewConversationMenu/EndpointItem.jsx","../../../clientdev/src/components/Input/NewConversationMenu/EndpointItems.jsx","../../../clientdev/src/components/Input/NewConversationMenu/PresetItem.jsx","../../../clientdev/src/components/Input/NewConversationMenu/PresetItems.jsx","../../../clientdev/src/components/Input/NewConversationMenu/index.jsx","../../../clientdev/src/components/Input/AdjustToneButton.jsx","../../../clientdev/src/components/Input/Footer.jsx","../../../clientdev/src/components/Input/index.jsx","../../../clientdev/src/routes/Chat.jsx","../../../clientdev/src/routes/Search.jsx","../../../clientdev/src/components/Auth/Login.tsx","../../../clientdev/src/components/Auth/Registration.tsx","../../../clientdev/src/components/Auth/RequestPasswordReset.tsx","../../../clientdev/src/components/Auth/ResetPassword.tsx","../../../clientdev/src/hooks/ApiErrorBoundaryContext.tsx","../../../clientdev/src/components/Auth/ApiErrorWatcher.tsx","../../../clientdev/src/App.jsx","../../../clientdev/src/main.jsx"],"sourcesContent":["/**\n * Copyright (C) 2016 Maxime Petazzoni <maxime.petazzoni@bulix.org>.\n * All rights reserved.\n */\n\nvar SSE = function (url, options) {\n  if (!(this instanceof SSE)) {\n    return new SSE(url, options);\n  }\n\n  this.INITIALIZING = -1;\n  this.CONNECTING = 0;\n  this.OPEN = 1;\n  this.CLOSED = 2;\n\n  this.url = url;\n\n  options = options || {};\n  this.headers = options.headers || {};\n  this.payload = options.payload !== undefined ? options.payload : '';\n  this.method = options.method || (this.payload && 'POST' || 'GET');\n  this.withCredentials = !!options.withCredentials;\n\n  this.FIELD_SEPARATOR = ':';\n  this.listeners = {};\n\n  this.xhr = null;\n  this.readyState = this.INITIALIZING;\n  this.progress = 0;\n  this.chunk = '';\n\n  this.addEventListener = function(type, listener) {\n    if (this.listeners[type] === undefined) {\n      this.listeners[type] = [];\n    }\n\n    if (this.listeners[type].indexOf(listener) === -1) {\n      this.listeners[type].push(listener);\n    }\n  };\n\n  this.removeEventListener = function(type, listener) {\n    if (this.listeners[type] === undefined) {\n      return;\n    }\n\n    var filtered = [];\n    this.listeners[type].forEach(function(element) {\n      if (element !== listener) {\n        filtered.push(element);\n      }\n    });\n    if (filtered.length === 0) {\n      delete this.listeners[type];\n    } else {\n      this.listeners[type] = filtered;\n    }\n  };\n\n  this.dispatchEvent = function(e) {\n    if (!e) {\n      return true;\n    }\n\n    e.source = this;\n\n    var onHandler = 'on' + e.type;\n    if (this.hasOwnProperty(onHandler)) {\n      this[onHandler].call(this, e);\n      if (e.defaultPrevented) {\n        return false;\n      }\n    }\n\n    if (this.listeners[e.type]) {\n      return this.listeners[e.type].every(function(callback) {\n        callback(e);\n        return !e.defaultPrevented;\n      });\n    }\n\n    return true;\n  };\n\n  this._setReadyState = function(state) {\n    var event = new CustomEvent('readystatechange');\n    event.readyState = state;\n    this.readyState = state;\n    this.dispatchEvent(event);\n  };\n\n  this._onStreamFailure = function(e) {\n    var event = new CustomEvent('error');\n    event.data = e.currentTarget.response;\n    this.dispatchEvent(event);\n    this.close();\n  }\n\n  this._onStreamAbort = function(e) {\n    this.dispatchEvent(new CustomEvent('abort'));\n    this.close();\n  }\n\n  this._onStreamProgress = function(e) {\n    if (!this.xhr) {\n      return;\n    }\n\n    if (this.xhr.status !== 200) {\n      this._onStreamFailure(e);\n      return;\n    }\n\n    if (this.readyState == this.CONNECTING) {\n      this.dispatchEvent(new CustomEvent('open'));\n      this._setReadyState(this.OPEN);\n    }\n\n    var data = this.xhr.responseText.substring(this.progress);\n    this.progress += data.length;\n    data.split(/(\\r\\n|\\r|\\n){2}/g).forEach(function(part) {\n      if (part.trim().length === 0) {\n        this.dispatchEvent(this._parseEventChunk(this.chunk.trim()));\n        this.chunk = '';\n      } else {\n        this.chunk += part;\n      }\n    }.bind(this));\n  };\n\n  this._onStreamLoaded = function(e) {\n    this._onStreamProgress(e);\n\n    // Parse the last chunk.\n    this.dispatchEvent(this._parseEventChunk(this.chunk));\n    this.chunk = '';\n  };\n\n  /**\n   * Parse a received SSE event chunk into a constructed event object.\n   */\n  this._parseEventChunk = function(chunk) {\n    if (!chunk || chunk.length === 0) {\n      return null;\n    }\n\n    var e = {'id': null, 'retry': null, 'data': '', 'event': 'message'};\n    chunk.split(/\\n|\\r\\n|\\r/).forEach(function(line) {\n      line = line.trimRight();\n      var index = line.indexOf(this.FIELD_SEPARATOR);\n      if (index <= 0) {\n        // Line was either empty, or started with a separator and is a comment.\n        // Either way, ignore.\n        return;\n      }\n\n      var field = line.substring(0, index);\n      if (!(field in e)) {\n        return;\n      }\n\n      var value = line.substring(index + 1).trimLeft();\n      if (field === 'data') {\n        e[field] += value;\n      } else {\n        e[field] = value;\n      }\n    }.bind(this));\n\n    var event = new CustomEvent(e.event);\n    event.data = e.data;\n    event.id = e.id;\n    return event;\n  };\n\n  this._checkStreamClosed = function() {\n    if (!this.xhr) {\n      return;\n    }\n\n    if (this.xhr.readyState === XMLHttpRequest.DONE) {\n      this._setReadyState(this.CLOSED);\n    }\n  };\n\n  this.stream = function() {\n    this._setReadyState(this.CONNECTING);\n\n    this.xhr = new XMLHttpRequest();\n    this.xhr.addEventListener('progress', this._onStreamProgress.bind(this));\n    this.xhr.addEventListener('load', this._onStreamLoaded.bind(this));\n    this.xhr.addEventListener('readystatechange', this._checkStreamClosed.bind(this));\n    this.xhr.addEventListener('error', this._onStreamFailure.bind(this));\n    this.xhr.addEventListener('abort', this._onStreamAbort.bind(this));\n    this.xhr.open(this.method, this.url);\n    for (var header in this.headers) {\n      this.xhr.setRequestHeader(header, this.headers[header]);\n    }\n    this.xhr.withCredentials = this.withCredentials;\n    this.xhr.send(this.payload);\n  };\n\n  this.close = function() {\n    if (this.readyState === this.CLOSED) {\n      return;\n    }\n\n    this.xhr.abort();\n    this.xhr = null;\n    this._setReadyState(this.CLOSED);\n  };\n};\n\nexport { SSE };\n// Export our SSE module for npm.js\n// if (typeof exports !== 'undefined') {\n//   // exports.SSE = SSE;\n//   module.exports = { SSE };\n// }\n","import type { TSubmission } from './types';\n\nexport default function createPayload(submission: TSubmission) {\n  const { conversation, message, endpointOption } = submission;\n  const { conversationId } = conversation;\n  const { endpoint } = endpointOption;\n\n  const endpointUrlMap = {\n    azureOpenAI: '/api/ask/azureOpenAI',\n    openAI: '/api/ask/openAI',\n    google: '/api/ask/google',\n    bingAI: '/api/ask/bingAI',\n    chatGPTBrowser: '/api/ask/chatGPTBrowser'\n  };\n\n  const server = endpointUrlMap[endpoint];\n\n  let payload = {\n    ...message,\n    ...endpointOption,\n    conversationId\n  };\n\n  return { server, payload };\n}\n","import { atom, selector } from 'recoil';\n\nconst endpointsConfig = atom({\n  key: 'endpointsConfig',\n  default: {\n    azureOpenAI: null,\n    openAI: null,\n    bingAI: null,\n    chatGPTBrowser: null,\n    google: null\n  }\n});\n\nconst endpointsFilter = selector({\n  key: 'endpointsFilter',\n  get: ({ get }) => {\n    const config = get(endpointsConfig) || {};\n\n    let filter = {};\n    for (const key of Object.keys(config)) filter[key] = !!config[key];\n    return filter;\n  }\n});\n\nconst availableEndpoints = selector({\n  key: 'availableEndpoints',\n  get: ({ get }) => {\n    const endpoints = ['azureOpenAI', 'openAI', 'chatGPTBrowser', 'bingAI', 'google'];\n    const f = get(endpointsFilter);\n    return endpoints.filter((endpoint) => f[endpoint]);\n  }\n});\n// const modelAvailable\n\nexport default {\n  endpointsConfig,\n  endpointsFilter,\n  availableEndpoints\n};\n","const even =\n  'w-full border-b border-black/10 dark:border-gray-900/50 text-gray-800 bg-white dark:text-gray-100 group dark:bg-gray-800 hover:bg-gray-100/25 hover:text-gray-700  dark:hover:bg-gray-900 dark:hover:text-gray-200';\nconst odd =\n  'w-full border-b border-black/10 bg-gray-50 dark:border-gray-900/50 text-gray-800 dark:text-gray-100 group bg-gray-100 dark:bg-[#444654] hover:bg-gray-100/40 hover:text-gray-700 dark:hover:bg-[#3b3d49] dark:hover:text-gray-200';\n\nexport default function buildTree(messages, groupAll = false) {\n  if (messages === null) return null;\n\n  let messageMap = {};\n  let rootMessages = [];\n\n  if (groupAll) {\n    return messages.map((m, idx) => ({ ...m, bg: idx % 2 === 0 ? even : odd }));\n  }\n  if (!groupAll) {\n    // Traverse the messages array and store each element in messageMap.\n    messages.forEach((message) => {\n      messageMap[message.messageId] = { ...message, children: [] };\n\n      const parentMessage = messageMap[message.parentMessageId];\n      if (parentMessage) parentMessage.children.push(messageMap[message.messageId]);\n      else rootMessages.push(messageMap[message.messageId]);\n    });\n\n    return rootMessages;\n  }\n\n  // // Group all messages into one tree\n  // let parentId = null;\n  // messages.forEach((message, i) => {\n  //   messageMap[message.messageId] = { ...message, bg: i % 2 === 0 ? even : odd, children: [] };\n  //   const currentMessage = messageMap[message.messageId];\n  //   const parentMessage = messageMap[parentId];\n  //   if (parentMessage) parentMessage.children.push(currentMessage);\n  //   else rootMessages.push(currentMessage);\n  //   parentId = message.messageId;\n  // });\n\n  // return rootMessages;\n\n  // Group all messages by conversation, doesn't look great\n  // Traverse the messages array and store each element in messageMap.\n  // rootMessages = {};\n  // let parents = 0;\n  // messages.forEach(message => {\n  //   if (message.conversationId in messageMap) {\n  //     messageMap[message.conversationId].children.push(message);\n  //   } else {\n  //     messageMap[message.conversationId] = { ...message, bg: parents % 2 === 0 ? even : odd, children: [] };\n  //     rootMessages.push(messageMap[message.conversationId]);\n  //     parents++;\n  //   }\n  // });\n\n  // // return Object.values(rootMessages);\n  // return rootMessages;\n}\n","const buildDefaultConversation = ({\n  conversation,\n  endpoint,\n  endpointsConfig = {},\n  lastConversationSetup = {}\n}) => {\n  const lastSelectedModel = JSON.parse(localStorage.getItem('lastSelectedModel')) || {};\n\n  if (endpoint === 'azureOpenAI' || endpoint === 'openAI') {\n    conversation = {\n      ...conversation,\n      endpoint,\n      model:\n        lastConversationSetup?.model ??\n        lastSelectedModel[endpoint] ??\n        endpointsConfig[endpoint]?.availableModels?.[0] ??\n        'gpt-3.5-turbo',\n      chatGptLabel: lastConversationSetup?.chatGptLabel ?? null,\n      promptPrefix: lastConversationSetup?.promptPrefix ?? null,\n      temperature: lastConversationSetup?.temperature ?? 1,\n      top_p: lastConversationSetup?.top_p ?? 1,\n      presence_penalty: lastConversationSetup?.presence_penalty ?? 0,\n      frequency_penalty: lastConversationSetup?.frequency_penalty ?? 0\n    };\n  } else if (endpoint === 'google') {\n    conversation = {\n      ...conversation,\n      endpoint,\n      model:\n        lastConversationSetup?.model ??\n        lastSelectedModel[endpoint] ??\n        endpointsConfig[endpoint]?.availableModels?.[0] ??\n        'chat-bison',\n      modelLabel: lastConversationSetup?.modelLabel ?? null,\n      promptPrefix: lastConversationSetup?.promptPrefix ?? null,\n      examples: lastConversationSetup?.examples ?? [\n        { input: { content: '' }, output: { content: '' } }\n      ],\n      temperature: lastConversationSetup?.temperature ?? 0.2,\n      maxOutputTokens: lastConversationSetup?.maxOutputTokens ?? 1024,\n      topP: lastConversationSetup?.topP ?? 0.95,\n      topK: lastConversationSetup?.topK ?? 40\n    };\n  } else if (endpoint === 'bingAI') {\n    conversation = {\n      ...conversation,\n      endpoint,\n      jailbreak: lastConversationSetup?.jailbreak ?? false,\n      context: lastConversationSetup?.context ?? null,\n      systemMessage: lastConversationSetup?.systemMessage ?? null,\n      toneStyle: lastConversationSetup?.toneStyle ?? 'creative',\n      jailbreakConversationId: lastConversationSetup?.jailbreakConversationId ?? null,\n      conversationSignature: null,\n      clientId: null,\n      invocationId: 1\n    };\n  } else if (endpoint === 'chatGPTBrowser') {\n    conversation = {\n      ...conversation,\n      endpoint,\n      model:\n        lastConversationSetup?.model ??\n        lastSelectedModel[endpoint] ??\n        endpointsConfig[endpoint]?.availableModels?.[0] ??\n        'text-davinci-002-render-sha'\n    };\n  } else if (endpoint === null) {\n    conversation = {\n      ...conversation,\n      endpoint\n    };\n  } else {\n    console.error(`Unknown endpoint ${endpoint}`);\n    conversation = {\n      ...conversation,\n      endpoint: null\n    };\n  }\n\n  return conversation;\n};\n\nconst getDefaultConversation = ({ conversation, endpointsConfig, preset }) => {\n  const { endpoint: targetEndpoint } = preset || {};\n\n  if (targetEndpoint) {\n    // try to use preset\n    const endpoint = targetEndpoint;\n    if (endpointsConfig?.[endpoint]) {\n      conversation = buildDefaultConversation({\n        conversation,\n        endpoint,\n        lastConversationSetup: preset,\n        endpointsConfig\n      });\n      return conversation;\n    } else {\n      console.log(endpoint);\n      console.warn(`Illegal target endpoint ${targetEndpoint} ${endpointsConfig}`);\n    }\n  }\n\n  // try {\n  //   // try to use current model\n  //   const { endpoint = null } = prevConversation || {};\n  //   if (endpointsConfig?.[endpoint]) {\n  //     conversation = buildDefaultConversation({\n  //       conversation,\n  //       endpoint,\n  //       lastConversationSetup: prevConversation,\n  //       endpointsConfig\n  //     });\n  //     return conversation;\n  //   }\n  // } catch (error) {}\n\n  try {\n    // try to read latest selected model from local storage\n    const lastConversationSetup = JSON.parse(localStorage.getItem('lastConversationSetup'));\n    const { endpoint = null } = lastConversationSetup;\n\n    if (endpointsConfig?.[endpoint]) {\n      conversation = buildDefaultConversation({ conversation, endpoint, endpointsConfig });\n      return conversation;\n    }\n  } catch (error) {\n    console.error(error);\n  }\n\n  // if anything happens, reset to default model\n\n  const endpoint = ['openAI', 'azureOpenAI', 'bingAI', 'chatGPTBrowser', 'google'].find(\n    (e) => endpointsConfig?.[e]\n  );\n  if (endpoint) {\n    conversation = buildDefaultConversation({ conversation, endpoint, endpointsConfig });\n    return conversation;\n  } else {\n    conversation = buildDefaultConversation({ conversation, endpoint: null, endpointsConfig });\n    return conversation;\n  }\n};\n\nexport default getDefaultConversation;\n","import React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport {\n  RecoilRoot,\n  atom,\n  selector,\n  useRecoilState,\n  useRecoilValue,\n  useSetRecoilState\n} from 'recoil';\nimport buildTree from '~/utils/buildTree';\n\n// current submission\n// submit any new value to this state will cause new message to be send.\n// set to null to give up any submission\n// {\n//   conversation, // target submission, must have: model, chatGptLabel, promptPrefix\n//   messages, // old messages\n//   message, // request message\n//   initialResponse, // response message\n//   isRegenerate=false, // isRegenerate?\n// }\n\nconst submission = atom({\n  key: 'submission',\n  default: null\n});\n\nconst isSubmitting = atom({\n  key: 'isSubmitting',\n  default: false\n});\n\nexport default {\n  submission,\n  isSubmitting\n};\n","import endpoints from './endpoints';\nimport {\n  atom,\n  selector,\n  atomFamily,\n  useSetRecoilState,\n  useResetRecoilState,\n  useRecoilCallback\n} from 'recoil';\nimport buildTree from '~/utils/buildTree';\nimport getDefaultConversation from '~/utils/getDefaultConversation';\nimport submission from './submission.js';\n\n// current conversation, can be null (need to be fetched from server)\n// sample structure\n// {\n//   conversationId: 'new',\n//   title: 'New Chat',\n//   user: null,\n//   // endpoint: [azureOpenAI, openAI, bingAI, chatGPTBrowser]\n//   endpoint: 'azureOpenAI',\n//   // for azureOpenAI, openAI, chatGPTBrowser only\n//   model: 'gpt-3.5-turbo',\n//   // for azureOpenAI, openAI only\n//   chatGptLabel: null,\n//   promptPrefix: null,\n//   temperature: 1,\n//   top_p: 1,\n//   presence_penalty: 0,\n//   frequency_penalty: 0,\n//   // for bingAI only\n//   jailbreak: false,\n//   context: null,\n//   systemMessage: null,\n//   jailbreakConversationId: null,\n//   conversationSignature: null,\n//   clientId: null,\n//   invocationId: 1,\n//   toneStyle: null,\n// };\n\nconst conversation = atom({\n  key: 'conversation',\n  default: null\n});\n\n// current messages of the conversation, must be an array\n// sample structure\n// [{text, sender, messageId, parentMessageId, isCreatedByUser}]\nconst messages = atom({\n  key: 'messages',\n  default: []\n});\n\nconst messagesTree = selector({\n  key: 'messagesTree',\n  get: ({ get }) => {\n    return buildTree(get(messages), false);\n  }\n});\n\nconst latestMessage = atom({\n  key: 'latestMessage',\n  default: null\n});\n\nconst messagesSiblingIdxFamily = atomFamily({\n  key: 'messagesSiblingIdx',\n  default: 0\n});\n\nconst useConversation = () => {\n  const setConversation = useSetRecoilState(conversation);\n  const setMessages = useSetRecoilState(messages);\n  const setSubmission = useSetRecoilState(submission.submission);\n  const resetLatestMessage = useResetRecoilState(latestMessage);\n\n  const switchToConversation = useRecoilCallback(\n    ({ snapshot }) =>\n      async (_conversation, messages = null, preset = null) => {\n        const prevConversation = await snapshot.getPromise(conversation);\n        const endpointsConfig = await snapshot.getPromise(endpoints.endpointsConfig);\n        _switchToConversation(_conversation, messages, preset, {\n          endpointsConfig,\n          prevConversation\n        });\n      },\n    []\n  );\n\n  const _switchToConversation = (\n    conversation,\n    messages = null,\n    preset = null,\n    { endpointsConfig = {}, prevConversation = {} }\n  ) => {\n    let { endpoint = null } = conversation;\n\n    if (endpoint === null)\n      // get the default model\n      conversation = getDefaultConversation({\n        conversation,\n        endpointsConfig,\n        prevConversation,\n        preset\n      });\n\n    setConversation(conversation);\n    setMessages(messages);\n    setSubmission({});\n    resetLatestMessage();\n  };\n\n  const newConversation = (template = {}, preset) => {\n    switchToConversation(\n      {\n        conversationId: 'new',\n        title: '新的对话',\n        ...template\n      },\n      [],\n      preset\n    );\n  };\n\n  const searchPlaceholderConversation = () => {\n    switchToConversation(\n      {\n        conversationId: 'search',\n        title: '搜索'\n      },\n      []\n    );\n  };\n\n  return { newConversation, switchToConversation, searchPlaceholderConversation };\n};\n\nexport default {\n  conversation,\n  messages,\n  messagesTree,\n  latestMessage,\n  messagesSiblingIdxFamily,\n  useConversation\n};\n","import React from 'react';\nimport {\n  RecoilRoot,\n  atom,\n  selector,\n  useRecoilState,\n  useRecoilValue,\n  useSetRecoilState\n} from 'recoil';\n\nconst refreshConversationsHint = atom({\n  key: 'refreshConversationsHint',\n  default: 1\n});\n\nconst useConversations = () => {\n  const setRefreshConversationsHint = useSetRecoilState(refreshConversationsHint);\n\n  const refreshConversations = () => setRefreshConversationsHint((prevState) => prevState + 1);\n\n  return { refreshConversations };\n};\n\nexport default { refreshConversationsHint, useConversations };\n","import { atom } from 'recoil';\n\nconst user = atom({\n  key: 'user',\n  default: null\n});\n\nexport default {\n  user\n};\n","import { atom } from 'recoil';\n\nconst text = atom({\n  key: 'text',\n  default: ''\n});\n\nexport default { text };\n","import { atom, selector } from 'recoil';\nimport buildTree from '~/utils/buildTree';\n\nconst isSearchEnabled = atom({\n  key: 'isSearchEnabled',\n  default: null\n});\n\nconst searchQuery = atom({\n  key: 'searchQuery',\n  default: ''\n});\n\nconst searchResultMessages = atom({\n  key: 'searchResultMessages',\n  default: null\n});\n\nconst searchResultMessagesTree = selector({\n  key: 'searchResultMessagesTree',\n  get: ({ get }) => {\n    return buildTree(get(searchResultMessages), true);\n  }\n});\n\nconst isSearching = selector({\n  key: 'isSearching',\n  get: ({ get }) => {\n    const data = get(searchQuery);\n    return !!data;\n  }\n});\n\nexport default {\n  isSearchEnabled,\n  isSearching,\n  searchResultMessages,\n  searchResultMessagesTree,\n  searchQuery\n};\n","import { atom } from 'recoil';\n\n// preset structure is as same defination as conversation\n// sample structure\n// {\n//   presetId: 'new',\n//   title: 'New Chat',\n//   user: null,\n//   // endpoint: [azureOpenAI, openAI, bingAI, chatGPTBrowser]\n//   endpoint: 'azureOpenAI',\n//   // for azureOpenAI, openAI, chatGPTBrowser only\n//   model: 'gpt-3.5-turbo',\n//   // for azureOpenAI, openAI only\n//   chatGptLabel: null,\n//   promptPrefix: null,\n//   temperature: 1,\n//   top_p: 1,\n//   presence_penalty: 0,\n//   frequency_penalty: 0,\n//   // for bingAI only\n//   jailbreak: false,\n//   toneStyle: null,\n//   context: null,\n//   systemMessage: null,\n// };\n\n// an array of saved presets.\n// sample structure\n// [preset1, preset2, preset3]\nconst presets = atom({\n  key: 'presets',\n  default: []\n});\n\nexport default {\n  presets\n};\n","import { atom, useRecoilState } from 'recoil';\n\nconst tokenRefreshHints = atom({\n  key: 'tokenRefreshHints',\n  default: 1\n});\n\nconst useToken = (endpoint) => {\n  const [hints, setHints] = useRecoilState(tokenRefreshHints);\n  const getToken = () => localStorage.getItem(`${endpoint}_token`);\n  const saveToken = (value) => {\n    localStorage.setItem(`${endpoint}_token`, value);\n    setHints((prev) => prev + 1);\n  };\n\n  return { token: getToken(), getToken, saveToken };\n};\n\nexport default {\n  useToken\n};\n","import conversation from './conversation';\nimport conversations from './conversations';\nimport endpoints from './endpoints';\nimport user from './user';\nimport text from './text';\nimport submission from './submission';\nimport search from './search';\nimport preset from './preset';\nimport token from './token';\n\nexport default {\n  ...conversation,\n  ...conversations,\n  ...endpoints,\n  ...user,\n  ...text,\n  ...submission,\n  ...search,\n  ...preset,\n  ...token\n};\n","import axios, { AxiosRequestConfig } from 'axios';\n\nasync function _get<T>(url: string, options?: AxiosRequestConfig): Promise<T> {\n  const response = await axios.get(url, { ...options });\n  return response.data;\n}\n\nasync function _post(url: string, data?: any) {\n  const response = await axios.post(url, JSON.stringify(data), {\n    headers: { 'Content-Type': 'application/json' }\n  });\n  return response.data;\n}\n\nasync function _postMultiPart(url: string, formData: FormData, options?: AxiosRequestConfig) {\n  const response = await axios.post(url, formData, {\n    ...options,\n    headers: { 'Content-Type': 'multipart/form-data' }\n  });\n  return response.data;\n}\n\nasync function _put(url: string, data?: any) {\n  const response = await axios.put(url, JSON.stringify(data), {\n    headers: { 'Content-Type': 'application/json' }\n  });\n  return response.data;\n}\n\nasync function _delete<T>(url: string): Promise<T> {\n  const response = await axios.delete(url);\n  return response.data;\n}\n\nasync function _deleteWithOptions<T>(url: string, options?: AxiosRequestConfig): Promise<T> {\n  const response = await axios.delete(url, { ...options });\n  return response.data;\n}\n\nasync function _patch(url: string, data?: any) {\n  const response = await axios.patch(url, JSON.stringify(data), {\n    headers: { 'Content-Type': 'application/json' }\n  });\n  return response.data;\n}\n\nexport default {\n  get: _get,\n  post: _post,\n  postMultiPart: _postMultiPart,\n  put: _put,\n  delete: _delete,\n  deleteWithOptions: _deleteWithOptions,\n  patch: _patch\n};\n","export const user = () => {\n  return `/api/auth/user`;\n};\n\nexport const messages = (id: string) => {\n  return `/api/messages/${id}`;\n};\n\nexport const abortRequest = (endpoint: string) => {\n  return `/api/ask/${endpoint}/abort`;\n};\n\nexport const conversations = (pageNumber: string) => {\n  return `/api/convos?pageNumber=${pageNumber}`;\n};\n\nexport const conversationById = (id: string) => {\n  return `/api/convos/${id}`;\n};\n\nexport const updateConversation = () => {\n  return `/api/convos/update`;\n};\n\nexport const deleteConversation = () => {\n  return `/api/convos/clear`;\n};\n\nexport const search = (q: string, pageNumber: string) => {\n  return `/api/search?q=${q}&pageNumber=${pageNumber}`;\n};\n\nexport const searchEnabled = () => {\n  return `/api/search/enable`;\n};\n\nexport const presets = () => {\n  return `/api/presets`;\n};\n\nexport const deletePreset = () => {\n  return `/api/presets/delete`;\n};\n\nexport const aiEndpoints = () => {\n  return `/api/endpoints`;\n};\n\nexport const tokenizer = () => {\n  return `/api/tokenizer`;\n};\n\nexport const login = () => {\n  return '/api/auth/login';\n};\n\nexport const logout = () => {\n  return '/api/auth/logout';\n};\n\nexport const register = () => {\n  return '/api/auth/register';\n};\n\nexport const loginFacebook = () => {\n  return '/api/auth/facebook';\n};\n\nexport const loginGoogle = () => {\n  return '/api/auth/google';\n};\n\nexport const refreshToken = () => {\n  return '/api/auth/refresh';\n};\n\nexport const requestPasswordReset = () => {\n  return '/api/auth/requestPasswordReset';\n};\n\nexport const resetPassword = () => {\n  return '/api/auth/resetPassword';\n};\n","import * as t from './types';\nimport request from './request';\nimport * as endpoints from './api-endpoints';\n\nexport function getConversations(pageNumber: string): Promise<t.TGetConversationsResponse> {\n  return request.get(endpoints.conversations(pageNumber));\n}\n\nexport function abortRequestWithMessage(\n  endpoint: string,\n  abortKey: string,\n  message: string\n): Promise<void> {\n  return request.post(endpoints.abortRequest(endpoint), { arg: { abortKey, message } });\n}\n\nexport function deleteConversation(payload: t.TDeleteConversationRequest) {\n  //todo: this should be a DELETE request\n  return request.post(endpoints.deleteConversation(), { arg: payload });\n}\n\nexport function clearAllConversations(): Promise<unknown> {\n  return request.post(endpoints.deleteConversation(), { arg: {} });\n}\n\nexport function getMessagesByConvoId(id: string): Promise<t.TMessage[]> {\n  return request.get(endpoints.messages(id));\n}\n\nexport function getConversationById(id: string): Promise<t.TConversation> {\n  return request.get(endpoints.conversationById(id));\n}\n\nexport function updateConversation(\n  payload: t.TUpdateConversationRequest\n): Promise<t.TUpdateConversationResponse> {\n  return request.post(endpoints.updateConversation(), { arg: payload });\n}\n\nexport function getPresets(): Promise<t.TPreset[]> {\n  return request.get(endpoints.presets());\n}\n\nexport function createPreset(payload: t.TPreset): Promise<t.TPreset[]> {\n  return request.post(endpoints.presets(), payload);\n}\n\nexport function updatePreset(payload: t.TPreset): Promise<t.TPreset[]> {\n  return request.post(endpoints.presets(), payload);\n}\n\nexport function deletePreset(arg: t.TPreset | {}): Promise<t.TPreset[]> {\n  return request.post(endpoints.deletePreset(), arg);\n}\n\nexport function getSearchEnabled(): Promise<boolean> {\n  return request.get(endpoints.searchEnabled());\n}\n\nexport function getUser(): Promise<t.TUser> {\n  return request.get(endpoints.user());\n}\n\nexport const searchConversations = async (\n  q: string,\n  pageNumber: string\n): Promise<t.TSearchResults> => {\n  return request.get(endpoints.search(q, pageNumber));\n};\n\nexport const getAIEndpoints = () => {\n  return request.get(endpoints.aiEndpoints());\n};\n\nexport const updateTokenCount = (text: string) => {\n  return request.post(endpoints.tokenizer(), { arg: text });\n};\n\nexport const login = (payload: t.TLoginUser) => {\n  return request.post(endpoints.login(), payload);\n};\n\nexport const logout = () => {\n  return request.post(endpoints.logout());\n};\n\nexport const register = (payload: t.TRegisterUser) => {\n  return request.post(endpoints.register(), payload);\n};\n\nexport const refreshToken = () => {\n  return request.post(endpoints.refreshToken());\n};\n\nexport const getLoginGoogle = () => {\n  return request.get(endpoints.loginGoogle());\n};\n\nexport const requestPasswordReset = (payload: t.TRequestPasswordReset) => {\n  return request.post(endpoints.requestPasswordReset(), payload);\n};\n\nexport const resetPassword = (payload: t.TResetPassword) => {\n  return request.post(endpoints.resetPassword(), payload);\n};\n","import {\n  UseQueryOptions,\n  useQuery,\n  useMutation,\n  useQueryClient,\n  UseMutationResult,\n  QueryObserverResult\n} from '@tanstack/react-query';\nimport * as t from './types';\nimport * as dataService from './data-service';\nimport axios from 'axios';\n\nexport enum QueryKeys {\n  messages = 'messsages',\n  allConversations = 'allConversations',\n  conversation = 'conversation',\n  searchEnabled = 'searchEnabled',\n  user = 'user',\n  endpoints = 'endpoints',\n  presets = 'presets',\n  searchResults = 'searchResults',\n  tokenCount = 'tokenCount'\n}\n\nexport const useAbortRequestWithMessage = (): UseMutationResult<\n  void,\n  Error,\n  { endpoint: string; abortKey: string; message: string }\n> => {\n  return useMutation(({ endpoint, abortKey, message }) =>\n    dataService.abortRequestWithMessage(endpoint, abortKey, message)\n  );\n};\n\nexport const useGetUserQuery = (\n  config?: UseQueryOptions<t.TUser>\n): QueryObserverResult<t.TUser> => {\n  return useQuery<t.TUser>([QueryKeys.user], () => dataService.getUser(), {\n    refetchOnWindowFocus: false,\n    refetchOnReconnect: false,\n    refetchOnMount: false,\n    retry: false,\n    ...config\n  });\n};\n\nexport const useGetMessagesByConvoId = (\n  id: string,\n  config?: UseQueryOptions<t.TMessage[]>\n): QueryObserverResult<t.TMessage[]> => {\n  return useQuery<t.TMessage[]>(\n    [QueryKeys.messages, id],\n    () => dataService.getMessagesByConvoId(id),\n    {\n      refetchOnWindowFocus: false,\n      refetchOnReconnect: false,\n      refetchOnMount: false,\n      ...config\n    }\n  );\n};\n\nexport const useGetConversationByIdQuery = (\n  id: string,\n  config?: UseQueryOptions<t.TConversation>\n): QueryObserverResult<t.TConversation> => {\n  return useQuery<t.TConversation>(\n    [QueryKeys.conversation, id],\n    () => dataService.getConversationById(id),\n    {\n      refetchOnWindowFocus: false,\n      refetchOnReconnect: false,\n      refetchOnMount: false,\n      ...config\n    }\n  );\n};\n\n//This isn't ideal because its just a query and we're using mutation, but it was the only way\n//to make it work with how the Chat component is structured\nexport const useGetConversationByIdMutation = (id: string): UseMutationResult<t.TConversation> => {\n  const queryClient = useQueryClient();\n  return useMutation(() => dataService.getConversationById(id), {\n    onSuccess: (res: t.TConversation) => {\n      queryClient.invalidateQueries([QueryKeys.conversation, id]);\n    }\n  });\n};\n\nexport const useUpdateConversationMutation = (\n  id: string\n): UseMutationResult<\n  t.TUpdateConversationResponse,\n  unknown,\n  t.TUpdateConversationRequest,\n  unknown\n> => {\n  const queryClient = useQueryClient();\n  return useMutation(\n    (payload: t.TUpdateConversationRequest) => dataService.updateConversation(payload),\n    {\n      onSuccess: () => {\n        queryClient.invalidateQueries([QueryKeys.conversation, id]);\n        queryClient.invalidateQueries([QueryKeys.allConversations]);\n      }\n    }\n  );\n};\n\nexport const useDeleteConversationMutation = (\n  id?: string\n): UseMutationResult<\n  t.TDeleteConversationResponse,\n  unknown,\n  t.TDeleteConversationRequest,\n  unknown\n> => {\n  const queryClient = useQueryClient();\n  return useMutation(\n    (payload: t.TDeleteConversationRequest) => dataService.deleteConversation(payload),\n    {\n      onSuccess: () => {\n        queryClient.invalidateQueries([QueryKeys.conversation, id]);\n        queryClient.invalidateQueries([QueryKeys.allConversations]);\n      }\n    }\n  );\n};\n\nexport const useClearConversationsMutation = (): UseMutationResult<unknown> => {\n  const queryClient = useQueryClient();\n  return useMutation(() => dataService.clearAllConversations(), {\n    onSuccess: () => {\n      queryClient.invalidateQueries([QueryKeys.allConversations]);\n    }\n  });\n};\n\nexport const useGetConversationsQuery = (\n  pageNumber: string,\n  config?: UseQueryOptions<t.TConversation[]>\n): QueryObserverResult<t.TConversation[]> => {\n  return useQuery<t.TConversation[]>(\n    [QueryKeys.allConversations, pageNumber],\n    () => dataService.getConversations(pageNumber),\n    {\n      refetchOnReconnect: false,\n      refetchOnMount: false,\n      retry: 1,\n      ...config\n    }\n  );\n};\n\nexport const useGetSearchEnabledQuery = (\n  config?: UseQueryOptions<boolean>\n): QueryObserverResult<boolean> => {\n  return useQuery<boolean>([QueryKeys.searchEnabled], () => dataService.getSearchEnabled(), {\n    refetchOnWindowFocus: false,\n    refetchOnReconnect: false,\n    refetchOnMount: false,\n    ...config\n  });\n};\n\nexport const useGetEndpointsQuery = (): QueryObserverResult<t.TEndpoints> => {\n  return useQuery([QueryKeys.endpoints], () => dataService.getAIEndpoints(), {\n    refetchOnWindowFocus: false,\n    refetchOnReconnect: false,\n    refetchOnMount: false\n  });\n};\n\nexport const useCreatePresetMutation = (): UseMutationResult<\n  t.TPreset[],\n  unknown,\n  t.TPreset,\n  unknown\n> => {\n  const queryClient = useQueryClient();\n  return useMutation((payload: t.TPreset) => dataService.createPreset(payload), {\n    onSuccess: () => {\n      queryClient.invalidateQueries([QueryKeys.presets]);\n    }\n  });\n};\n\nexport const useUpdatePresetMutation = (): UseMutationResult<\n  t.TPreset[],\n  unknown,\n  t.TPreset,\n  unknown\n> => {\n  const queryClient = useQueryClient();\n  return useMutation((payload: t.TPreset) => dataService.updatePreset(payload), {\n    onSuccess: () => {\n      queryClient.invalidateQueries([QueryKeys.presets]);\n    }\n  });\n};\n\nexport const useGetPresetsQuery = (\n  config?: UseQueryOptions<t.TPreset[]>\n): QueryObserverResult<t.TPreset[], unknown> => {\n  return useQuery<t.TPreset[]>([QueryKeys.presets], () => dataService.getPresets(), {\n    refetchOnWindowFocus: false,\n    refetchOnReconnect: false,\n    refetchOnMount: false,\n    ...config\n  });\n};\n\nexport const useDeletePresetMutation = (): UseMutationResult<\n  t.TPreset[],\n  unknown,\n  t.TPreset | {},\n  unknown\n> => {\n  const queryClient = useQueryClient();\n  return useMutation((payload: t.TPreset | {}) => dataService.deletePreset(payload), {\n    onSuccess: () => {\n      queryClient.invalidateQueries([QueryKeys.presets]);\n    }\n  });\n};\n\nexport const useSearchQuery = (\n  searchQuery: string,\n  pageNumber: string,\n  config?: UseQueryOptions<t.TSearchResults>\n): QueryObserverResult<t.TSearchResults> => {\n  return useQuery<t.TSearchResults>(\n    [QueryKeys.searchResults, pageNumber, searchQuery],\n    () => dataService.searchConversations(searchQuery, pageNumber),\n    {\n      refetchOnWindowFocus: false,\n      refetchOnReconnect: false,\n      refetchOnMount: false,\n      ...config\n    }\n  );\n};\n\nexport const useUpdateTokenCountMutation = (): UseMutationResult<\n  t.TUpdateTokenCountResponse,\n  unknown,\n  string,\n  unknown\n> => {\n  const queryClient = useQueryClient();\n  return useMutation((text: string) => dataService.updateTokenCount(text), {\n    onSuccess: () => {\n      queryClient.invalidateQueries([QueryKeys.tokenCount]);\n    }\n  });\n};\n\nexport const useLoginUserMutation = (): UseMutationResult<\n  t.TLoginUserResponse,\n  unknown,\n  t.TLoginUserRequest,\n  unknown\n> => {\n  const queryClient = useQueryClient();\n  return useMutation((payload: t.TLoginUserRequest) => dataService.login(payload), {\n    onSuccess: () => {\n      queryClient.invalidateQueries([QueryKeys.user]);\n    }\n  });\n};\n\nexport const useRegisterUserMutation = (): UseMutationResult<\n  t.TRegisterUserResponse,\n  unknown,\n  t.TRegisterUser,\n  unknown\n> => {\n  const queryClient = useQueryClient();\n  return useMutation((payload: t.TRegisterUser) => dataService.register(payload), {\n    onSuccess: () => {\n      queryClient.invalidateQueries([QueryKeys.user]);\n    }\n  });\n};\n\nexport const useLogoutUserMutation = (): UseMutationResult<unknown> => {\n  const queryClient = useQueryClient();\n  return useMutation(() => dataService.logout(), {\n    onSuccess: () => {\n      queryClient.invalidateQueries([QueryKeys.user]);\n    }\n  });\n};\n\nexport const useRefreshTokenMutation = (): UseMutationResult<\n  t.TRefreshTokenResponse,\n  unknown,\n  unknown,\n  unknown\n> => {\n  return useMutation(() => dataService.refreshToken(), {});\n};\n\nexport const useRequestPasswordResetMutation = (): UseMutationResult<unknown> => {\n  return useMutation((payload: t.TRequestPasswordReset) =>\n    dataService.requestPasswordReset(payload)\n  );\n};\n\nexport const useResetPasswordMutation = (): UseMutationResult<unknown> => {\n  return useMutation((payload: t.TResetPassword) => dataService.resetPassword(payload));\n};\n","import axios from 'axios';\n\nexport function setAcceptLanguageHeader(value: string): void {\n  axios.defaults.headers.common['Accept-Language'] = value;\n}\n\nexport function setTokenHeader(token: string) {\n  axios.defaults.headers.common['Authorization'] = 'Bearer ' + token;\n}\n","import {\n  useState,\n  useCallback,\n  useEffect,\n  useMemo,\n  ReactNode,\n  createContext,\n  useContext\n} from 'react';\nimport {\n  TUser,\n  TLoginResponse,\n  setTokenHeader,\n  useLoginUserMutation,\n  useLogoutUserMutation,\n  useGetUserQuery,\n  useRefreshTokenMutation,\n  TLoginUser\n} from '~/data-provider';\nimport { useNavigate, useLocation } from 'react-router-dom';\n\nexport type TAuthContext = {\n  user: TUser | undefined;\n  token: string | undefined;\n  isAuthenticated: boolean;\n  isLoading: boolean;\n  error: string | undefined;\n  login: (data: TLoginUser) => void;\n  logout: () => void;\n};\n\nexport type TUserContext = {\n  user?: TUser | undefined;\n  token: string | undefined;\n  isAuthenticated: boolean;\n  redirect?: string;\n};\n\nconst AuthContext = createContext<TAuthContext | undefined>(undefined);\n\nconst AuthContextProvider = ({ children }: { children: ReactNode }) => {\n  const [user, setUser] = useState<TUser | undefined>(undefined);\n  const [token, setToken] = useState<string | undefined>(undefined);\n  const [error, setError] = useState<string | undefined>(undefined);\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n  const [isAuthenticated, setIsAuthenticated] = useState<boolean>(false);\n\n  const navigate = useNavigate();\n\n  const loginUser = useLoginUserMutation();\n  const logoutUser = useLogoutUserMutation();\n  const userQuery = useGetUserQuery({ enabled: !!token });\n  const refreshToken = useRefreshTokenMutation();\n\n  const location = useLocation();\n\n  const setUserContext = (userContext: TUserContext) => {\n    const { token, isAuthenticated, user, redirect } = userContext;\n    if (user) {\n      setUser(user);\n    }\n    setToken(token);\n    setTokenHeader(token);\n    setIsAuthenticated(isAuthenticated);\n    if (redirect) {\n      navigate(redirect);\n    }\n  };\n\n  const getCookieValue = (key) => {\n    let keyValue = document.cookie.match('(^|;) ?' + key + '=([^;]*)(;|$)');\n    return keyValue ? keyValue[2] : null;\n  };\n\n  const login = (data: TLoginUser) => {\n    loginUser.mutate(data, {\n      onSuccess: (data: TLoginResponse) => {\n        const { user, token } = data;\n        setUserContext({ token, isAuthenticated: true, user, redirect: '/chat/new' });\n      },\n      onError: (error) => {\n        setError(error.message);\n      }\n    });\n  };\n\n  const logout = () => {\n    document.cookie.split(';').forEach((c) => {\n      document.cookie = c\n        .replace(/^ +/, '')\n        .replace(/=.*/, '=;expires=' + new Date().toUTCString() + ';path=/');\n    });\n    logoutUser.mutate(undefined, {\n      onSuccess: () => {\n        setUserContext({\n          token: undefined,\n          isAuthenticated: false,\n          user: undefined,\n          redirect: '/login'\n        });\n      },\n      onError: (error) => {\n        setError(error.message);\n      }\n    });\n  };\n\n  useEffect(() => {\n    if (userQuery.data) {\n      setUser(userQuery.data);\n    } else if (userQuery.isError) {\n      setError(userQuery.error.message);\n      navigate('/login');\n    }\n    if (error && isAuthenticated) {\n      setError(undefined);\n    }\n    if (!token || !isAuthenticated) {\n      const tokenFromCookie = getCookieValue('token');\n      if (tokenFromCookie) {\n        // debugger;\n        setUserContext({ token: tokenFromCookie, isAuthenticated: true, user: userQuery.data });\n      } else {\n        navigate('/login');\n      }\n    }\n  }, [token, isAuthenticated, userQuery.data, userQuery.isError]);\n\n  // const silentRefresh = useCallback(() => {\n  //   refreshToken.mutate(undefined, {\n  //     onSuccess: (data: TLoginResponse) => {\n  //       const { user, token } = data;\n  //       setUserContext({ token, isAuthenticated: true, user });\n  //     },\n  //     onError: error => {\n  //       setError(error.message);\n  //     }\n  //   });\n  //   setTimeout(silentRefresh, 5 * 60 * 1000);\n  // }, [setUserContext]);\n\n  useEffect(() => {\n    if (loginUser.isLoading || logoutUser.isLoading) {\n      setIsLoading(true);\n    } else {\n      setIsLoading(false);\n    }\n  }, [loginUser.isLoading, logoutUser.isLoading]);\n\n  // useEffect(() => {\n  //   if (token)\n  //   silentRefresh();\n  // }, [token, silentRefresh]);\n\n  // Make the provider update only when it should\n  const memoedValue = useMemo(\n    () => ({\n      user,\n      token,\n      isAuthenticated,\n      isLoading,\n      error,\n      login,\n      logout\n    }),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [user, isLoading, error, isAuthenticated, token]\n  );\n\n  return <AuthContext.Provider value={memoedValue}>{children}</AuthContext.Provider>;\n};\n\nconst useAuthContext = () => {\n  const context = useContext(AuthContext);\n\n  if (context === undefined) {\n    throw new Error('useAuthContext should be used inside AuthProvider');\n  }\n\n  return context;\n};\n\nexport { AuthContextProvider, useAuthContext };\n","import { useEffect } from 'react';\nimport { useRecoilValue, useResetRecoilState, useSetRecoilState } from 'recoil';\nimport { SSE } from '~/data-provider/sse.mjs';\nimport createPayload from '~/data-provider/createPayload';\nimport store from '~/store';\nimport { useAuthContext } from '~/hooks/AuthContext';\n\nexport default function MessageHandler() {\n  const submission = useRecoilValue(store.submission);\n  const setIsSubmitting = useSetRecoilState(store.isSubmitting);\n  const setMessages = useSetRecoilState(store.messages);\n  const setConversation = useSetRecoilState(store.conversation);\n  const resetLatestMessage = useResetRecoilState(store.latestMessage);\n  const { token } = useAuthContext();\n\n  const { refreshConversations } = store.useConversations();\n\n  const messageHandler = (data, submission) => {\n    const { messages, message, initialResponse, isRegenerate = false } = submission;\n\n    if (isRegenerate) {\n      setMessages([\n        ...messages,\n        {\n          ...initialResponse,\n          text: data,\n          parentMessageId: message?.overrideParentMessageId,\n          messageId: message?.overrideParentMessageId + '_',\n          submitting: true\n          // unfinished: true\n        }\n      ]);\n    } else {\n      setMessages([\n        ...messages,\n        message,\n        {\n          ...initialResponse,\n          text: data,\n          parentMessageId: message?.messageId,\n          messageId: message?.messageId + '_',\n          submitting: true\n          // unfinished: true\n        }\n      ]);\n    }\n  };\n\n  const cancelHandler = (data, submission) => {\n    const { messages, isRegenerate = false } = submission;\n\n    const { requestMessage, responseMessage, conversation } = data;\n\n    // update the messages\n    if (isRegenerate) {\n      setMessages([...messages, responseMessage]);\n    } else {\n      setMessages([...messages, requestMessage, responseMessage]);\n    }\n    setIsSubmitting(false);\n\n    // refresh title\n    if (requestMessage.parentMessageId == '00000000-0000-0000-0000-000000000000') {\n      setTimeout(() => {\n        refreshConversations();\n      }, 2000);\n\n      // in case it takes too long.\n      setTimeout(() => {\n        refreshConversations();\n      }, 5000);\n    }\n\n    setConversation((prevState) => ({\n      ...prevState,\n      ...conversation\n    }));\n  };\n\n  const createdHandler = (data, submission) => {\n    const { messages, message, initialResponse, isRegenerate = false } = submission;\n\n    if (isRegenerate)\n      setMessages([\n        ...messages,\n        {\n          ...initialResponse,\n          parentMessageId: message?.overrideParentMessageId,\n          messageId: message?.overrideParentMessageId + '_',\n          submitting: true\n        }\n      ]);\n    else\n      setMessages([\n        ...messages,\n        message,\n        {\n          ...initialResponse,\n          parentMessageId: message?.messageId,\n          messageId: message?.messageId + '_',\n          submitting: true\n        }\n      ]);\n\n    const { conversationId } = message;\n    setConversation((prevState) => ({\n      ...prevState,\n      conversationId\n    }));\n    resetLatestMessage();\n  };\n\n  const finalHandler = (data, submission) => {\n    const { messages, isRegenerate = false } = submission;\n\n    const { requestMessage, responseMessage, conversation } = data;\n\n    // update the messages\n    if (isRegenerate) {\n      setMessages([...messages, responseMessage]);\n    } else {\n      setMessages([...messages, requestMessage, responseMessage]);\n    }\n    setIsSubmitting(false);\n\n    // refresh title\n    if (requestMessage.parentMessageId == '00000000-0000-0000-0000-000000000000') {\n      setTimeout(() => {\n        refreshConversations();\n      }, 2000);\n\n      // in case it takes too long.\n      setTimeout(() => {\n        refreshConversations();\n      }, 5000);\n    }\n\n    setConversation((prevState) => ({\n      ...prevState,\n      ...conversation\n    }));\n  };\n\n  const errorHandler = (data, submission) => {\n    const { messages, message } = submission;\n\n    console.log('Error:', data);\n    const errorResponse = {\n      ...data,\n      error: true,\n      parentMessageId: message?.messageId\n    };\n    setIsSubmitting(false);\n    setMessages([...messages, message, errorResponse]);\n    return;\n  };\n\n  const abortConversation = (conversationId) => {\n    console.log(submission);\n    const { endpoint } = submission?.conversation || {};\n\n    fetch(`/api/ask/${endpoint}/abort`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${token}`\n      },\n      body: JSON.stringify({\n        abortKey: conversationId\n      })\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        console.log('aborted', data);\n        cancelHandler(data, submission);\n      })\n      .catch((error) => {\n        console.error('Error aborting request');\n        console.error(error);\n        // errorHandler({ text: 'Error aborting request' }, { ...submission, message });\n      });\n    return;\n  };\n\n  useEffect(() => {\n    if (submission === null) return;\n    if (Object.keys(submission).length === 0) return;\n\n    let { message } = submission;\n\n    const { server, payload } = createPayload(submission);\n\n    const events = new SSE(server, {\n      payload: JSON.stringify(payload),\n      headers: { 'Content-Type': 'application/json', Authorization: `Bearer ${token}` }\n    });\n\n    events.onmessage = (e) => {\n      const data = JSON.parse(e.data);\n\n      if (data.final) {\n        finalHandler(data, { ...submission, message });\n        console.log('final', data);\n      }\n      if (data.created) {\n        message = {\n          ...data.message,\n          overrideParentMessageId: message?.overrideParentMessageId\n        };\n        createdHandler(data, { ...submission, message });\n        console.log('created', message);\n      } else {\n        let text = data.text || data.response;\n        if (data.initial) console.log(data);\n\n        if (data.message) {\n          messageHandler(text, { ...submission, message });\n        }\n      }\n    };\n\n    events.onopen = () => console.log('connection is opened');\n\n    events.oncancel = () =>\n      abortConversation(message?.conversationId || submission?.conversationId);\n\n    events.onerror = function (e) {\n      console.log('error in opening conn.');\n      events.close();\n\n      const data = JSON.parse(e.data);\n\n      errorHandler(data, { ...submission, message });\n    };\n\n    setIsSubmitting(true);\n    events.stream();\n\n    return () => {\n      const isCancelled = events.readyState <= 1;\n      events.close();\n      // setSource(null);\n      if (isCancelled) {\n        const e = new Event('cancel');\n        events.dispatchEvent(e);\n      }\n      setIsSubmitting(false);\n    };\n  }, [submission]);\n\n  return null;\n}\n","import React from 'react';\r\nimport store from '~/store';\r\n\r\nexport default function NewChat() {\r\n  const { newConversation } = store.useConversation();\r\n\r\n  const clickHandler = () => {\r\n    // dispatch(setInputValue(''));\r\n    // dispatch(setQuery(''));\r\n    newConversation();\r\n  };\r\n\r\n  return (\r\n    <a\r\n      onClick={clickHandler}\r\n      className=\"mb-2 flex flex-shrink-0 cursor-pointer items-center gap-3 rounded-md border border-white/20 px-3 py-3 text-sm text-white transition-colors duration-200 hover:bg-gray-500/10\"\r\n    >\r\n      <svg\r\n        stroke=\"currentColor\"\r\n        fill=\"none\"\r\n        strokeWidth=\"2\"\r\n        viewBox=\"0 0 24 24\"\r\n        strokeLinecap=\"round\"\r\n        strokeLinejoin=\"round\"\r\n        className=\"h-4 w-4\"\r\n        height=\"1em\"\r\n        width=\"1em\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n      >\r\n        <line x1=\"12\" y1=\"5\" x2=\"12\" y2=\"19\" />\r\n        <line x1=\"5\" y1=\"12\" x2=\"19\" y2=\"12\" />\r\n      </svg>\r\n      新的对话\r\n    </a>\r\n  );\r\n}\r\n","import { clsx } from 'clsx';\nimport { twMerge } from 'tailwind-merge';\n\nexport function cn(...inputs) {\n  return twMerge(clsx(inputs));\n}\n\nexport const languages = [\n  'java',\n  'c',\n  'markdown',\n  'css',\n  'html',\n  'xml',\n  'bash',\n  'json',\n  'yaml',\n  'jsx',\n  'python',\n  'c++',\n  'javascript',\n  'csharp',\n  'php',\n  'typescript',\n  'swift',\n  'objectivec',\n  'sql',\n  'r',\n  'kotlin',\n  'ruby',\n  'go',\n  'x86asm',\n  'matlab',\n  'perl',\n  'pascal'\n];\n","import { cn } from '~/utils/';\n\nexport default function Panel({ open = false, className }) {\n  const openPanel = (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"24\"\n      height=\"24\"\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      stroke=\"currentColor\"\n      strokeWidth=\"1.5\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      className={cn('lucide lucide-panel-right-close', className)}\n    >\n      <rect width=\"18\" height=\"18\" x=\"3\" y=\"3\" rx=\"2\" ry=\"2\" />\n      <line x1=\"15\" x2=\"15\" y1=\"3\" y2=\"21\" />\n      <path d=\"m8 9 3 3-3 3\" />\n    </svg>\n  );\n\n  const closePanel = (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"24\"\n      height=\"24\"\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      stroke=\"currentColor\"\n      strokeWidth=\"1.5\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      className={cn('lucide lucide-panel-left-close', className)}\n    >\n      <rect width=\"18\" height=\"18\" x=\"3\" y=\"3\" rx=\"2\" ry=\"2\" />\n      <path d=\"M9 3v18\" />\n      <path d=\"m16 15-3-3 3-3\" />\n    </svg>\n  );\n\n  if (open) {\n    return openPanel;\n  } else {\n    return closePanel;\n  }\n}\n","import React from 'react';\n\nexport default function Spinner() {\n  return (\n    <svg\n      stroke=\"currentColor\"\n      fill=\"none\"\n      strokeWidth=\"2\"\n      viewBox=\"0 0 24 24\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      className=\"m-auto animate-spin text-center\"\n      height=\"1em\"\n      width=\"1em\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <line x1=\"12\" y1=\"2\" x2=\"12\" y2=\"6\" />\n      <line x1=\"12\" y1=\"18\" x2=\"12\" y2=\"22\" />\n      <line x1=\"4.93\" y1=\"4.93\" x2=\"7.76\" y2=\"7.76\" />\n      <line x1=\"16.24\" y1=\"16.24\" x2=\"19.07\" y2=\"19.07\" />\n      <line x1=\"2\" y1=\"12\" x2=\"6\" y2=\"12\" />\n      <line x1=\"18\" y1=\"12\" x2=\"22\" y2=\"12\" />\n      <line x1=\"4.93\" y1=\"19.07\" x2=\"7.76\" y2=\"16.24\" />\n      <line x1=\"16.24\" y1=\"7.76\" x2=\"19.07\" y2=\"4.93\" />\n    </svg>\n  );\n}\n","import React from 'react';\n\nexport default function Pages({ pageNumber, pages, nextPage, previousPage }) {\n  const clickHandler = (func) => async (e) => {\n    e.preventDefault();\n    await func();\n  };\n\n  return pageNumber == 1 && pages == 1 ? null : (\n    <div className=\"m-auto mb-2 mt-4 flex items-center justify-center gap-2\">\n      <button\n        onClick={clickHandler(previousPage)}\n        className={\n          'btn btn-small bg-transition m-auto flex gap-2 transition hover:bg-gray-800 disabled:text-gray-300 dark:text-white dark:disabled:text-gray-400' +\n          (pageNumber <= 1 ? ' hidden-visibility' : '')\n        }\n        disabled={pageNumber <= 1}\n      >\n        &lt;&lt;\n      </button>\n      <span className=\"flex-none text-gray-400\">\n        {pageNumber} / {pages}\n      </span>\n      <button\n        onClick={clickHandler(nextPage)}\n        className={\n          'btn btn-small bg-transition m-auto flex gap-2 transition hover:bg-gray-800 disabled:text-gray-300 dark:text-white dark:disabled:text-gray-400' +\n          (pageNumber >= pages ? ' hidden-visibility' : '')\n        }\n        disabled={pageNumber >= pages}\n      >\n        &gt;&gt;\n      </button>\n    </div>\n  );\n}\n","import React from 'react';\n\nexport default function RenameIcon() {\n  return (\n    <svg\n      stroke=\"currentColor\"\n      fill=\"none\"\n      strokeWidth=\"2\"\n      viewBox=\"0 0 24 24\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      className=\"h-4 w-4\"\n      height=\"1em\"\n      width=\"1em\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path d=\"M12 20h9\" />\n      <path d=\"M16.5 3.5a2.121 2.121 0 0 1 3 3L7 19l-4 1 1-4L16.5 3.5z\" />\n    </svg>\n  );\n}\n","import React from 'react';\n\nexport default function CheckMark() {\n  return (\n    <svg\n      stroke=\"currentColor\"\n      fill=\"none\"\n      strokeWidth=\"2\"\n      viewBox=\"0 0 24 24\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      className=\"h-4 w-4\"\n      height=\"1em\"\n      width=\"1em\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <polyline points=\"20 6 9 17 4 12\" />\n    </svg>\n  );\n}\n","import React from 'react';\nimport RenameIcon from '../svg/RenameIcon';\nimport CheckMark from '../svg/CheckMark';\n\nexport default function RenameButton({ renaming, renameHandler, onRename, twcss }) {\n  const handler = renaming ? onRename : renameHandler;\n  const classProp = { className: 'p-1 hover:text-white' };\n  if (twcss) {\n    classProp.className = twcss;\n  }\n  return (\n    <button {...classProp} onClick={handler}>\n      {renaming ? <CheckMark /> : <RenameIcon />}\n    </button>\n  );\n}\n","import React from 'react';\n\nexport default function TrashIcon() {\n  return (\n    <svg\n      stroke=\"currentColor\"\n      fill=\"none\"\n      strokeWidth=\"2\"\n      viewBox=\"0 0 24 24\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      className=\"h-4 w-4\"\n      height=\"1em\"\n      width=\"1em\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <polyline points=\"3 6 5 6 21 6\" />\n      <path d=\"M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2\" />\n      <line x1=\"10\" y1=\"11\" x2=\"10\" y2=\"17\" />\n      <line x1=\"14\" y1=\"11\" x2=\"14\" y2=\"17\" />\n    </svg>\n  );\n}\n","import React from 'react';\n\nexport default function CrossIcon() {\n  return (\n    <svg\n      stroke=\"currentColor\"\n      fill=\"none\"\n      strokeWidth=\"2\"\n      viewBox=\"0 0 24 24\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      className=\"h-4 w-4\"\n      height=\"1em\"\n      width=\"1em\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <line x1=\"18\" y1=\"6\" x2=\"6\" y2=\"18\" />\n      <line x1=\"6\" y1=\"6\" x2=\"18\" y2=\"18\" />\n    </svg>\n  );\n}\n","import { useEffect } from 'react';\nimport TrashIcon from '../svg/TrashIcon';\nimport CrossIcon from '../svg/CrossIcon';\nimport { useRecoilValue } from 'recoil';\nimport { useDeleteConversationMutation } from '~/data-provider';\n\nimport store from '~/store';\n\nexport default function DeleteButton({ conversationId, renaming, cancelHandler, retainView }) {\n  const currentConversation = useRecoilValue(store.conversation) || {};\n  const { newConversation } = store.useConversation();\n  const { refreshConversations } = store.useConversations();\n\n  const deleteConvoMutation = useDeleteConversationMutation(conversationId);\n\n  useEffect(() => {\n    if (deleteConvoMutation.isSuccess) {\n      if (currentConversation?.conversationId == conversationId) newConversation();\n\n      refreshConversations();\n      retainView();\n    }\n  }, [deleteConvoMutation.isSuccess]);\n\n  const clickHandler = () => {\n    deleteConvoMutation.mutate({ conversationId, source: 'button' });\n  };\n\n  const handler = renaming ? cancelHandler : clickHandler;\n\n  return (\n    <button className=\"p-1 hover:text-white\" onClick={handler}>\n      {renaming ? <CrossIcon /> : <TrashIcon />}\n    </button>\n  );\n}\n","import React from 'react';\n\nexport default function ConvoIcon() {\n  return (\n    <svg\n      stroke=\"currentColor\"\n      fill=\"none\"\n      strokeWidth=\"2\"\n      viewBox=\"0 0 24 24\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      className=\"h-4 w-4\"\n      height=\"1em\"\n      width=\"1em\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path d=\"M21 15a2 2 0 0 1-2 2H7l-4 4V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2z\" />\n    </svg>\n  );\n}\n","import { useState, useRef, useEffect } from 'react';\nimport { useRecoilState, useSetRecoilState } from 'recoil';\nimport { useUpdateConversationMutation } from '~/data-provider';\nimport RenameButton from './RenameButton';\nimport DeleteButton from './DeleteButton';\nimport ConvoIcon from '../svg/ConvoIcon';\n\nimport store from '~/store';\n\nexport default function Conversation({ conversation, retainView }) {\n  const [currentConversation, setCurrentConversation] = useRecoilState(store.conversation);\n  const setSubmission = useSetRecoilState(store.submission);\n\n  const { refreshConversations } = store.useConversations();\n  const { switchToConversation } = store.useConversation();\n\n  const updateConvoMutation = useUpdateConversationMutation(currentConversation?.conversationId);\n\n  const [renaming, setRenaming] = useState(false);\n  const inputRef = useRef(null);\n\n  const { conversationId, title } = conversation;\n\n  const [titleInput, setTitleInput] = useState(title);\n\n  const clickHandler = async () => {\n    if (currentConversation?.conversationId === conversationId) {\n      return;\n    }\n\n    // stop existing submission\n    setSubmission(null);\n\n    // set document title\n    document.title = title;\n\n    // set conversation to the new conversation\n    switchToConversation(conversation);\n  };\n\n  const renameHandler = (e) => {\n    e.preventDefault();\n    setTitleInput(title);\n    setRenaming(true);\n    setTimeout(() => {\n      inputRef.current.focus();\n    }, 25);\n  };\n\n  const cancelHandler = (e) => {\n    e.preventDefault();\n    setRenaming(false);\n  };\n\n  const onRename = (e) => {\n    e.preventDefault();\n    setRenaming(false);\n    if (titleInput === title) {\n      return;\n    }\n    updateConvoMutation.mutate({ conversationId, title: titleInput });\n  };\n\n  useEffect(() => {\n    if (updateConvoMutation.isSuccess) {\n      refreshConversations();\n      if (conversationId == currentConversation?.conversationId) {\n        setCurrentConversation((prevState) => ({\n          ...prevState,\n          title: titleInput\n        }));\n      }\n    }\n  }, [updateConvoMutation.isSuccess]);\n\n  const handleKeyDown = (e) => {\n    if (e.key === 'Enter') {\n      onRename(e);\n    }\n  };\n\n  const aProps = {\n    className:\n      'animate-flash group relative flex cursor-pointer items-center gap-3 break-all rounded-md bg-gray-800 py-3 px-3 pr-14 hover:bg-gray-800'\n  };\n\n  if (currentConversation?.conversationId !== conversationId) {\n    aProps.className =\n      'group relative flex cursor-pointer items-center gap-3 break-all rounded-md py-3 px-3 hover:bg-[#2A2B32] hover:pr-4';\n  }\n\n  return (\n    <a onClick={() => clickHandler()} {...aProps}>\n      <ConvoIcon />\n      <div className=\"relative max-h-5 flex-1 overflow-hidden text-ellipsis break-all\">\n        {renaming === true ? (\n          <input\n            ref={inputRef}\n            type=\"text\"\n            className=\"m-0 mr-0 w-full border border-blue-500 bg-transparent p-0 text-sm leading-tight outline-none\"\n            value={titleInput}\n            onChange={(e) => setTitleInput(e.target.value)}\n            onBlur={onRename}\n            onKeyDown={handleKeyDown}\n          />\n        ) : (\n          title\n        )}\n      </div>\n      {currentConversation?.conversationId === conversationId ? (\n        <div className=\"visible absolute right-1 z-10 flex text-gray-300\">\n          <RenameButton\n            conversationId={conversationId}\n            renaming={renaming}\n            renameHandler={renameHandler}\n            onRename={onRename}\n          />\n          <DeleteButton\n            conversationId={conversationId}\n            renaming={renaming}\n            cancelHandler={cancelHandler}\n            retainView={retainView}\n          />\n        </div>\n      ) : (\n        <div className=\"absolute inset-y-0 right-0 z-10 w-8 rounded-r-md bg-gradient-to-l from-gray-900 group-hover:from-[#2A2B32]\" />\n      )}\n    </a>\n  );\n}\n","import React from 'react';\nimport Conversation from './Conversation';\n\nexport default function Conversations({ conversations, conversationId, moveToTop }) {\n  return (\n    <>\n      {conversations &&\n        conversations.length > 0 &&\n        conversations.map((convo) => {\n          return (\n            <Conversation key={convo.conversationId} conversation={convo} retainView={moveToTop} />\n          );\n        })}\n    </>\n  );\n}\n","import { forwardRef } from 'react';\nimport { Search } from 'lucide-react';\nimport { useRecoilState } from 'recoil';\nimport store from '~/store';\n\nconst SearchBar = forwardRef((props, ref) => {\n  const { clearSearch } = props;\n  const [searchQuery, setSearchQuery] = useRecoilState(store.searchQuery);\n\n  const handleKeyUp = (e) => {\n    const { value } = e.target;\n    if (e.keyCode === 8 && value === '') {\n      setSearchQuery('');\n      clearSearch();\n    }\n  };\n\n  const onChange = (e) => {\n    const { value } = e.target;\n    setSearchQuery(value);\n  };\n\n  return (\n    <div\n      ref={ref}\n      className=\"flex w-full cursor-pointer items-center gap-3 px-3 py-3 text-sm text-white transition-colors duration-200 hover:bg-gray-700\"\n    >\n      {<Search className=\"h-4 w-4\" />}\n      <input\n        type=\"text\"\n        className=\"m-0 mr-0 w-full border-none bg-transparent p-0 text-sm leading-tight outline-none\"\n        value={searchQuery}\n        onChange={onChange}\n        onKeyDown={(e) => {\n          e.code === 'Space' ? e.stopPropagation() : null;\n        }}\n        placeholder=\"搜索\"\n        onKeyUp={handleKeyUp}\n      />\n    </div>\n  );\n});\n\nexport default SearchBar;\n","import { forwardRef } from 'react';\nimport { cn } from '~/utils/';\n\nconst NavLink = forwardRef((props, ref) => {\n  const { svg, text, clickHandler, className = '' } = props;\n  const defaultProps = {};\n\n  defaultProps.className = cn(\n    'flex cursor-pointer items-center gap-3 rounded-md py-3 px-3 text-sm text-white transition-colors duration-200 hover:bg-gray-500/10',\n    className\n  );\n\n  if (clickHandler) {\n    defaultProps.onClick = clickHandler;\n  }\n\n  return (\n    <a {...defaultProps} ref={ref}>\n      {svg()}\n      {text}\n    </a>\n  );\n});\n\nexport default NavLink;\n","import * as React from 'react';\nimport { VariantProps, cva } from 'class-variance-authority';\n\nimport { cn } from '../../utils';\n\nconst buttonVariants = cva(\n  'inline-flex items-center justify-center rounded-md text-sm font-medium transition-colors focus:outline-none focus:ring-2 focus:ring-slate-400 focus:ring-offset-2 dark:hover:bg-slate-800 dark:hover:text-slate-100 disabled:opacity-50 dark:focus:ring-slate-400 disabled:pointer-events-none dark:focus:ring-offset-slate-900 data-[state=open]:bg-slate-100 dark:data-[state=open]:bg-slate-800',\n  {\n    variants: {\n      variant: {\n        default: 'bg-slate-900 text-white hover:bg-gray-900 dark:bg-slate-50 dark:text-slate-900',\n        destructive: 'bg-red-500 text-white hover:bg-red-600 dark:hover:bg-red-600',\n        outline:\n          'bg-transparent border border-slate-200 hover:bg-slate-100 dark:border-slate-700 dark:text-slate-100',\n        subtle:\n          'bg-slate-100 text-slate-900 hover:bg-slate-200 dark:bg-gray-900 dark:text-slate-100',\n        ghost:\n          'bg-transparent hover:bg-slate-100 dark:hover:bg-slate-800 dark:text-slate-100 dark:hover:text-slate-100 data-[state=open]:bg-transparent dark:data-[state=open]:bg-transparent',\n        link: 'bg-transparent underline-offset-4 hover:underline text-slate-900 dark:text-slate-100 hover:bg-transparent dark:hover:bg-transparent'\n      },\n      size: {\n        default: 'h-10 py-2 px-4',\n        sm: 'h-9 px-2 rounded-md',\n        lg: 'h-11 px-8 rounded-md'\n      }\n    },\n    defaultVariants: {\n      variant: 'default',\n      size: 'default'\n    }\n  }\n);\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, ...props }, ref) => {\n    return (\n      <button className={cn(buttonVariants({ variant, size, className }))} ref={ref} {...props} />\n    );\n  }\n);\nButton.displayName = 'Button';\n\nexport { Button, buttonVariants };\n","import * as React from 'react';\nimport * as DialogPrimitive from '@radix-ui/react-dialog';\nimport { Button } from '../ui/Button';\nimport { X } from 'lucide-react';\n\nimport { cn } from '../../utils';\n\nconst Dialog = DialogPrimitive.Root;\n\nconst DialogTrigger = DialogPrimitive.Trigger;\n\nconst DialogPortal = ({ className, children, ...props }: DialogPrimitive.DialogPortalProps) => (\n  <DialogPrimitive.Portal className={cn(className)} {...props}>\n    <div className=\"fixed inset-0 z-[999] flex items-start justify-center sm:items-center\">\n      {children}\n    </div>\n  </DialogPrimitive.Portal>\n);\nDialogPortal.displayName = DialogPrimitive.Portal.displayName;\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, children, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    className={cn(\n      'data-[state=closed]:animate-out data-[state=open]:fade-in data-[state=closed]:fade-out fixed inset-0 z-[999] bg-black/50 backdrop-blur-sm transition-all duration-100',\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n));\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName;\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        'animate-in data-[state=open]:fade-in-90 data-[state=open]:slide-in-from-bottom-10 sm:zoom-in-90 data-[state=open]:sm:slide-in-from-bottom-0 fixed z-[999] grid w-full gap-4 rounded-b-lg bg-white p-6 sm:max-w-lg sm:rounded-lg',\n        'dark:bg-slate-900',\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-slate-400 focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-slate-100 dark:focus:ring-slate-400 dark:focus:ring-offset-slate-900 dark:data-[state=open]:bg-slate-800\">\n        <X className=\"h-4 w-4 text-black dark:text-white\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n));\nDialogContent.displayName = DialogPrimitive.Content.displayName;\n\nconst DialogHeader = ({ className, ...props }: React.HTMLAttributes<HTMLDivElement>) => (\n  <div className={cn('flex flex-col space-y-2 text-center sm:text-left', className)} {...props} />\n);\nDialogHeader.displayName = 'DialogHeader';\n\nconst DialogFooter = ({ className, ...props }: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn('flex flex-col-reverse sm:flex-row sm:justify-between sm:space-x-2', className)}\n    {...props}\n  />\n);\nDialogFooter.displayName = 'DialogFooter';\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn('text-lg font-semibold text-slate-900', 'dark:text-slate-50', className)}\n    {...props}\n  />\n));\nDialogTitle.displayName = DialogPrimitive.Title.displayName;\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn('text-sm text-slate-500', 'dark:text-slate-400', className)}\n    {...props}\n  />\n));\nDialogDescription.displayName = DialogPrimitive.Description.displayName;\n\nconst DialogClose = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Close>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Close>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Close\n    ref={ref}\n    className={cn(\n      'mt-2 inline-flex h-10 items-center justify-center rounded-md border border-slate-200 bg-transparent px-4 py-2 text-sm font-semibold text-slate-900 transition-colors hover:bg-slate-100 focus:outline-none focus:ring-2 focus:ring-slate-400 focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 dark:border-slate-700 dark:text-slate-100 dark:hover:bg-gray-900 dark:focus:ring-slate-400 dark:focus:ring-offset-slate-900 sm:mt-0',\n      className\n    )}\n    {...props}\n  />\n));\nDialogClose.displayName = DialogPrimitive.Title.displayName;\n\nconst DialogButton = React.forwardRef<\n  React.ElementRef<typeof Button>,\n  React.ComponentPropsWithoutRef<typeof Button>\n>(({ className, ...props }, ref) => (\n  <Button\n    ref={ref}\n    variant=\"outline\"\n    className={cn(\n      'mt-2 inline-flex h-10 items-center justify-center rounded-md border border-slate-200 bg-transparent px-4 py-2 text-sm font-semibold text-slate-900 transition-colors hover:bg-slate-100 focus:outline-none focus:ring-2 focus:ring-slate-400 focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 dark:border-slate-700 dark:text-slate-100 dark:hover:bg-gray-900 dark:focus:ring-slate-400 dark:focus:ring-offset-slate-900 sm:mt-0',\n      className\n    )}\n    {...props}\n  />\n));\nDialogButton.displayName = DialogPrimitive.Title.displayName;\n\nexport {\n  Dialog,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n  DialogClose,\n  DialogButton\n};\n","import { forwardRef } from 'react';\nimport {\n  DialogClose,\n  DialogContent,\n  DialogDescription,\n  DialogFooter,\n  DialogHeader,\n  DialogTitle\n} from './Dialog.tsx';\nimport { cn } from '~/utils/';\n\nconst DialogTemplate = forwardRef((props, ref) => {\n  const {\n    title,\n    description,\n    main,\n    buttons,\n    leftButtons,\n    selection,\n    className\n  } = props;\n  const { selectHandler, selectClasses, selectText } = selection || {};\n\n  const defaultSelect =\n    'bg-gray-900 text-white transition-colors hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-gray-400 focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 dark:bg-gray-100 dark:text-gray-900 dark:hover:bg-gray-200 dark:focus:ring-gray-400 dark:focus:ring-offset-gray-900';\n  return (\n    <DialogContent ref={ref} className={cn('shadow-2xl dark:bg-gray-800', className || '')}>\n      <DialogHeader>\n        <DialogTitle className=\"text-gray-800 dark:text-white\">{title}</DialogTitle>\n        <DialogDescription className=\"text-gray-600 dark:text-gray-300\">\n          {description}\n        </DialogDescription>\n      </DialogHeader>\n      {main ? main : null}\n      <DialogFooter>\n        <div>{leftButtons ? leftButtons : null}</div>\n        <div className=\"flex gap-2\">\n          <DialogClose className=\"dark:hover:gray-400 border-gray-700\">Cancel</DialogClose>\n          {buttons ? buttons : null}\n          {selection ? (\n            <DialogClose\n              onClick={selectHandler}\n              className={`${\n                selectClasses || defaultSelect\n              } inline-flex h-10 items-center justify-center rounded-md border-none px-4 py-2 text-sm font-semibold`}\n            >\n              {selectText}\n            </DialogClose>\n          ) : null}\n        </div>\n      </DialogFooter>\n    </DialogContent>\n  );\n});\n\nexport default DialogTemplate;\n","import * as React from 'react';\n\nimport { cn } from '../../utils';\n\nexport interface InputProps extends React.InputHTMLAttributes<HTMLInputElement> {}\n\nconst Input = React.forwardRef<HTMLInputElement, InputProps>(({ className, ...props }, ref) => {\n  return (\n    <input\n      className={cn(\n        'flex h-10 w-full rounded-md border border-slate-300 bg-transparent px-3 py-2 text-sm placeholder:text-slate-400 focus:outline-none focus:ring-2 focus:ring-slate-400 focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 dark:border-slate-700 dark:text-slate-50 dark:focus:ring-slate-400 dark:focus:ring-offset-slate-900',\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  );\n});\nInput.displayName = 'Input';\n\nexport { Input };\n","import * as React from 'react';\nimport * as LabelPrimitive from '@radix-ui/react-label';\n\nimport { cn } from '../../utils';\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(\n      'text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70 dark:text-gray-200',\n      className\n    )}\n    {...props}\n  />\n));\nLabel.displayName = LabelPrimitive.Root.displayName;\n\nexport { Label };\n","'use client';\n\nimport * as React from 'react';\nimport * as CheckboxPrimitive from '@radix-ui/react-checkbox';\nimport { Check } from 'lucide-react';\nimport { cn } from '../../utils';\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      'peer h-4 w-4 shrink-0 rounded-sm border border-slate-300 focus:outline-none focus:ring-2 focus:ring-slate-400 focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 dark:border-slate-700 dark:text-slate-50 dark:focus:ring-slate-400 dark:focus:ring-offset-slate-900',\n      className\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator className={cn('flex items-center justify-center')}>\n      <Check className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n));\nCheckbox.displayName = CheckboxPrimitive.Root.displayName;\n\nexport { Checkbox };\n","import React from 'react';\nimport CheckMark from '../svg/CheckMark';\nimport { Listbox } from '@headlessui/react';\nimport { cn } from '~/utils/';\n\nfunction Dropdown({ value, onChange, options, className, containerClassName }) {\n  const currentOption =\n    options.find((element) => element === value || element?.value === value) ?? value;\n  return (\n    <div className={cn('flex items-center justify-center gap-2', containerClassName)}>\n      <div className=\"relative w-full\">\n        <Listbox value={value} onChange={onChange}>\n          <Listbox.Button\n            className={cn(\n              'relative flex w-full cursor-default flex-col rounded-md border border-black/10 bg-white py-2 pl-3 pr-10 text-left focus:border-green-600 focus:outline-none focus:ring-1 focus:ring-green-600 dark:border-white/20 dark:bg-gray-800 sm:text-sm',\n              className || ''\n            )}\n          >\n            <span className=\"inline-flex w-full truncate\">\n              <span className=\"flex h-6 items-center gap-1 truncate text-sm text-black dark:text-white\">\n                {currentOption?.display ?? value}\n              </span>\n            </span>\n            <span className=\"pointer-events-none absolute inset-y-0 right-0 flex items-center pr-2\">\n              <svg\n                stroke=\"currentColor\"\n                fill=\"none\"\n                strokeWidth=\"2\"\n                viewBox=\"0 0 24 24\"\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                className=\"h-4 w-4  text-gray-400\"\n                height=\"1em\"\n                width=\"1em\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n              >\n                <polyline points=\"6 9 12 15 18 9\"></polyline>\n              </svg>\n            </span>\n          </Listbox.Button>\n          <Listbox.Options className=\"absolute z-50 mt-2 max-h-60 w-full overflow-auto rounded bg-white text-base text-xs ring-1 ring-black/10 focus:outline-none dark:bg-gray-800 dark:ring-white/20 dark:last:border-0 md:w-[100%] \">\n            {options.map((item, i) => (\n              <Listbox.Option\n                key={i}\n                value={item?.value ?? item}\n                className=\"group relative flex h-[42px] cursor-pointer select-none items-center overflow-hidden border-b border-black/10 pl-3 pr-9 text-gray-900 last:border-0 hover:bg-[#ECECF1] dark:border-white/20 dark:text-white dark:hover:bg-gray-700\"\n              >\n                <span className=\"flex items-center gap-1.5 truncate\">\n                  <span\n                    className={cn(\n                      'flex h-6 items-center gap-1 text-gray-800 dark:text-gray-100',\n                      value === (item?.value ?? item) ? 'font-semibold' : ''\n                    )}\n                  >\n                    {item?.display ?? item}\n                  </span>\n                  {value === (item?.value ?? item) && (\n                    <span className=\"absolute inset-y-0 right-0 flex items-center pr-3 text-gray-800 dark:text-gray-100\">\n                      <CheckMark />\n                    </span>\n                  )}\n                </span>\n              </Listbox.Option>\n            ))}\n          </Listbox.Options>\n        </Listbox>\n      </div>\n    </div>\n  );\n}\n\nexport default Dropdown;\n","import React, { createContext, useRef, useContext, useCallback } from 'react';\nimport html2canvas from 'html2canvas';\n\nconst ScreenshotContext = createContext({});\n\nexport const useScreenshot = () => {\n  const { ref } = useContext(ScreenshotContext);\n\n  const takeScreenShot = (node) => {\n    if (!node) {\n      throw new Error('You should provide correct html node.');\n    }\n    return html2canvas(node).then((canvas) => {\n      const croppedCanvas = document.createElement('canvas');\n      const croppedCanvasContext = croppedCanvas.getContext('2d');\n      // init data\n      const cropPositionTop = 0;\n      const cropPositionLeft = 0;\n      const cropWidth = canvas.width;\n      const cropHeight = canvas.height;\n\n      croppedCanvas.width = cropWidth;\n      croppedCanvas.height = cropHeight;\n\n      croppedCanvasContext.drawImage(canvas, cropPositionLeft, cropPositionTop);\n\n      const base64Image = croppedCanvas.toDataURL('image/png', 1);\n\n      return base64Image;\n    });\n  };\n\n  const captureScreenshot = () => {\n    return takeScreenShot(ref.current);\n  };\n\n  return { screenshotTargetRef: ref, captureScreenshot };\n};\n\nexport const ScreenshotProvider = ({ children }) => {\n  const ref = useRef(null);\n\n  return <ScreenshotContext.Provider value={{ ref }}>{children}</ScreenshotContext.Provider>;\n};\n","const cleanupPreset = ({ preset: _preset, endpointsConfig = {} }) => {\n  const { endpoint } = _preset;\n\n  let preset = {};\n  if (endpoint === 'azureOpenAI' || endpoint === 'openAI') {\n    preset = {\n      endpoint,\n      presetId: _preset?.presetId ?? null,\n      model: _preset?.model ?? endpointsConfig[endpoint]?.availableModels?.[0] ?? 'gpt-3.5-turbo',\n      chatGptLabel: _preset?.chatGptLabel ?? null,\n      promptPrefix: _preset?.promptPrefix ?? null,\n      temperature: _preset?.temperature ?? 1,\n      top_p: _preset?.top_p ?? 1,\n      presence_penalty: _preset?.presence_penalty ?? 0,\n      frequency_penalty: _preset?.frequency_penalty ?? 0,\n      title: _preset?.title ?? 'New Preset'\n    };\n  } else if (endpoint === 'google') {\n    preset = {\n      endpoint,\n      presetId: _preset?.presetId ?? null,\n      model: _preset?.model ?? endpointsConfig[endpoint]?.availableModels?.[0] ?? 'chat-bison',\n      modelLabel: _preset?.modelLabel ?? null,\n      examples: _preset?.examples ?? [{ input: { content: '' }, output: { content: '' } }],\n      promptPrefix: _preset?.promptPrefix ?? null,\n      temperature: _preset?.temperature ?? 0.2,\n      maxOutputTokens: _preset?.maxOutputTokens ?? 1024,\n      topP: _preset?.topP ?? 0.95,\n      topK: _preset?.topK ?? 40,\n      title: _preset?.title ?? 'New Preset'\n    };\n  } else if (endpoint === 'bingAI') {\n    preset = {\n      endpoint,\n      presetId: _preset?.presetId ?? null,\n      jailbreak: _preset?.jailbreak ?? false,\n      context: _preset?.context ?? null,\n      systemMessage: _preset?.systemMessage ?? null,\n      toneStyle: _preset?.toneStyle ?? 'creative',\n      title: _preset?.title ?? 'New Preset'\n    };\n  } else if (endpoint === 'chatGPTBrowser') {\n    preset = {\n      endpoint,\n      presetId: _preset?.presetId ?? null,\n      model:\n        _preset?.model ??\n        endpointsConfig[endpoint]?.availableModels?.[0] ??\n        'text-davinci-002-render-sha',\n      title: _preset?.title ?? 'New Preset'\n    };\n  } else if (endpoint === null) {\n    preset = {\n      endpoint,\n      presetId: _preset?.presetId || null,\n      title: _preset?.title ?? 'New Preset'\n    };\n  } else {\n    console.error(`Unknown endpoint ${endpoint}`);\n    preset = {\n      endpoint: null,\n      presetId: _preset?.presetId ?? null,\n      title: _preset?.title ?? 'New Preset'\n    };\n  }\n\n  return preset;\n};\n\nexport default cleanupPreset;\n","import { useEffect, useState } from 'react';\r\nimport { useRecoilValue, useRecoilCallback } from 'recoil';\r\nimport filenamify from 'filenamify';\r\nimport exportFromJSON from 'export-from-json';\r\nimport download from 'downloadjs';\r\nimport DialogTemplate from '~/components/ui/DialogTemplate.jsx';\r\nimport { Dialog, DialogButton } from '~/components/ui/Dialog.tsx';\r\nimport { Input } from '~/components/ui/Input.tsx';\r\nimport { Label } from '~/components/ui/Label.tsx';\r\nimport { Checkbox } from '~/components/ui/Checkbox.tsx';\r\nimport Dropdown from '~/components/ui/Dropdown';\r\nimport { cn } from '~/utils/';\r\nimport { useScreenshot } from '~/utils/screenshotContext';\r\n\r\nimport store from '~/store';\r\nimport cleanupPreset from '~/utils/cleanupPreset.js';\r\n\r\nexport default function ExportModel({ open, onOpenChange }) {\r\n  const { captureScreenshot } = useScreenshot();\r\n\r\n  const [filename, setFileName] = useState('');\r\n  const [type, setType] = useState('');\r\n\r\n  const [includeOptions, setIncludeOptions] = useState(true);\r\n  const [exportBranches, setExportBranches] = useState(false);\r\n  const [recursive, setRecursive] = useState(true);\r\n\r\n  const conversation = useRecoilValue(store.conversation) || {};\r\n  const messagesTree = useRecoilValue(store.messagesTree) || [];\r\n  const endpointsConfig = useRecoilValue(store.endpointsConfig);\r\n\r\n  const getSiblingIdx = useRecoilCallback(\r\n    ({ snapshot }) =>\r\n      async (messageId) =>\r\n        await snapshot.getPromise(store.messagesSiblingIdxFamily(messageId)),\r\n    []\r\n  );\r\n\r\n  const typeOptions = [\r\n    { value: 'screenshot', display: 'screenshot (.png)' },\r\n    { value: 'text', display: 'text (.txt)' },\r\n    { value: 'markdown', display: 'markdown (.md)' },\r\n    { value: 'json', display: 'json (.json)' },\r\n    { value: 'csv', display: 'csv (.csv)' }\r\n  ]; //,, 'webpage'];\r\n\r\n  useEffect(() => {\r\n    setFileName(filenamify(String(conversation?.title || 'file')));\r\n    setType('screenshot');\r\n    setIncludeOptions(true);\r\n    setExportBranches(false);\r\n    setRecursive(true);\r\n  }, [open]);\r\n\r\n  const _setType = (newType) => {\r\n    const exportBranchesSupport = newType === 'json' || newType === 'csv' || newType === 'webpage';\r\n    const exportOptionsSupport = newType !== 'csv' && newType !== 'screenshot';\r\n\r\n    setExportBranches(exportBranchesSupport);\r\n    setIncludeOptions(exportOptionsSupport);\r\n    setType(newType);\r\n  };\r\n\r\n  const exportBranchesSupport = type === 'json' || type === 'csv' || type === 'webpage';\r\n  const exportOptionsSupport = type !== 'csv' && type !== 'screenshot';\r\n\r\n  // return an object or an array based on branches and recursive option\r\n  // messageId is used to get siblindIdx from recoil snapshot\r\n  const buildMessageTree = async ({\r\n    messageId,\r\n    message,\r\n    messages,\r\n    branches = false,\r\n    recursive = false\r\n  }) => {\r\n    let children = [];\r\n    if (messages?.length)\r\n      if (branches)\r\n        for (const message of messages)\r\n          children.push(\r\n            await buildMessageTree({\r\n              messageId: message?.messageId,\r\n              message: message,\r\n              messages: message?.children,\r\n              branches,\r\n              recursive\r\n            })\r\n          );\r\n      else {\r\n        let message = messages[0];\r\n        if (messages?.length > 1) {\r\n          const siblingIdx = await getSiblingIdx(messageId);\r\n          message = messages[messages.length - siblingIdx - 1];\r\n        }\r\n\r\n        children = [\r\n          await buildMessageTree({\r\n            messageId: message?.messageId,\r\n            message: message,\r\n            messages: message?.children,\r\n            branches,\r\n            recursive\r\n          })\r\n        ];\r\n      }\r\n\r\n    if (recursive) return { ...message, children: children };\r\n    else {\r\n      let ret = [];\r\n      if (message) {\r\n        let _message = { ...message };\r\n        delete _message.children;\r\n        ret = [_message];\r\n      }\r\n      for (const child of children) ret = ret.concat(child);\r\n      return ret;\r\n    }\r\n  };\r\n\r\n  const exportScreenshot = async () => {\r\n    const data = await captureScreenshot();\r\n    download(data, `${filename}.png`, 'image/png');\r\n  };\r\n\r\n  const exportCSV = async () => {\r\n    let data = [];\r\n\r\n    const messages = await buildMessageTree({\r\n      messageId: conversation?.conversationId,\r\n      message: null,\r\n      messages: messagesTree,\r\n      branches: exportBranches,\r\n      recursive: false\r\n    });\r\n\r\n    for (const message of messages) {\r\n      data.push(message);\r\n    }\r\n\r\n    exportFromJSON({\r\n      data: data,\r\n      fileName: filename,\r\n      extension: 'csv',\r\n      exportType: exportFromJSON.types.csv,\r\n      beforeTableEncode: (entries) => [\r\n        {\r\n          fieldName: 'sender',\r\n          fieldValues: entries.find((e) => e.fieldName == 'sender').fieldValues\r\n        },\r\n        { fieldName: 'text', fieldValues: entries.find((e) => e.fieldName == 'text').fieldValues },\r\n        {\r\n          fieldName: 'isCreatedByUser',\r\n          fieldValues: entries.find((e) => e.fieldName == 'isCreatedByUser').fieldValues\r\n        },\r\n        {\r\n          fieldName: 'error',\r\n          fieldValues: entries.find((e) => e.fieldName == 'error').fieldValues\r\n        },\r\n        {\r\n          fieldName: 'unfinished',\r\n          fieldValues: entries.find((e) => e.fieldName == 'unfinished').fieldValues\r\n        },\r\n        {\r\n          fieldName: 'cancelled',\r\n          fieldValues: entries.find((e) => e.fieldName == 'cancelled').fieldValues\r\n        },\r\n        {\r\n          fieldName: 'messageId',\r\n          fieldValues: entries.find((e) => e.fieldName == 'messageId').fieldValues\r\n        },\r\n        {\r\n          fieldName: 'parentMessageId',\r\n          fieldValues: entries.find((e) => e.fieldName == 'parentMessageId').fieldValues\r\n        },\r\n        {\r\n          fieldName: 'createdAt',\r\n          fieldValues: entries.find((e) => e.fieldName == 'createdAt').fieldValues\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n  const exportMarkdown = async () => {\r\n    let data =\r\n      `# Conversation\\n` +\r\n      `- conversationId: ${conversation?.conversationId}\\n` +\r\n      `- endpoint: ${conversation?.endpoint}\\n` +\r\n      `- title: ${conversation?.title}\\n` +\r\n      `- exportAt: ${new Date().toTimeString()}\\n`;\r\n\r\n    if (includeOptions) {\r\n      data += `\\n## Options\\n`;\r\n      const options = cleanupPreset({ preset: conversation, endpointsConfig });\r\n\r\n      for (const key of Object.keys(options)) {\r\n        data += `- ${key}: ${options[key]}\\n`;\r\n      }\r\n    }\r\n\r\n    const messages = await buildMessageTree({\r\n      messageId: conversation?.conversationId,\r\n      message: null,\r\n      messages: messagesTree,\r\n      branches: false,\r\n      recursive: false\r\n    });\r\n\r\n    data += `\\n## History\\n`;\r\n    for (const message of messages) {\r\n      data += `**${message?.sender}:**\\n${message?.text}\\n`;\r\n      if (message.error) data += `*(This is an error message)*\\n`;\r\n      if (message.unfinished) data += `*(This is an unfinished message)*\\n`;\r\n      if (message.cancelled) data += `*(This is a cancelled message)*\\n`;\r\n      data += '\\n\\n';\r\n    }\r\n\r\n    exportFromJSON({\r\n      data: data,\r\n      fileName: filename,\r\n      extension: 'md',\r\n      exportType: exportFromJSON.types.text\r\n    });\r\n  };\r\n\r\n  const exportText = async () => {\r\n    let data =\r\n      `Conversation\\n` +\r\n      `########################\\n` +\r\n      `conversationId: ${conversation?.conversationId}\\n` +\r\n      `endpoint: ${conversation?.endpoint}\\n` +\r\n      `title: ${conversation?.title}\\n` +\r\n      `exportAt: ${new Date().toTimeString()}\\n`;\r\n\r\n    if (includeOptions) {\r\n      data += `\\nOptions\\n########################\\n`;\r\n      const options = cleanupPreset({ preset: conversation, endpointsConfig });\r\n\r\n      for (const key of Object.keys(options)) {\r\n        data += `${key}: ${options[key]}\\n`;\r\n      }\r\n    }\r\n\r\n    const messages = await buildMessageTree({\r\n      messageId: conversation?.conversationId,\r\n      message: null,\r\n      messages: messagesTree,\r\n      branches: false,\r\n      recursive: false\r\n    });\r\n\r\n    data += `\\nHistory\\n########################\\n`;\r\n    for (const message of messages) {\r\n      data += `>> ${message?.sender}:\\n${message?.text}\\n`;\r\n      if (message.error) data += `(This is an error message)\\n`;\r\n      if (message.unfinished) data += `(This is an unfinished message)\\n`;\r\n      if (message.cancelled) data += `(This is a cancelled message)\\n`;\r\n      data += '\\n\\n';\r\n    }\r\n\r\n    exportFromJSON({\r\n      data: data,\r\n      fileName: filename,\r\n      extension: 'txt',\r\n      exportType: exportFromJSON.types.text\r\n    });\r\n  };\r\n\r\n  const exportJSON = async () => {\r\n    let data = {\r\n      conversationId: conversation?.conversationId,\r\n      endpoint: conversation?.endpoint,\r\n      title: conversation?.title,\r\n      exportAt: new Date().toTimeString(),\r\n      branches: exportBranches,\r\n      recursive: recursive\r\n    };\r\n\r\n    if (includeOptions) data.options = cleanupPreset({ preset: conversation, endpointsConfig });\r\n\r\n    const messages = await buildMessageTree({\r\n      messageId: conversation?.conversationId,\r\n      message: null,\r\n      messages: messagesTree,\r\n      branches: exportBranches,\r\n      recursive: recursive\r\n    });\r\n\r\n    if (recursive) data.messagesTree = messages.children;\r\n    else data.messages = messages;\r\n\r\n    exportFromJSON({\r\n      data: data,\r\n      fileName: filename,\r\n      extension: 'json',\r\n      exportType: exportFromJSON.types.json\r\n    });\r\n  };\r\n\r\n  const exportConversation = () => {\r\n    if (type === 'json') exportJSON();\r\n    else if (type == 'text') exportText();\r\n    else if (type == 'markdown') exportMarkdown();\r\n    else if (type == 'csv') exportCSV();\r\n    else if (type == 'screenshot') exportScreenshot();\r\n  };\r\n\r\n  const defaultTextProps =\r\n    'rounded-md border border-gray-200 focus:border-slate-400 focus:bg-gray-50 bg-transparent text-sm shadow-[0_0_10px_rgba(0,0,0,0.05)] outline-none placeholder:text-gray-400 focus:outline-none focus:ring-gray-400 focus:ring-opacity-20 focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 dark:border-gray-500 dark:bg-gray-700 focus:dark:bg-gray-600 dark:text-gray-50 dark:shadow-[0_0_15px_rgba(0,0,0,0.10)] dark:focus:border-gray-400 dark:focus:outline-none dark:focus:ring-0 dark:focus:ring-gray-400 dark:focus:ring-offset-0';\r\n\r\n  return (\r\n    <Dialog open={open} onOpenChange={onOpenChange}>\r\n      <DialogTemplate\r\n        title=\"导出当前对话\"\r\n        className=\"max-w-full sm:max-w-2xl\"\r\n        main={\r\n          <div className=\"flex w-full flex-col items-center gap-6\">\r\n            <div className=\"grid w-full gap-6 sm:grid-cols-2\">\r\n              <div className=\"col-span-1 flex flex-col items-start justify-start gap-2\">\r\n                <Label htmlFor=\"filename\" className=\"text-left text-sm font-medium\">\r\n                  文件名\r\n                </Label>\r\n                <Input\r\n                  id=\"filename\"\r\n                  value={filename}\r\n                  onChange={(e) => setFileName(filenamify(e.target.value || ''))}\r\n                  placeholder=\"设置文件名\"\r\n                  className={cn(\r\n                    defaultTextProps,\r\n                    'flex h-10 max-h-10 w-full resize-none px-3 py-2 focus:outline-none focus:ring-0 focus:ring-opacity-0 focus:ring-offset-0'\r\n                  )}\r\n                />\r\n              </div>\r\n              <div className=\"col-span-1 flex flex-col items-start justify-start gap-2\">\r\n                <Label htmlFor=\"type\" className=\"text-left text-sm font-medium\">\r\n                  保存类型\r\n                </Label>\r\n                <Dropdown\r\n                  id=\"type\"\r\n                  value={type}\r\n                  onChange={_setType}\r\n                  options={typeOptions}\r\n                  className={cn(\r\n                    defaultTextProps,\r\n                    'flex h-10 max-h-10 w-full resize-none focus:outline-none focus:ring-0 focus:ring-opacity-0 focus:ring-offset-0'\r\n                  )}\r\n                  containerClassName=\"flex w-full resize-none\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"grid w-full gap-6 sm:grid-cols-2\">\r\n              <div className=\"col-span-1 flex flex-col items-start justify-start gap-2\">\r\n                <div className=\"grid w-full items-center gap-2\">\r\n                  <Label htmlFor=\"includeOptions\" className=\"text-left text-sm font-medium\">\r\n                    端口选项\r\n                  </Label>\r\n                  <div className=\"flex h-[40px] w-full items-center space-x-3\">\r\n                    <Checkbox\r\n                      id=\"includeOptions\"\r\n                      disabled={!exportOptionsSupport}\r\n                      checked={includeOptions}\r\n                      className=\"focus:ring-opacity-20 dark:border-gray-500 dark:bg-gray-700 dark:text-gray-50 dark:focus:ring-gray-600 dark:focus:ring-opacity-50 dark:focus:ring-offset-0\"\r\n                      onCheckedChange={setIncludeOptions}\r\n                    />\r\n                    <label\r\n                      htmlFor=\"includeOptions\"\r\n                      className=\"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70 dark:text-gray-50\"\r\n                    >\r\n                      {exportOptionsSupport ? '启用' : '不支持'}\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"grid w-full items-center gap-2\">\r\n                <Label htmlFor=\"exportBranches\" className=\"text-left text-sm font-medium\">\r\n                  导出所有消息分支\r\n                </Label>\r\n                <div className=\"flex h-[40px] w-full items-center space-x-3\">\r\n                  <Checkbox\r\n                    id=\"exportBranches\"\r\n                    disabled={!exportBranchesSupport}\r\n                    checked={exportBranches}\r\n                    className=\"focus:ring-opacity-20 dark:border-gray-500 dark:bg-gray-700 dark:text-gray-50 dark:focus:ring-gray-600 dark:focus:ring-opacity-50 dark:focus:ring-offset-0\"\r\n                    onCheckedChange={setExportBranches}\r\n                  />\r\n                  <label\r\n                    htmlFor=\"exportBranches\"\r\n                    className=\"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70 dark:text-gray-50\"\r\n                  >\r\n                    {exportBranchesSupport ? '启用' : '不支持'}\r\n                  </label>\r\n                </div>\r\n              </div>\r\n              {type === 'json' ? (\r\n                <div className=\"grid w-full items-center gap-2\">\r\n                  <Label htmlFor=\"recursive\" className=\"text-left text-sm font-medium\">\r\n                    用递归还是顺序处理数据\r\n                  </Label>\r\n                  <div className=\"flex h-[40px] w-full items-center space-x-3\">\r\n                    <Checkbox\r\n                      id=\"recursive\"\r\n                      checked={recursive}\r\n                      className=\"focus:ring-opacity-20 dark:border-gray-500 dark:bg-gray-700 dark:text-gray-50 dark:focus:ring-gray-600 dark:focus:ring-opacity-50 dark:focus:ring-offset-0\"\r\n                      onCheckedChange={setRecursive}\r\n                    />\r\n                    <label\r\n                      htmlFor=\"recursive\"\r\n                      className=\"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70 dark:text-gray-50\"\r\n                    >\r\n                      递归\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n              ) : null}\r\n            </div>\r\n          </div>\r\n        }\r\n        buttons={\r\n          <>\r\n            <DialogButton\r\n              onClick={exportConversation}\r\n              className=\"dark:hover:gray-400 border-gray-700 bg-green-600 text-white hover:bg-green-700 dark:hover:bg-green-800\"\r\n            >\r\n              导出\r\n            </DialogButton>\r\n          </>\r\n        }\r\n        selection={null}\r\n      />\r\n    </Dialog>\r\n  );\r\n}\r\n","import { useEffect } from 'react';\r\nimport store from '~/store';\r\nimport { Dialog } from '../ui/Dialog.tsx';\r\nimport DialogTemplate from '../ui/DialogTemplate';\r\nimport { useClearConversationsMutation } from '~/data-provider';\r\n\r\nconst ClearConvos = ({ open, onOpenChange}) => {\r\n  const { newConversation } = store.useConversation();\r\n  const { refreshConversations } = store.useConversations();\r\n  const clearConvosMutation = useClearConversationsMutation();\r\n\r\n  const clickHandler = () => {\r\n    console.log('Clearing conversations...');\r\n    clearConvosMutation.mutate();\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (clearConvosMutation.isSuccess) {\r\n      newConversation();\r\n      refreshConversations();\r\n    }\r\n  }, [clearConvosMutation.isSuccess]);\r\n\r\n  return (\r\n    <Dialog open={open} onOpenChange={onOpenChange}>\r\n      <DialogTemplate\r\n        title=\"清除所有对话\"\r\n        description=\"您确定要清除所有对话吗？ 这是不可逆转的。\"\r\n        selection={{\r\n          selectHandler: clickHandler,\r\n          selectClasses: 'bg-red-600 hover:bg-red-700 dark:hover:bg-red-800 text-white',\r\n          selectText: '清除'\r\n        }}\r\n      />\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default ClearConvos;","import React from 'react';\n\nexport default function DarkModeIcon() {\n  return (\n    <svg\n      stroke=\"currentColor\"\n      fill=\"none\"\n      strokeWidth=\"2\"\n      viewBox=\"0 0 24 24\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      className=\"h-4 w-4\"\n      height=\"1em\"\n      width=\"1em\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path d=\"M21 12.79A9 9 0 1 1 11.21 3 7 7 0 0 0 21 12.79z\" />\n    </svg>\n  );\n}\n","import React from 'react';\n\nexport default function LightModeIcon() {\n  return (\n    <svg\n      stroke=\"currentColor\"\n      fill=\"none\"\n      strokeWidth=\"2\"\n      viewBox=\"0 0 24 24\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      className=\"h-4 w-4\"\n      height=\"1em\"\n      width=\"1em\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <circle cx=\"12\" cy=\"12\" r=\"5\" />\n      <line x1=\"12\" y1=\"1\" x2=\"12\" y2=\"3\" />\n      <line x1=\"12\" y1=\"21\" x2=\"12\" y2=\"23\" />\n      <line x1=\"4.22\" y1=\"4.22\" x2=\"5.64\" y2=\"5.64\" />\n      <line x1=\"18.36\" y1=\"18.36\" x2=\"19.78\" y2=\"19.78\" />\n      <line x1=\"1\" y1=\"12\" x2=\"3\" y2=\"12\" />\n      <line x1=\"21\" y1=\"12\" x2=\"23\" y2=\"12\" />\n      <line x1=\"4.22\" y1=\"19.78\" x2=\"5.64\" y2=\"18.36\" />\n      <line x1=\"18.36\" y1=\"5.64\" x2=\"19.78\" y2=\"4.22\" />\n    </svg>\n  );\n}\n","//ThemeContext.js\n// source: https://plainenglish.io/blog/light-and-dark-mode-in-react-web-application-with-tailwind-css-89674496b942\n\nimport React, { createContext, useState, useEffect } from 'react';\n\nconst getInitialTheme = () => {\n  if (typeof window !== 'undefined' && window.localStorage) {\n    const storedPrefs = window.localStorage.getItem('color-theme');\n    if (typeof storedPrefs === 'string') {\n      return storedPrefs;\n    }\n\n    const userMedia = window.matchMedia('(prefers-color-scheme: dark)');\n    if (userMedia.matches) {\n      return 'dark';\n    }\n  }\n\n  return 'light'; // light theme as the default;\n};\n\nexport const ThemeContext = createContext();\n\nexport const ThemeProvider = ({ initialTheme, children }) => {\n  const [theme, setTheme] = useState(getInitialTheme);\n\n  const rawSetTheme = (rawTheme) => {\n    const root = window.document.documentElement;\n    const isDark = rawTheme === 'dark';\n\n    root.classList.remove(isDark ? 'light' : 'dark');\n    root.classList.add(rawTheme);\n\n    localStorage.setItem('color-theme', rawTheme);\n  };\n\n  if (initialTheme) {\n    rawSetTheme(initialTheme);\n  }\n\n  useEffect(() => {\n    rawSetTheme(theme);\n  }, [theme]);\n\n  return <ThemeContext.Provider value={{ theme, setTheme }}>{children}</ThemeContext.Provider>;\n};\n","import { forwardRef, useContext } from 'react';\r\nimport DarkModeIcon from '../svg/DarkModeIcon';\r\nimport LightModeIcon from '../svg/LightModeIcon';\r\nimport { ThemeContext } from '~/hooks/ThemeContext';\r\n\r\nconst DarkMode = forwardRef(() => {\r\n  const { theme, setTheme } = useContext(ThemeContext);\r\n\r\n  const clickHandler = () => setTheme(theme === 'dark' ? 'light' : 'dark');\r\n  const mode = theme === 'dark' ? '变为亮色' : '变为暗色';\r\n\r\n  return (\r\n    <button\r\n      className=\"flex w-full cursor-pointer items-center gap-3 px-3 py-3 text-sm text-white transition-colors duration-200 hover:bg-gray-700\"\r\n      onClick={clickHandler}\r\n    >\r\n      {theme === 'dark' ? <LightModeIcon /> : <DarkModeIcon />}\r\n      {mode}\r\n    </button>\r\n  );\r\n});\r\n\r\nexport default DarkMode;","import React from 'react';\n\nexport default function LogOutIcon() {\n  return (\n    <svg\n      stroke=\"currentColor\"\n      fill=\"none\"\n      strokeWidth=\"2\"\n      viewBox=\"0 0 24 24\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      className=\"h-4 w-4\"\n      height=\"1em\"\n      width=\"1em\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path d=\"M9 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h4\" />\n      <polyline points=\"16 17 21 12 16 7\" />\n      <line x1=\"21\" y1=\"12\" x2=\"9\" y2=\"12\" />\n    </svg>\n  );\n}\n","import { forwardRef } from 'react';\r\nimport LogOutIcon from '../svg/LogOutIcon';\r\nimport { useAuthContext } from '~/hooks/AuthContext';\r\n\r\nconst Logout = forwardRef(() => {\r\n  const { user, logout } = useAuthContext();\r\n\r\n  const handleLogout = () => {\r\n    logout();\r\n    window.location.reload();\r\n  };\r\n\r\n  return (\r\n    <button\r\n      className=\"flex w-full cursor-pointer items-center gap-3 px-3 py-3 text-sm text-white transition-colors duration-200 hover:bg-gray-700\"\r\n      onClick={handleLogout}\r\n    >\r\n      <LogOutIcon />\r\n      {user?.username || 'USER'}\r\n      <small>退出</small>\r\n    </button>\r\n  );\r\n});\r\n\r\nexport default Logout;","import React from 'react';\n\nexport default function DotsIcon() {\n  return (\n    <svg\n      stroke=\"currentColor\"\n      fill=\"none\"\n      strokeWidth=\"2\"\n      viewBox=\"0 0 24 24\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      className=\"h-4 w-4 flex-shrink-0 text-gray-500\"\n      height=\"1em\"\n      width=\"1em\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <circle cx=\"12\" cy=\"12\" r=\"1\" />\n      <circle cx=\"19\" cy=\"12\" r=\"1\" />\n      <circle cx=\"5\" cy=\"12\" r=\"1\" />\n    </svg>\n  );\n}\n","import { Menu, Transition } from '@headlessui/react';\nimport { Fragment, useState } from 'react';\nimport { useRecoilValue } from 'recoil';\nimport SearchBar from './SearchBar';\nimport TrashIcon from '../svg/TrashIcon';\nimport { Download } from 'lucide-react';\nimport NavLink from './NavLink';\nimport ExportModel from './ExportConversation/ExportModel';\nimport ClearConvos from './ClearConvos';\nimport DarkMode from './DarkMode';\nimport Logout from './Logout';\nimport { useAuthContext } from '~/hooks/AuthContext';\nimport { cn } from '~/utils/';\nimport DotsIcon from '../svg/DotsIcon';\n\nimport store from '~/store';\n\nexport default function NavLinks({ clearSearch, isSearchEnabled }) {\n  const [showExports, setShowExports] = useState(false);\n  const [showClearConvos, setShowClearConvos] = useState(false);\n  const { user } = useAuthContext();\n\n  const conversation = useRecoilValue(store.conversation) || {};\n\n  const exportable =\n    conversation?.conversationId &&\n    conversation?.conversationId !== 'new' &&\n    conversation?.conversationId !== 'search';\n\n  const clickHandler = () => {\n    if (exportable) setShowExports(true);\n  };\n\n  return (\n    <>\n      <Menu as=\"div\" className=\"group relative\">\n        {({ open }) => (\n          <>\n            <Menu.Button\n              className={cn(\n                'group-ui-open:bg-gray-800 flex w-full items-center gap-2.5 rounded-md px-3 py-3 text-sm transition-colors duration-200 hover:bg-gray-800',\n                open ? 'bg-gray-800' : ''\n              )}\n            >\n              <div className=\"-ml-0.5 h-5 w-5 flex-shrink-0\">\n                <div className=\"relative flex\">\n                  <img\n                    className=\"rounded-sm\"\n                    src={\n                      user?.avatar || `https://avatars.dicebear.com/api/initials/${user?.name}.svg`\n                    }\n                    alt=\"\"\n                  />\n                </div>\n              </div>\n              <div className=\"grow overflow-hidden text-ellipsis whitespace-nowrap text-left text-white\">\n                {user?.name || 'USER'}\n              </div>\n              <DotsIcon />\n            </Menu.Button>\n\n            <Transition\n              as={Fragment}\n              enter=\"transition ease-out duration-100\"\n              enterFrom=\"transform opacity-0 scale-95\"\n              enterTo=\"transform opacity-100 scale-100\"\n              leave=\"transition ease-in duration-75\"\n              leaveFrom=\"transform opacity-100 scale-100\"\n              leaveTo=\"transform opacity-0 scale-95\"\n            >\n              <Menu.Items className=\"absolute bottom-full left-0 z-20 mb-2 w-full translate-y-0 overflow-hidden rounded-md bg-[#050509] py-1.5 opacity-100 outline-none\">\n                {isSearchEnabled && (\n                  <Menu.Item>\n                    <SearchBar clearSearch={clearSearch} />\n                  </Menu.Item>\n                )}\n                <Menu.Item as=\"div\">\n                  <NavLink\n                    className={cn(\n                      'flex w-full cursor-pointer items-center gap-3 px-3 py-3 text-sm text-white transition-colors duration-200 hover:bg-gray-700',\n                      exportable ? 'cursor-pointer text-white' : 'cursor-not-allowed text-gray-400'\n                    )}\n                    svg={() => <Download size={16} />}\n                    text=\"Export conversation\"\n                    clickHandler={clickHandler}\n                  />\n                </Menu.Item>\n                <div className=\"my-1.5 h-px bg-white/20\" role=\"none\" />\n                <Menu.Item as=\"div\">\n                  <DarkMode />\n                </Menu.Item>\n                <Menu.Item as=\"div\">\n                  <NavLink\n                    className=\"flex w-full cursor-pointer items-center gap-3 px-3 py-3 text-sm text-white transition-colors duration-200 hover:bg-gray-700\"\n                    svg={() => <TrashIcon />}\n                    text=\"Clear conversations\"\n                    clickHandler={() => setShowClearConvos(true)}\n                  />\n                </Menu.Item>\n                <div className=\"my-1.5 h-px bg-white/20\" role=\"none\" />\n                <Menu.Item as=\"div\">\n                  <Logout />\n                </Menu.Item>\n              </Menu.Items>\n            </Transition>\n          </>\n        )}\n      </Menu>\n      {showExports && <ExportModel open={showExports} onOpenChange={setShowExports} />}\n      {showClearConvos && <ClearConvos open={showClearConvos} onOpenChange={setShowClearConvos} />}\n    </>\n  );\n}\n","import { useState, useEffect } from 'react';\n\nfunction useDebounce(value, delay) {\n  const [debouncedValue, setDebouncedValue] = useState(value);\n\n  useEffect(() => {\n    const handler = setTimeout(() => {\n      setDebouncedValue(value);\n    }, delay);\n\n    return () => {\n      clearTimeout(handler);\n    };\n  }, [value, delay]);\n\n  return debouncedValue;\n}\n\nexport default useDebounce;\n","import { useState, useEffect, useRef, useContext } from 'react';\nimport NewChat from './NewChat';\nimport Panel from '../svg/Panel';\nimport Spinner from '../svg/Spinner';\nimport Pages from '../Conversations/Pages';\nimport Conversations from '../Conversations';\nimport NavLinks from './NavLinks';\nimport { useRecoilValue, useSetRecoilState } from 'recoil';\nimport { useGetConversationsQuery, useSearchQuery } from '~/data-provider';\nimport useDebounce from '~/hooks/useDebounce';\nimport store from '~/store';\nimport { useAuthContext } from '~/hooks/AuthContext';\nimport { ThemeContext } from '~/hooks/ThemeContext';\nimport { cn } from '~/utils/';\n\n// import resolveConfig from 'tailwindcss/resolveConfig';\n// const tailwindConfig = import('../../../tailwind.config.cjs');\n// const fullConfig = resolveConfig(tailwindConfig);\n\n// export const getBreakpointValue = (value) =>\n//   +fullConfig.theme.screens[value].slice(0, fullConfig.theme.screens[value].indexOf('px'));\n\n// export const getCurrentBreakpoint = () => {\n//   let currentBreakpoint;\n//   let biggestBreakpointValue = 0;\n//   for (const breakpoint of Object.keys(fullConfig.theme.screens)) {\n//     const breakpointValue = getBreakpointValue(breakpoint);\n//     if (breakpointValue > biggestBreakpointValue && window.innerWidth >= breakpointValue) {\n//       biggestBreakpointValue = breakpointValue;\n//       currentBreakpoint = breakpoint;\n//     }\n//   }\n//   return currentBreakpoint;\n// };\n\nexport default function Nav({ navVisible, setNavVisible }) {\n  const [isHovering, setIsHovering] = useState(false);\n  const { isAuthenticated } = useAuthContext();\n  const { theme, } = useContext(ThemeContext);\n  const containerRef = useRef(null);\n  const scrollPositionRef = useRef(null);\n\n  const [conversations, setConversations] = useState([]);\n  // current page\n  const [pageNumber, setPageNumber] = useState(1);\n  // total pages\n  const [pages, setPages] = useState(1);\n\n  // data provider\n  const getConversationsQuery = useGetConversationsQuery(pageNumber, { enabled: isAuthenticated });\n\n  // search\n  const searchQuery = useRecoilValue(store.searchQuery);\n  const isSearchEnabled = useRecoilValue(store.isSearchEnabled);\n  const isSearching = useRecoilValue(store.isSearching);\n  const { newConversation, searchPlaceholderConversation } = store.useConversation();\n\n  // current conversation\n  const conversation = useRecoilValue(store.conversation);\n  const { conversationId } = conversation || {};\n  const setSearchResultMessages = useSetRecoilState(store.searchResultMessages);\n  const refreshConversationsHint = useRecoilValue(store.refreshConversationsHint);\n  const { refreshConversations } = store.useConversations();\n\n  const [isFetching, setIsFetching] = useState(false);\n\n  const debouncedSearchTerm = useDebounce(searchQuery, 750);\n  const searchQueryFn = useSearchQuery(debouncedSearchTerm, pageNumber, {\n    enabled:\n      !!debouncedSearchTerm && debouncedSearchTerm.length > 0 && isSearchEnabled && isSearching\n  });\n\n  const onSearchSuccess = (data, expectedPage) => {\n    const res = data;\n    setConversations(res.conversations);\n    if (expectedPage) {\n      setPageNumber(expectedPage);\n    }\n    setPages(res.pages);\n    setIsFetching(false);\n    searchPlaceholderConversation();\n    setSearchResultMessages(res.messages);\n  };\n\n  useEffect(() => {\n    //we use isInitialLoading here instead of isLoading because query is disabled by default\n    if (searchQueryFn.isInitialLoading) {\n      setIsFetching(true);\n    } else if (searchQueryFn.data) {\n      onSearchSuccess(searchQueryFn.data);\n    }\n  }, [searchQueryFn.data, searchQueryFn.isInitialLoading]);\n\n  const clearSearch = () => {\n    setPageNumber(1);\n    refreshConversations();\n    if (conversationId == 'search') {\n      newConversation();\n    }\n  };\n\n  const moveToTop = () => {\n    const container = containerRef.current;\n    if (container) {\n      scrollPositionRef.current = container.scrollTop;\n    }\n  };\n\n  const nextPage = async () => {\n    moveToTop();\n    setPageNumber(pageNumber + 1);\n  };\n\n  const previousPage = async () => {\n    moveToTop();\n    setPageNumber(pageNumber - 1);\n  };\n\n  useEffect(() => {\n    if (getConversationsQuery.data) {\n      if (isSearching) {\n        return;\n      }\n      let { conversations, pages } = getConversationsQuery.data;\n      if (pageNumber > pages) {\n        setPageNumber(pages);\n      } else {\n        if (!isSearching) {\n          conversations = conversations.sort(\n            (a, b) => new Date(b.createdAt) - new Date(a.createdAt)\n          );\n        }\n        setConversations(conversations);\n        setPages(pages);\n      }\n    }\n  }, [getConversationsQuery.isSuccess, getConversationsQuery.data, isSearching, pageNumber]);\n\n  useEffect(() => {\n    if (!isSearching) {\n      getConversationsQuery.refetch();\n    }\n  }, [pageNumber, conversationId, refreshConversationsHint]);\n\n  const toggleNavVisible = () => {\n    setNavVisible((prev) => !prev);\n  };\n\n  // useEffect(() => {\n  //   let currentBreakpoint = getCurrentBreakpoint();\n  //   if (currentBreakpoint === 'sm') {\n  //     setNavVisible(false);\n  //   } else {\n  //     setNavVisible(true);\n  //   }\n  // }, [conversationId, setNavVisible]);\n\n  const isMobile = () => {\n    const userAgent = typeof window.navigator === 'undefined' ? '' : navigator.userAgent;\n    const mobileRegex = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini|Mobile|mobile|CriOS/i;\n    return mobileRegex.test(userAgent);\n  };\n\n  useEffect(() => {\n    if (isMobile()) {\n      setNavVisible(false);\n    } else {\n      setNavVisible(true);\n    }\n  }, [conversationId, setNavVisible]);\n\n  const containerClasses =\n    getConversationsQuery.isLoading && pageNumber === 1\n      ? 'flex flex-col gap-2 text-gray-100 text-sm h-full justify-center items-center'\n      : 'flex flex-col gap-2 text-gray-100 text-sm';\n\n  return (\n    <>\n      <div className={'nav dark bg-gray-900 md:inset-y-0' + (navVisible ? ' active' : '')}>\n        <div className=\"flex h-full min-h-0 flex-col \">\n          <div className=\"scrollbar-trigger relative flex h-full w-full flex-1 items-start border-white/20\">\n            <nav className=\"relative flex h-full flex-1 flex-col space-y-1 p-2\">\n              <NewChat />\n              <div\n                className={`flex-1 flex-col overflow-y-auto ${\n                  isHovering ? '' : 'scrollbar-transparent'\n                } border-b border-white/20`}\n                onMouseEnter={() => setIsHovering(true)}\n                onMouseLeave={() => setIsHovering(false)}\n                ref={containerRef}\n              >\n                <div className={containerClasses}>\n                  {(getConversationsQuery.isLoading && pageNumber === 1) || isFetching ? (\n                    <Spinner />\n                  ) : (\n                    <Conversations\n                      conversations={conversations}\n                      conversationId={conversationId}\n                      moveToTop={moveToTop}\n                    />\n                  )}\n                  <Pages\n                    pageNumber={pageNumber}\n                    pages={pages}\n                    nextPage={nextPage}\n                    previousPage={previousPage}\n                  />\n                </div>\n              </div>\n              <NavLinks clearSearch={clearSearch} isSearchEnabled={isSearchEnabled} />\n            </nav>\n          </div>\n        </div>\n        <button\n          type=\"button\"\n          className={cn('nav-close-button -ml-0.5 -mt-2.5 inline-flex h-10 w-10 items-center justify-center rounded-md focus:outline-none focus:ring-white md:-ml-1 md:-mt-2.5', theme === 'dark' ? 'text-gray-500 hover:text-gray-400' : 'text-gray-400 hover:text-gray-500')}\n          onClick={toggleNavVisible}\n        >\n          <span className=\"sr-only\">Close sidebar</span>\n          <Panel/>\n        </button>\n      </div>\n      {!navVisible && (\n        <button\n          type=\"button\"\n          className=\"nav-open-button fixed left-2 top-0.5 z-10 inline-flex h-10 w-10 items-center justify-center rounded-md text-gray-400 hover:text-gray-500 focus:outline-none focus:ring-white dark:text-gray-500 dark:hover:text-gray-400\"\n          onClick={toggleNavVisible}\n        >\n          <span className=\"sr-only\">Open sidebar</span>\n          <Panel open={true}/>\n        </button>\n      )}\n\n      <div className={'nav-mask' + (navVisible ? ' active' : '')} onClick={toggleNavVisible}></div>\n    </>\n  );\n}\n","import React from 'react';\r\nimport { useRecoilValue } from 'recoil';\r\n\r\nimport store from '~/store';\r\n\r\nexport default function MobileNav({ setNavVisible }) {\r\n  const conversation = useRecoilValue(store.conversation);\r\n  const { newConversation } = store.useConversation();\r\n  const { title = '新的对话' } = conversation || {};\r\n\r\n  return (\r\n    <div className=\"fixed left-0 right-0 top-0 z-10 flex items-center border-b border-white/20 bg-gray-800 pl-1 pt-1 text-gray-200 sm:pl-3 md:hidden\">\r\n      <button\r\n        type=\"button\"\r\n        className=\"-ml-0.5 -mt-0.5 inline-flex h-10 w-10 items-center justify-center rounded-md hover:text-gray-900 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-white dark:hover:text-white\"\r\n        onClick={() => setNavVisible((prev) => !prev)}\r\n      >\r\n        <span className=\"sr-only\">Open sidebar</span>\r\n        <svg\r\n          stroke=\"currentColor\"\r\n          fill=\"none\"\r\n          strokeWidth=\"1.5\"\r\n          viewBox=\"0 0 24 24\"\r\n          strokeLinecap=\"round\"\r\n          strokeLinejoin=\"round\"\r\n          className=\"h-6 w-6\"\r\n          height=\"1em\"\r\n          width=\"1em\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n        >\r\n          <line x1=\"3\" y1=\"12\" x2=\"21\" y2=\"12\" />\r\n          <line x1=\"3\" y1=\"6\" x2=\"21\" y2=\"6\" />\r\n          <line x1=\"3\" y1=\"18\" x2=\"21\" y2=\"18\" />\r\n        </svg>\r\n      </button>\r\n      <h1 className=\"flex-1 text-center text-base font-normal\">{title || '新的对话'}</h1>\r\n      <button type=\"button\" className=\"px-3\" onClick={() => newConversation()}>\r\n        <svg\r\n          stroke=\"currentColor\"\r\n          fill=\"none\"\r\n          strokeWidth=\"1.5\"\r\n          viewBox=\"0 0 24 24\"\r\n          strokeLinecap=\"round\"\r\n          strokeLinejoin=\"round\"\r\n          className=\"h-6 w-6\"\r\n          height=\"1em\"\r\n          width=\"1em\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n        >\r\n          <line x1=\"12\" y1=\"5\" x2=\"12\" y2=\"19\" />\r\n          <line x1=\"5\" y1=\"12\" x2=\"19\" y2=\"12\" />\r\n        </svg>\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from 'react';\nimport { Outlet } from 'react-router-dom';\nimport MessageHandler from '../components/MessageHandler';\nimport Nav from '../components/Nav';\nimport MobileNav from '../components/Nav/MobileNav';\nimport {\n  useGetSearchEnabledQuery,\n  useGetEndpointsQuery,\n  useGetPresetsQuery\n} from '~/data-provider';\nimport store from '~/store';\nimport { useSetRecoilState } from 'recoil';\nimport { useAuthContext } from '~/hooks/AuthContext';\nexport default function Root() {\n  const [navVisible, setNavVisible] = useState(false);\n\n  const setIsSearchEnabled = useSetRecoilState(store.isSearchEnabled);\n  const setEndpointsConfig = useSetRecoilState(store.endpointsConfig);\n  const setPresets = useSetRecoilState(store.presets);\n  const { user } = useAuthContext();\n\n  const searchEnabledQuery = useGetSearchEnabledQuery();\n  const endpointsQuery = useGetEndpointsQuery();\n  const presetsQuery = useGetPresetsQuery({ enabled: !!user });\n\n  useEffect(() => {\n    if (endpointsQuery.data) {\n      setEndpointsConfig(endpointsQuery.data);\n    } else if (endpointsQuery.isError) {\n      console.error('Failed to get endpoints', endpointsQuery.error);\n    }\n  }, [endpointsQuery.data, endpointsQuery.isError]);\n\n  useEffect(() => {\n    if (presetsQuery.data) {\n      setPresets(presetsQuery.data);\n    } else if (presetsQuery.isError) {\n      console.error('Failed to get presets', presetsQuery.error);\n    }\n  }, [presetsQuery.data, presetsQuery.isError]);\n\n  useEffect(() => {\n    if (searchEnabledQuery.data) {\n      setIsSearchEnabled(searchEnabledQuery.data);\n    } else if (searchEnabledQuery.isError) {\n      console.error('Failed to get search enabled', searchEnabledQuery.error);\n    }\n  }, [searchEnabledQuery.data, searchEnabledQuery.isError]);\n\n  return (\n    <>\n      <div className=\"flex h-screen\">\n        <Nav navVisible={navVisible} setNavVisible={setNavVisible} />\n        <div className=\"flex h-full w-full flex-1 flex-col bg-gray-50\">\n          <div className=\"transition-width relative flex h-full w-full flex-1 flex-col items-stretch overflow-hidden bg-white pt-10 dark:bg-gray-800 md:pt-0\">\n            <MobileNav setNavVisible={setNavVisible} />\n            <Outlet />\n          </div>\n        </div>\n      </div>\n      <MessageHandler />\n    </>\n  );\n}\n","// useDocumentTitle.js\nimport { useRef, useEffect } from 'react';\n\nfunction useDocumentTitle(title, prevailOnUnmount = false) {\n  const defaultTitle = useRef(document.title);\n\n  useEffect(() => {\n    document.title = title;\n  }, [title]);\n\n  // useEffect(\n  //   () => () => {\n  //     if (!prevailOnUnmount) {\n  //       document.title = defaultTitle.current;\n  //     }\n  //   }, []\n  // );\n}\n\nexport default useDocumentTitle;\n","import React from 'react';\n\nexport default function SunIcon() {\n  return (\n    <svg\n      stroke=\"currentColor\"\n      fill=\"none\"\n      strokeWidth=\"1.5\"\n      viewBox=\"0 0 24 24\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      className=\"h-6 w-6\"\n      height=\"1em\"\n      width=\"1em\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <circle cx=\"12\" cy=\"12\" r=\"5\" />\n      <line x1=\"12\" y1=\"1\" x2=\"12\" y2=\"3\" />\n      <line x1=\"12\" y1=\"21\" x2=\"12\" y2=\"23\" />\n      <line x1=\"4.22\" y1=\"4.22\" x2=\"5.64\" y2=\"5.64\" />\n      <line x1=\"18.36\" y1=\"18.36\" x2=\"19.78\" y2=\"19.78\" />\n      <line x1=\"1\" y1=\"12\" x2=\"3\" y2=\"12\" />\n      <line x1=\"21\" y1=\"12\" x2=\"23\" y2=\"12\" />\n      <line x1=\"4.22\" y1=\"19.78\" x2=\"5.64\" y2=\"18.36\" />\n      <line x1=\"18.36\" y1=\"5.64\" x2=\"19.78\" y2=\"4.22\" />\n    </svg>\n  );\n}\n","import React from 'react';\n\nexport default function LightningIcon() {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      fill=\"none\"\n      viewBox=\"0 0 24 24\"\n      strokeWidth=\"1.5\"\n      stroke=\"currentColor\"\n      aria-hidden=\"true\"\n      className=\"h-6 w-6\"\n    >\n      <path\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n        d=\"M3.75 13.5l10.5-11.25L12 10.5h8.25L9.75 21.75 12 13.5H3.75z\"\n      />\n    </svg>\n  );\n}\n","import React from 'react';\n\nexport default function CautionIcon() {\n  return (\n    <svg\n      stroke=\"currentColor\"\n      fill=\"none\"\n      strokeWidth=\"1.5\"\n      viewBox=\"0 0 24 24\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      className=\"h-6 w-6\"\n      height=\"1em\"\n      width=\"1em\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path d=\"M10.29 3.86L1.82 18a2 2 0 0 0 1.71 3h16.94a2 2 0 0 0 1.71-3L13.71 3.86a2 2 0 0 0-3.42 0z\" />\n      <line x1=\"12\" y1=\"9\" x2=\"12\" y2=\"13\" />\n      <line x1=\"12\" y1=\"17\" x2=\"12.01\" y2=\"17\" />\n    </svg>\n  );\n}\n","import React, { useState } from 'react';\r\nimport { useRecoilValue, useSetRecoilState } from 'recoil';\r\nimport useDocumentTitle from '~/hooks/useDocumentTitle';\r\nimport Templates from '../ui/Templates';\r\nimport SunIcon from '../svg/SunIcon';\r\nimport LightningIcon from '../svg/LightningIcon';\r\nimport CautionIcon from '../svg/CautionIcon';\r\nimport ChatIcon from '../svg/ChatIcon';\r\n\r\nimport store from '~/store';\r\n\r\nexport default function Landing() {\r\n  const [showingTemplates, setShowingTemplates] = useState(false);\r\n  const setText = useSetRecoilState(store.text);\r\n  const conversation = useRecoilValue(store.conversation);\r\n  const { title = '新的对话' } = conversation || {};\r\n\r\n  useDocumentTitle(title);\r\n\r\n  const clickHandler = (e) => {\r\n    e.preventDefault();\r\n    const { innerText } = e.target;\r\n    const quote = innerText.split('\"')[1].trim();\r\n    setText(quote);\r\n  };\r\n\r\n  const showTemplates = (e) => {\r\n    e.preventDefault();\r\n    setShowingTemplates(!showingTemplates);\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex h-full flex-col items-center overflow-y-auto pt-0 text-sm dark:bg-gray-800\">\r\n      <div className=\"w-full px-6 text-gray-800 dark:text-gray-100 md:flex md:max-w-2xl md:flex-col lg:max-w-3xl\">\r\n        <h1\r\n          id=\"landing-title\"\r\n          className=\"mb-10 ml-auto mr-auto mt-6 flex items-center justify-center gap-2 text-center text-4xl font-semibold sm:mb-16 md:mt-[10vh]\"\r\n        >\r\n          {import.meta.env.VITE_APP_TITLE || 'ChatGPT'}\r\n        </h1>\r\n        <div className=\"items-start gap-3.5 text-center md:flex\">\r\n          <div className=\"mb-8 flex flex-1 flex-col gap-3.5 md:mb-auto\">\r\n            <h2 className=\"m-auto flex items-center gap-3 text-lg font-normal md:flex-col md:gap-2\">\r\n              <SunIcon />\r\n              示例\r\n            </h2>\r\n            <ul className=\"m-auto flex w-full flex-col gap-3.5 sm:max-w-md\">\r\n              <button\r\n                onClick={clickHandler}\r\n                className=\"w-full rounded-md bg-gray-50 p-3 hover:bg-gray-200 dark:bg-white/5 dark:hover:bg-gray-900\"\r\n              >\r\n                &quot;简单地解释下量子计算&quot; →\r\n              </button>\r\n              <button\r\n                onClick={clickHandler}\r\n                className=\"w-full rounded-md bg-gray-50 p-3 hover:bg-gray-200 dark:bg-white/5 dark:hover:bg-gray-900\"\r\n              >\r\n                &quot;给一个10岁的孩子过生日有什么创意吗？&quot; →\r\n              </button>\r\n              <button\r\n                onClick={clickHandler}\r\n                className=\"w-full rounded-md bg-gray-50 p-3 hover:bg-gray-200 dark:bg-white/5 dark:hover:bg-gray-900\"\r\n              >\r\n                &quot;如何在Javascript中发出HTTP请求？&quot; →\r\n              </button>\r\n            </ul>\r\n          </div>\r\n          <div className=\"mb-8 flex flex-1 flex-col gap-3.5 md:mb-auto\">\r\n            <h2 className=\"m-auto flex items-center gap-3 text-lg font-normal md:flex-col md:gap-2\">\r\n              <LightningIcon />\r\n              Capabilities\r\n            </h2>\r\n            <ul className=\"m-auto flex w-full flex-col gap-3.5 sm:max-w-md\">\r\n              <li className=\"w-full rounded-md bg-gray-50 p-3 dark:bg-white/5\">\r\n                记得用户在对话中早些时候说的话\r\n              </li>\r\n              <li className=\"w-full rounded-md bg-gray-50 p-3 dark:bg-white/5\">\r\n                允许用户提供后续更正\r\n              </li>\r\n              <li className=\"w-full rounded-md bg-gray-50 p-3 dark:bg-white/5\">\r\n                接受过拒绝不当请求的培训\r\n              </li>\r\n            </ul>\r\n          </div>\r\n          <div className=\"mb-8 flex flex-1 flex-col gap-3.5 md:mb-auto\">\r\n            <h2 className=\"m-auto flex items-center gap-3 text-lg font-normal md:flex-col md:gap-2\">\r\n              <CautionIcon />\r\n              局限\r\n            </h2>\r\n            <ul className=\"m-auto flex w-full flex-col gap-3.5 sm:max-w-md\">\r\n              <li className=\"w-full rounded-md bg-gray-50 p-3 dark:bg-white/5\">\r\n                可能偶尔会产生不正确的信息\r\n              </li>\r\n              <li className=\"w-full rounded-md bg-gray-50 p-3 dark:bg-white/5\">\r\n                可能偶尔会产生偏见或有害的内容\r\n              </li>\r\n              <li className=\"w-full rounded-md bg-gray-50 p-3 dark:bg-white/5\">\r\n                对 2021 年后的世界和事件的了解有限\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n        {/* {!showingTemplates && (\r\n          <div className=\"mt-8 mb-4 flex flex-col items-center gap-3.5 md:mt-16\">\r\n            <button\r\n              onClick={showTemplates}\r\n              className=\"btn btn-neutral justify-center gap-2 border-0 md:border\"\r\n            >\r\n              <ChatIcon />\r\n              显示提示模板\r\n            </button>\r\n          </div>\r\n        )}\r\n        {!!showingTemplates && <Templates showTemplates={showTemplates}/>} */}\r\n        <div className=\"group h-32 w-full flex-shrink-0 dark:border-gray-900/50 dark:bg-gray-800 md:h-48\" />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\n\nexport default function ScrollToBottom({ scrollHandler }) {\n  return (\n    <button\n      onClick={scrollHandler}\n      className=\"absolute bottom-[124px] right-6 z-10 cursor-pointer rounded-full border border-gray-200 bg-gray-50 text-gray-600 dark:border-white/10 dark:bg-white/10 dark:text-gray-200 md:bottom-[120px]\"\n    >\n      <svg\n        stroke=\"currentColor\"\n        fill=\"none\"\n        strokeWidth=\"2\"\n        viewBox=\"0 0 24 24\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n        className=\"m-1 h-4 w-4\"\n        height=\"1em\"\n        width=\"1em\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <line x1=\"12\" y1=\"5\" x2=\"12\" y2=\"19\" />\n        <polyline points=\"19 12 12 19 5 12\" />\n      </svg>\n    </button>\n  );\n}\n","import React from 'react';\n\nexport default function SubRow({ children, classes = '', subclasses = '', onClick }) {\n  return (\n    <div className={`flex justify-between ${classes}`} onClick={onClick}>\n      <div\n        className={`flex items-center justify-center gap-1 self-center pt-2 text-xs ${subclasses}`}\n      >\n        {children}\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\n\nexport default function Clipboard() {\n  return (\n    <svg\n      stroke=\"currentColor\"\n      fill=\"none\"\n      strokeWidth=\"2\"\n      viewBox=\"0 0 24 24\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      className=\"h-4 w-4\"\n      height=\"1em\"\n      width=\"1em\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path d=\"M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2\"></path>\n      <rect x=\"8\" y=\"2\" width=\"8\" height=\"4\" rx=\"1\" ry=\"1\" />\n    </svg>\n  );\n}\n","import React, { useRef, useState } from 'react';\nimport Clipboard from '~/components/svg/Clipboard';\nimport CheckMark from '~/components/svg/CheckMark';\n\nconst CodeBlock = ({ lang, codeChildren }) => {\n  const codeRef = useRef(null);\n\n  return (\n    <div className=\"rounded-md bg-black\">\n      <CodeBar lang={lang} codeRef={codeRef} />\n      <div className=\"overflow-y-auto p-4\">\n        <code ref={codeRef} className={`hljs !whitespace-pre language-${lang}`}>\n          {codeChildren}\n        </code>\n      </div>\n    </div>\n  );\n};\n\nconst CodeBar = React.memo(({ lang, codeRef }) => {\n  const [isCopied, setIsCopied] = useState(false);\n  return (\n    <div className=\"relative flex items-center rounded-tl-md rounded-tr-md bg-gray-800 px-4 py-2 font-sans text-xs text-gray-200\">\n      <span className=\"\">{lang}</span>\n      <button\n        className=\"ml-auto flex gap-2\"\n        onClick={async () => {\n          const codeString = codeRef.current?.textContent;\n          if (codeString)\n            navigator.clipboard.writeText(codeString).then(() => {\n              setIsCopied(true);\n              setTimeout(() => setIsCopied(false), 3000);\n            });\n        }}\n      >\n        {isCopied ? (\n          <>\n            <CheckMark />\n            Copied!\n          </>\n        ) : (\n          <>\n            <Clipboard />\n            Copy code\n          </>\n        )}\n      </button>\n    </div>\n  );\n});\nexport default CodeBlock;\n","const languages = new Set([\n 'adoc',\n 'apacheconf',\n 'arm',\n 'as',\n 'asc',\n 'atom',\n 'bat',\n 'bf',\n 'bind',\n 'c++',\n 'capnp',\n 'cc',\n 'clj',\n 'cls',\n 'cmake.in',\n 'cmd',\n 'coffee',\n 'console',\n 'cr',\n 'craftcms',\n 'crm',\n 'cs',\n 'cson',\n 'cts',\n 'cxx',\n 'dfm',\n 'docker',\n 'dst',\n 'erl',\n 'f90',\n 'f95',\n 'fs',\n 'gawk',\n 'gemspec',\n 'gms',\n 'golang',\n 'gololang',\n 'gss',\n 'gyp',\n 'h',\n 'h++',\n 'hbs',\n 'hh',\n 'hpp',\n 'hs',\n 'html',\n 'html.handlebars',\n 'html.hbs',\n 'https',\n 'hx',\n 'hxx',\n 'hylang',\n 'i7',\n 'iced',\n 'ino',\n 'instances',\n 'irb',\n 'jinja',\n 'js',\n 'jsp',\n 'jsx',\n 'julia-repl',\n 'kdb',\n 'kt',\n 'lassoscript',\n 'ls',\n 'ls',\n 'mak',\n 'make',\n 'mawk',\n 'md',\n 'mipsasm',\n 'mk',\n 'mkd',\n 'mkdown',\n 'ml',\n 'ml',\n 'mm',\n 'mma',\n 'moon',\n 'mts',\n 'nawk',\n 'nc',\n 'nginxconf',\n 'nimrod',\n 'objc',\n 'obj-c',\n 'obj-c++',\n 'objective-c++',\n 'osascript',\n 'pas',\n 'pascal',\n 'patch',\n 'pcmk',\n 'pf.conf',\n 'pl',\n 'plist',\n 'pm',\n 'podspec',\n 'postgres',\n 'postgresql',\n 'pp',\n 'ps',\n 'ps1',\n 'py',\n 'pycon',\n 'rb',\n 're',\n 'rs',\n 'rss',\n 'sas',\n 'scad',\n 'sci',\n 'sh',\n 'st',\n 'stanfuncs',\n 'step',\n 'stp',\n 'styl',\n 'svg',\n 'tao',\n 'text',\n 'thor',\n 'tk',\n 'toml',\n 'ts',\n 'tsx',\n 'txt',\n 'v',\n 'vb',\n 'vbs',\n 'wl',\n 'x++',\n 'xhtml',\n 'xjb',\n 'xls',\n 'xlsx',\n 'xpath',\n 'xq',\n 'xsd',\n 'xsl',\n 'yaml',\n 'zep',\n 'zone',\n 'zsh',\n '1c',\n 'abnf',\n 'accesslog',\n 'actionscript',\n 'ada',\n 'angelscript',\n 'apache',\n 'applescript',\n 'arcade',\n 'arduino',\n 'armasm',\n 'asciidoc',\n 'aspectj',\n 'autohotkey',\n 'autoit',\n 'avrasm',\n 'awk',\n 'axapta',\n 'bash',\n 'basic',\n 'bnf',\n 'brainfuck',\n 'c',\n 'cal',\n 'capnproto',\n 'clojure',\n 'cmake',\n 'coffeescript',\n 'coq',\n 'cos',\n 'cpp',\n 'crmsh',\n 'crystal',\n 'csharp',\n 'csp',\n 'css',\n 'd',\n 'dart',\n 'diff',\n 'django',\n 'dns',\n 'dockerfile',\n 'dos',\n 'dpr',\n 'dsconfig',\n 'dts',\n 'dust',\n 'ebnf',\n 'elixir',\n 'elm',\n 'erlang',\n 'excel',\n 'fix',\n 'fortran',\n 'fsharp',\n 'gams',\n 'gauss',\n 'gcode',\n 'gherkin',\n 'glsl',\n 'go',\n 'golo',\n 'gradle',\n 'graph',\n 'graphql',\n 'groovy',\n 'haml',\n 'handlebars',\n 'haskell',\n 'haxe',\n 'http',\n 'hy',\n 'inform7',\n 'ini',\n 'irpf90',\n 'java',\n 'javascript',\n 'json',\n 'julia',\n 'k',\n 'kotlin',\n 'lasso',\n 'ldif',\n 'leaf',\n 'less',\n 'lisp',\n 'livecodeserver',\n 'livescript',\n 'lua',\n 'makefile',\n 'markdown',\n 'mathematica',\n 'matlab',\n 'maxima',\n 'mel',\n 'mercury',\n 'mips',\n 'mizar',\n 'mojolicious',\n 'monkey',\n 'moonscript',\n 'n1ql',\n 'nginx',\n 'nim',\n 'nix',\n 'nsis',\n 'objectivec',\n 'ocaml',\n 'openscad',\n 'oxygene',\n 'p21',\n 'parser3',\n 'perl',\n 'pf',\n 'pgsql',\n 'php',\n 'plaintext',\n 'pony',\n 'powershell',\n 'processing',\n 'profile',\n 'prolog',\n 'properties',\n 'protobuf',\n 'puppet',\n 'python',\n 'python-repl',\n 'qml',\n 'r',\n 'reasonml',\n 'rib',\n 'rsl',\n 'ruby',\n 'ruleslanguage',\n 'rust',\n 'SAS',\n 'scala' ,\n 'scheme',\n 'scilab',\n 'scss',\n 'shell',\n 'smali',\n 'smalltalk',\n 'sml',\n 'sql',\n 'stan',\n 'stata',\n 'stylus',\n 'subunit',\n 'swift',\n 'tap',\n 'tcl',\n 'tex',\n 'thrift',\n 'tp',\n 'twig',\n 'typescript',\n 'vala',\n 'vbnet',\n 'vbscript',\n 'verilog',\n 'vhdl',\n 'vim',\n 'x86asm',\n 'xl',\n 'xml',\n 'xquery',\n 'yml',\n 'zephir',\n]);\n\nconst langSubset = [\n  'python',\n  'javascript',\n  'java',\n  'go',\n  'bash',\n  'c',\n  'cpp',\n  'csharp',\n  'css',\n  'diff',\n  'graphql',\n  'json',\n  'kotlin',\n  'less',\n  'lua',\n  'makefile',\n  'markdown',\n  'objectivec',\n  'perl',\n  'php',\n  'php-template',\n  'plaintext',\n  'python-repl',\n  'r',\n  'ruby',\n  'rust',\n  'scss',\n  'shell',\n  'sql',\n  'swift',\n  'typescript',\n  'vbnet',\n  'wasm',\n  'xml',\n  'yaml',\n];\n\nexport { languages, langSubset };","import React from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport rehypeKatex from 'rehype-katex';\nimport rehypeHighlight from 'rehype-highlight';\nimport remarkMath from 'remark-math';\nimport remarkGfm from 'remark-gfm';\nimport rehypeRaw from 'rehype-raw';\nimport CodeBlock from './CodeBlock';\nimport { langSubset } from '~/utils/languages.mjs';\n\nconst Content = React.memo(({ content }) => {\n  let rehypePlugins = [\n    [rehypeKatex, { output: 'mathml' }],\n    [\n      rehypeHighlight,\n      {\n        detect: true,\n        ignoreMissing: true,\n        subset: langSubset\n      }\n    ],\n    [rehypeRaw]\n  ];\n\n  return (\n    <ReactMarkdown\n      remarkPlugins={[remarkGfm, [remarkMath, { singleDollarTextMath: false }]]}\n      rehypePlugins={rehypePlugins}\n      linkTarget=\"_new\"\n      components={{\n        code,\n        p\n        // em,\n      }}\n    >\n      {content}\n    </ReactMarkdown>\n  );\n});\n\nconst code = React.memo((props) => {\n  const { inline, className, children } = props;\n  const match = /language-(\\w+)/.exec(className || '');\n  const lang = match && match[1];\n\n  if (inline) {\n    return <code className={className}>{children}</code>;\n  } else {\n    return <CodeBlock lang={lang || 'text'} codeChildren={children} />;\n  }\n});\n\nconst p = React.memo((props) => {\n  return <p className=\"mb-2 whitespace-pre-wrap\">{props?.children}</p>;\n});\n\n// const blinker = ({ node }) => {\n//   if (node.type === 'text' && node.value === '█') {\n//     return <span className=\"result-streaming\">{node.value}</span>;\n//   }\n\n//   return null;\n// };\n\n// const em = React.memo(({ node, ...props }) => {\n//   if (\n//     props.children[0] &&\n//     typeof props.children[0] === 'string' &&\n//     props.children[0].startsWith('^')\n//   ) {\n//     return <sup>{props.children[0].substring(1)}</sup>;\n//   }\n//   if (\n//     props.children[0] &&\n//     typeof props.children[0] === 'string' &&\n//     props.children[0].startsWith('~')\n//   ) {\n//     return <sub>{props.children[0].substring(1)}</sub>;\n//   }\n//   return <i {...props} />;\n// });\n\nexport default Content;\n","import React from 'react';\n\nexport default function EditIcon() {\n  return (\n    <svg\n      stroke=\"currentColor\"\n      fill=\"none\"\n      strokeWidth=\"2\"\n      viewBox=\"0 0 24 24\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      className=\"h-4 w-4\"\n      height=\"1em\"\n      width=\"1em\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path d=\"M11 4H4a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-7\" />\n      <path d=\"M18.5 2.5a2.121 2.121 0 0 1 3 3L12 15l-4 1 1-4 9.5-9.5z\" />\n    </svg>\n  );\n}\n","import React from 'react';\n\nexport default function Regenerate() {\n  return (\n    <svg\n      stroke=\"currentColor\"\n      fill=\"none\"\n      strokeWidth=\"2\"\n      viewBox=\"0 0 24 24\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      className=\"h-4 w-4\"\n      height=\"1em\"\n      width=\"1em\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <polyline points=\"1 4 1 10 7 10\" />\n      <polyline points=\"23 20 23 14 17 14\" />\n      <path d=\"M20.49 9A9 9 0 0 0 5.64 5.64L1 10m22 4l-4.64 4.36A9 9 0 0 1 3.51 15\" />\n    </svg>\n  );\n}\n","import React from 'react';\r\nimport { cn } from '~/utils/';\r\nimport Clipboard from '../svg/Clipboard';\r\nimport CheckMark from '../svg/CheckMark';\r\nimport EditIcon from '../svg/EditIcon';\r\nimport RegenerateIcon from '../svg/RegenerateIcon';\r\n\r\nexport default function HoverButtons({\r\n  isEditting,\r\n  enterEdit,\r\n  copyToClipboard,\r\n  conversation,\r\n  isSubmitting,\r\n  message,\r\n  regenerate\r\n}) {\r\n  const { endpoint } = conversation;\r\n  const [isCopied, setIsCopied] = React.useState(false);\r\n\r\n  const branchingSupported =\r\n    // azureOpenAI, openAI, chatGPTBrowser support branching, so edit enabled // 5/21/23: Bing is allowing editing and Message regenerating\r\n    !!['azureOpenAI', 'openAI', 'chatGPTBrowser', 'google', 'bingAI'].find((e) => e === endpoint);\r\n  // Sydney in bingAI supports branching, so edit enabled\r\n\r\n  const editEnabled =\r\n    !message?.error &&\r\n    message?.isCreatedByUser &&\r\n    !message?.searchResult &&\r\n    !isEditting &&\r\n    branchingSupported;\r\n\r\n  // for now, once branching is supported, regerate will be enabled\r\n  let regenerateEnabled =\r\n    // !message?.error &&\r\n    !message?.isCreatedByUser &&\r\n    !message?.searchResult &&\r\n    !isEditting &&\r\n    !isSubmitting &&\r\n    branchingSupported;\r\n\r\n  return (\r\n    <div className=\"visible mt-2 flex justify-center gap-3 self-end text-gray-400 md:gap-4 lg:absolute lg:right-0 lg:top-0 lg:mt-0 lg:translate-x-full lg:gap-1 lg:self-center lg:pl-2\">\r\n      {editEnabled ? (\r\n        <button\r\n          className=\"hover-button rounded-md p-1 hover:bg-gray-100 hover:text-gray-700 dark:text-gray-400 dark:hover:bg-gray-700 dark:hover:text-gray-200 disabled:dark:hover:text-gray-400 md:invisible md:group-hover:visible\"\r\n          onClick={enterEdit}\r\n          type=\"button\"\r\n          title=\"编辑\"\r\n        >\r\n          {/* <button className=\"rounded-md p-1 hover:bg-gray-100 hover:text-gray-700 dark:text-gray-400 dark:hover:bg-gray-700 dark:hover:text-gray-200 disabled:dark:hover:text-gray-400\"> */}\r\n          <EditIcon />\r\n        </button>\r\n      ) : null}\r\n      {regenerateEnabled ? (\r\n        <button\r\n          className=\"hover-button active rounded-md p-1 hover:bg-gray-100 hover:text-gray-700 dark:text-gray-400 dark:hover:bg-gray-700 dark:hover:text-gray-200 disabled:dark:hover:text-gray-400 md:invisible md:group-hover:visible\"\r\n          onClick={regenerate}\r\n          type=\"button\"\r\n          title=\"重新回答\"\r\n        >\r\n          {/* <button className=\"rounded-md p-1 hover:bg-gray-100 hover:text-gray-700 dark:text-gray-400 dark:hover:bg-gray-700 dark:hover:text-gray-200 disabled:dark:hover:text-gray-400\"> */}\r\n          <RegenerateIcon />\r\n        </button>\r\n      ) : null}\r\n\r\n      <button\r\n        className={cn(\r\n          'hover-button rounded-md p-1 hover:bg-gray-100 hover:text-gray-700 dark:text-gray-400 dark:hover:bg-gray-700 dark:hover:text-gray-200 disabled:dark:hover:text-gray-400 md:invisible md:group-hover:visible',\r\n          message?.isCreatedByUser ? '' : 'active'\r\n        )}\r\n        onClick={() => copyToClipboard(setIsCopied)}\r\n        type=\"button\"\r\n        title={isCopied ? '已复制' : '复制'}\r\n      >\r\n        {isCopied ? <CheckMark /> : <Clipboard />}\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\n\nexport default function SiblingSwitch({ siblingIdx, siblingCount, setSiblingIdx }) {\n  const previous = () => {\n    setSiblingIdx(siblingIdx - 1);\n  };\n\n  const next = () => {\n    setSiblingIdx(siblingIdx + 1);\n  };\n  return siblingCount > 1 ? (\n    <>\n      <button\n        className=\"disabled:text-gray-300 dark:text-white dark:disabled:text-gray-400\"\n        onClick={previous}\n        disabled={siblingIdx == 0}\n      >\n        <svg\n          stroke=\"currentColor\"\n          fill=\"none\"\n          strokeWidth=\"1.5\"\n          viewBox=\"0 0 24 24\"\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n          className=\"h-3 w-3\"\n          height=\"1em\"\n          width=\"1em\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <polyline points=\"15 18 9 12 15 6\"></polyline>\n        </svg>\n      </button>\n      <span className=\"flex-shrink-0 flex-grow\">\n        {siblingIdx + 1}/{siblingCount}\n      </span>\n      <button\n        className=\"disabled:text-gray-300 dark:text-white dark:disabled:text-gray-400\"\n        onClick={next}\n        disabled={siblingIdx == siblingCount - 1}\n      >\n        <svg\n          stroke=\"currentColor\"\n          fill=\"none\"\n          strokeWidth=\"1.5\"\n          viewBox=\"0 0 24 24\"\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n          className=\"h-3 w-3\"\n          height=\"1em\"\n          width=\"1em\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <polyline points=\"9 18 15 12 9 6\"></polyline>\n        </svg>\n      </button>\n    </>\n  ) : null;\n}\n","import React from 'react';\n\nexport default function GPTIcon({ button = false, menu = false, size = 25 }) {\n  let unit = '41';\n  let height = size;\n  let width = size;\n  let boxSize = '6';\n  if (button) {\n    // unit = '45';\n    // boxSize = '4'\n    // height = '1em';\n    // width = '1em';\n  }\n\n  return (\n    <svg\n      width={width}\n      height={height}\n      viewBox={`0 0 ${unit} ${unit}`}\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      strokeWidth=\"1.5\"\n    >\n      <path\n        d=\"M37.5324 16.8707C37.9808 15.5241 38.1363 14.0974 37.9886 12.6859C37.8409 11.2744 37.3934 9.91076 36.676 8.68622C35.6126 6.83404 33.9882 5.3676 32.0373 4.4985C30.0864 3.62941 27.9098 3.40259 25.8215 3.85078C24.8796 2.7893 23.7219 1.94125 22.4257 1.36341C21.1295 0.785575 19.7249 0.491269 18.3058 0.500197C16.1708 0.495044 14.0893 1.16803 12.3614 2.42214C10.6335 3.67624 9.34853 5.44666 8.6917 7.47815C7.30085 7.76286 5.98686 8.3414 4.8377 9.17505C3.68854 10.0087 2.73073 11.0782 2.02839 12.312C0.956464 14.1591 0.498905 16.2988 0.721698 18.4228C0.944492 20.5467 1.83612 22.5449 3.268 24.1293C2.81966 25.4759 2.66413 26.9026 2.81182 28.3141C2.95951 29.7256 3.40701 31.0892 4.12437 32.3138C5.18791 34.1659 6.8123 35.6322 8.76321 36.5013C10.7141 37.3704 12.8907 37.5973 14.9789 37.1492C15.9208 38.2107 17.0786 39.0587 18.3747 39.6366C19.6709 40.2144 21.0755 40.5087 22.4946 40.4998C24.6307 40.5054 26.7133 39.8321 28.4418 38.5772C30.1704 37.3223 31.4556 35.5506 32.1119 33.5179C33.5027 33.2332 34.8167 32.6547 35.9659 31.821C37.115 30.9874 38.0728 29.9178 38.7752 28.684C39.8458 26.8371 40.3023 24.6979 40.0789 22.5748C39.8556 20.4517 38.9639 18.4544 37.5324 16.8707ZM22.4978 37.8849C20.7443 37.8874 19.0459 37.2733 17.6994 36.1501C17.7601 36.117 17.8666 36.0586 17.936 36.0161L25.9004 31.4156C26.1003 31.3019 26.2663 31.137 26.3813 30.9378C26.4964 30.7386 26.5563 30.5124 26.5549 30.2825V19.0542L29.9213 20.998C29.9389 21.0068 29.9541 21.0198 29.9656 21.0359C29.977 21.052 29.9842 21.0707 29.9867 21.0902V30.3889C29.9842 32.375 29.1946 34.2791 27.7909 35.6841C26.3872 37.0892 24.4838 37.8806 22.4978 37.8849ZM6.39227 31.0064C5.51397 29.4888 5.19742 27.7107 5.49804 25.9832C5.55718 26.0187 5.66048 26.0818 5.73461 26.1244L13.699 30.7248C13.8975 30.8408 14.1233 30.902 14.3532 30.902C14.583 30.902 14.8088 30.8408 15.0073 30.7248L24.731 25.1103V28.9979C24.7321 29.0177 24.7283 29.0376 24.7199 29.0556C24.7115 29.0736 24.6988 29.0893 24.6829 29.1012L16.6317 33.7497C14.9096 34.7416 12.8643 35.0097 10.9447 34.4954C9.02506 33.9811 7.38785 32.7263 6.39227 31.0064ZM4.29707 13.6194C5.17156 12.0998 6.55279 10.9364 8.19885 10.3327C8.19885 10.4013 8.19491 10.5228 8.19491 10.6071V19.808C8.19351 20.0378 8.25334 20.2638 8.36823 20.4629C8.48312 20.6619 8.64893 20.8267 8.84863 20.9404L18.5723 26.5542L15.206 28.4979C15.1894 28.5089 15.1703 28.5155 15.1505 28.5173C15.1307 28.5191 15.1107 28.516 15.0924 28.5082L7.04046 23.8557C5.32135 22.8601 4.06716 21.2235 3.55289 19.3046C3.03862 17.3858 3.30624 15.3413 4.29707 13.6194ZM31.955 20.0556L22.2312 14.4411L25.5976 12.4981C25.6142 12.4872 25.6333 12.4805 25.6531 12.4787C25.6729 12.4769 25.6928 12.4801 25.7111 12.4879L33.7631 17.1364C34.9967 17.849 36.0017 18.8982 36.6606 20.1613C37.3194 21.4244 37.6047 22.849 37.4832 24.2684C37.3617 25.6878 36.8382 27.0432 35.9743 28.1759C35.1103 29.3086 33.9415 30.1717 32.6047 30.6641C32.6047 30.5947 32.6047 30.4733 32.6047 30.3889V21.188C32.6066 20.9586 32.5474 20.7328 32.4332 20.5338C32.319 20.3348 32.154 20.1698 31.955 20.0556ZM35.3055 15.0128C35.2464 14.9765 35.1431 14.9142 35.069 14.8717L27.1045 10.2712C26.906 10.1554 26.6803 10.0943 26.4504 10.0943C26.2206 10.0943 25.9948 10.1554 25.7963 10.2712L16.0726 15.8858V11.9982C16.0715 11.9783 16.0753 11.9585 16.0837 11.9405C16.0921 11.9225 16.1048 11.9068 16.1207 11.8949L24.1719 7.25025C25.4053 6.53903 26.8158 6.19376 28.2383 6.25482C29.6608 6.31589 31.0364 6.78077 32.2044 7.59508C33.3723 8.40939 34.2842 9.53945 34.8334 10.8531C35.3826 12.1667 35.5464 13.6095 35.3055 15.0128ZM14.2424 21.9419L10.8752 19.9981C10.8576 19.9893 10.8423 19.9763 10.8309 19.9602C10.8195 19.9441 10.8122 19.9254 10.8098 19.9058V10.6071C10.8107 9.18295 11.2173 7.78848 11.9819 6.58696C12.7466 5.38544 13.8377 4.42659 15.1275 3.82264C16.4173 3.21869 17.8524 2.99464 19.2649 3.1767C20.6775 3.35876 22.0089 3.93941 23.1034 4.85067C23.0427 4.88379 22.937 4.94215 22.8668 4.98473L14.9024 9.58517C14.7025 9.69878 14.5366 9.86356 14.4215 10.0626C14.3065 10.2616 14.2466 10.4877 14.2479 10.7175L14.2424 21.9419ZM16.071 17.9991L20.4018 15.4978L24.7325 17.9975V22.9985L20.4018 25.4983L16.071 22.9985V17.9991Z\"\n        fill=\"currentColor\"\n      />\n    </svg>\n  );\n}\n","import React from 'react';\n\nexport default function BingIcon({ size = 25 }) {\n  return (\n    <svg\n      width={size}\n      height={size}\n      viewBox=\"0 0 56 56\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <g clipPath=\"url(#clip0_36_2239)\">\n        <path\n          d=\"M46.9982 35.9868C46.9982 36.5323 46.9689 37.0747 46.9103 37.6092C46.5619 40.8696 45.1683 43.8178 43.0701 46.098C43.3344 45.8007 43.5726 45.4815 43.7815 45.1397C43.9426 44.8799 44.086 44.6091 44.207 44.3266C44.251 44.2337 44.291 44.137 44.3242 44.041C44.3643 43.9481 44.3974 43.8514 44.4267 43.7554C44.4599 43.6664 44.4892 43.5736 44.5146 43.4807C44.54 43.3839 44.5662 43.2879 44.5878 43.1912C44.5917 43.1803 44.5955 43.1685 44.5986 43.1576C44.621 43.0609 44.6387 42.9649 44.6572 42.8681C44.6757 42.7682 44.6942 42.6675 44.7088 42.5677C44.7088 42.5638 44.7088 42.5638 44.7088 42.5606C44.7235 42.4678 44.7343 42.3749 44.742 42.2781C44.7643 42.0589 44.7751 41.8404 44.7751 41.6172C44.7751 40.3624 44.4336 39.1848 43.8363 38.1828C43.7006 37.9487 43.5503 37.7263 43.3853 37.5148C43.1911 37.262 42.9822 37.0247 42.7548 36.8054C42.1898 36.2522 41.5299 35.7988 40.8 35.4796C40.4847 35.3384 40.1548 35.2236 39.8172 35.1378C39.8133 35.1378 39.8064 35.1339 39.8025 35.1339L39.6853 35.0933L37.9764 34.4995V34.4956L33.5056 32.9395C33.491 32.9356 33.4725 32.9356 33.4617 32.9325L33.1826 32.8287C32.2838 32.4721 31.5392 31.8041 31.0736 30.9535L29.4418 26.7387L27.571 21.9114L27.2118 20.9796L27.1201 20.79C27.0175 20.5372 26.962 20.2625 26.962 19.9769C26.962 19.9027 26.962 19.8286 26.9697 19.7615C27.0761 18.6994 27.9672 17.8676 29.0456 17.8676C29.3316 17.8676 29.6068 17.9269 29.8565 18.0346L38.1876 22.3593L39.831 23.2099C40.7005 23.7336 41.5107 24.35 42.2514 25.0446C44.9362 27.5402 46.6968 31.0378 46.9612 34.9482C46.9836 35.2931 46.9982 35.638 46.9982 35.9868Z\"\n          fill=\"url(#paint0_linear_36_2239)\"\n        />\n        <path\n          d=\"M44.7717 41.6165C44.7717 42.0472 44.7316 42.4631 44.6576 42.8682C44.6353 42.9758 44.6137 43.0835 44.5883 43.1912C44.5405 43.384 44.4896 43.5697 44.4272 43.7554C44.394 43.8522 44.3609 43.9482 44.3246 44.041C44.2876 44.1378 44.2475 44.2307 44.2075 44.3267C44.0864 44.6092 43.9431 44.8799 43.782 45.1398C43.5731 45.4816 43.3341 45.8008 43.0705 46.0981C41.8564 47.4575 37.7333 49.8813 36.214 50.8661L32.8408 52.9528C30.3695 54.4948 28.0324 55.5858 25.087 55.6599C24.9475 55.6638 24.8119 55.6677 24.6762 55.6677C24.4858 55.6677 24.2985 55.6638 24.1112 55.6568C19.1231 55.464 14.7726 52.753 12.2643 48.7466C11.1165 46.9159 10.3573 44.8144 10.1006 42.5568C10.6394 45.6424 13.2957 47.9819 16.4977 47.9819C17.62 47.9819 18.673 47.6963 19.5933 47.1906C19.6003 47.1867 19.608 47.1828 19.6157 47.1797L19.9456 46.9791L21.2884 46.1769L22.9973 45.1523V45.1039L23.2178 44.9705L38.5095 35.7988L39.6866 35.0934L39.8037 35.134C39.8076 35.134 39.8145 35.1379 39.8184 35.1379C40.156 35.2229 40.4859 35.3384 40.8012 35.4797C41.5311 35.7988 42.191 36.2522 42.756 36.8055C42.9834 37.0248 43.1923 37.262 43.3865 37.5149C43.5515 37.7263 43.7018 37.9495 43.8375 38.1828C44.4302 39.1841 44.7717 40.3616 44.7717 41.6165Z\"\n          fill=\"url(#paint1_linear_36_2239)\"\n        />\n        <path\n          d=\"M23.0013 11.0082L22.9959 45.1507L21.287 46.1761L19.9434 46.9775L19.6127 47.1804C19.6073 47.1804 19.5973 47.1859 19.5927 47.1906C18.6708 47.6931 17.6178 47.9826 16.4947 47.9826C13.2919 47.9826 10.6403 45.6431 10.0984 42.5575C10.0729 42.4155 10.0537 42.268 10.0383 42.126C10.0182 41.8568 10.0036 41.593 9.99817 41.3238V2.8986C9.99817 1.68591 10.971 0.696411 12.1734 0.696411C12.6244 0.696411 13.0453 0.838438 13.3914 1.07177L20.0428 5.47146C20.0783 5.5019 20.1176 5.52765 20.1585 5.55262C21.8782 6.74034 23.0013 8.73963 23.0013 11.0082Z\"\n          fill=\"url(#paint2_linear_36_2239)\"\n        />\n        <path\n          opacity=\"0.15\"\n          d=\"M44.7717 41.6165C44.7717 42.0472 44.7316 42.4631 44.6576 42.8682C44.6353 42.9758 44.6137 43.0835 44.5883 43.1912C44.5405 43.384 44.4896 43.5697 44.4272 43.7554C44.394 43.8522 44.3609 43.9482 44.3246 44.041C44.2876 44.1378 44.2475 44.2307 44.2075 44.3267C44.0864 44.6092 43.9431 44.8799 43.782 45.1398C43.5731 45.4816 43.3349 45.8008 43.0705 46.0981C41.8564 47.4575 37.7333 49.8813 36.214 50.8661L32.8408 52.9528C30.3695 54.4948 28.0324 55.5858 25.087 55.6599C24.9475 55.6638 24.8119 55.6677 24.6762 55.6677C24.4858 55.6677 24.2985 55.6638 24.1112 55.6568C19.1231 55.464 14.7726 52.753 12.2643 48.7466C11.1165 46.9159 10.3573 44.8144 10.1006 42.5568C10.6394 45.6424 13.2957 47.9819 16.4977 47.9819C17.62 47.9819 18.673 47.6963 19.5933 47.1906C19.6003 47.1867 19.608 47.1828 19.6157 47.1797L19.9456 46.9791L21.2884 46.1769L22.9973 45.1523V45.1039L23.2178 44.9705L38.5095 35.7988L39.6866 35.0934L39.8037 35.134C39.8076 35.134 39.8145 35.1379 39.8184 35.1379C40.156 35.2229 40.4859 35.3384 40.8012 35.4797C41.5311 35.7988 42.191 36.2522 42.756 36.8055C42.9834 37.0248 43.1923 37.262 43.3865 37.5149C43.5515 37.7263 43.7018 37.9495 43.8375 38.1828C44.4302 39.1841 44.7717 40.3616 44.7717 41.6165Z\"\n          fill=\"url(#paint3_linear_36_2239)\"\n        />\n        <path\n          opacity=\"0.1\"\n          d=\"M23.0013 11.0082L22.9959 45.1507L21.287 46.1761L19.9434 46.9775L19.6127 47.1804C19.6073 47.1804 19.5973 47.1859 19.5927 47.1906C18.6708 47.6931 17.6178 47.9826 16.4947 47.9826C13.2919 47.9826 10.6403 45.6431 10.0984 42.5575C10.0729 42.4155 10.0537 42.268 10.0383 42.126C10.0182 41.8568 10.0036 41.593 9.99817 41.3238V2.8986C9.99817 1.68591 10.971 0.696411 12.1734 0.696411C12.6244 0.696411 13.0453 0.838438 13.3914 1.07177L20.0428 5.47146C20.0783 5.5019 20.1176 5.52765 20.1585 5.55262C21.8782 6.74034 23.0013 8.73963 23.0013 11.0082Z\"\n          fill=\"url(#paint4_linear_36_2239)\"\n        />\n      </g>\n      <defs>\n        <linearGradient\n          id=\"paint0_linear_36_2239\"\n          x1=\"24.061\"\n          y1=\"24.49\"\n          x2=\"48.0304\"\n          y2=\"38.1597\"\n          gradientUnits=\"userSpaceOnUse\"\n        >\n          <stop stopColor=\"#37BDFF\" />\n          <stop offset=\"0.1832\" stopColor=\"#33BFFD\" />\n          <stop offset=\"0.3576\" stopColor=\"#28C5F5\" />\n          <stop offset=\"0.528\" stopColor=\"#15D0E9\" />\n          <stop offset=\"0.5468\" stopColor=\"#12D1E7\" />\n          <stop offset=\"0.5903\" stopColor=\"#1CD2E5\" />\n          <stop offset=\"0.7679\" stopColor=\"#42D8DC\" />\n          <stop offset=\"0.9107\" stopColor=\"#59DBD6\" />\n          <stop offset=\"1\" stopColor=\"#62DCD4\" />\n        </linearGradient>\n        <linearGradient\n          id=\"paint1_linear_36_2239\"\n          x1=\"10.099\"\n          y1=\"45.3798\"\n          x2=\"44.7715\"\n          y2=\"45.3798\"\n          gradientUnits=\"userSpaceOnUse\"\n        >\n          <stop stopColor=\"#39D2FF\" />\n          <stop offset=\"0.1501\" stopColor=\"#38CEFE\" />\n          <stop offset=\"0.2931\" stopColor=\"#35C3FA\" />\n          <stop offset=\"0.4327\" stopColor=\"#2FB0F3\" />\n          <stop offset=\"0.5468\" stopColor=\"#299AEB\" />\n          <stop offset=\"0.5827\" stopColor=\"#2692EC\" />\n          <stop offset=\"0.7635\" stopColor=\"#1A6CF1\" />\n          <stop offset=\"0.909\" stopColor=\"#1355F4\" />\n          <stop offset=\"1\" stopColor=\"#104CF5\" />\n        </linearGradient>\n        <linearGradient\n          id=\"paint2_linear_36_2239\"\n          x1=\"16.4996\"\n          y1=\"48.4653\"\n          x2=\"16.4996\"\n          y2=\"1.52914\"\n          gradientUnits=\"userSpaceOnUse\"\n        >\n          <stop stopColor=\"#1B48EF\" />\n          <stop offset=\"0.1221\" stopColor=\"#1C51F0\" />\n          <stop offset=\"0.3212\" stopColor=\"#1E69F5\" />\n          <stop offset=\"0.5676\" stopColor=\"#2190FB\" />\n          <stop offset=\"1\" stopColor=\"#26B8F4\" />\n        </linearGradient>\n        <linearGradient\n          id=\"paint3_linear_36_2239\"\n          x1=\"16.9908\"\n          y1=\"54.0427\"\n          x2=\"38.6508\"\n          y2=\"32.6475\"\n          gradientUnits=\"userSpaceOnUse\"\n        >\n          <stop stopColor=\"white\" />\n          <stop offset=\"0.3726\" stopColor=\"#FDFDFD\" />\n          <stop offset=\"0.5069\" stopColor=\"#F6F6F6\" />\n          <stop offset=\"0.6026\" stopColor=\"#EBEBEB\" />\n          <stop offset=\"0.68\" stopColor=\"#DADADA\" />\n          <stop offset=\"0.7463\" stopColor=\"#C4C4C4\" />\n          <stop offset=\"0.805\" stopColor=\"#A8A8A8\" />\n          <stop offset=\"0.8581\" stopColor=\"#888888\" />\n          <stop offset=\"0.9069\" stopColor=\"#626262\" />\n          <stop offset=\"0.9523\" stopColor=\"#373737\" />\n          <stop offset=\"0.9926\" stopColor=\"#090909\" />\n          <stop offset=\"1\" />\n        </linearGradient>\n        <linearGradient\n          id=\"paint4_linear_36_2239\"\n          x1=\"16.4996\"\n          y1=\"0.696411\"\n          x2=\"16.4996\"\n          y2=\"47.9822\"\n          gradientUnits=\"userSpaceOnUse\"\n        >\n          <stop stopColor=\"white\" />\n          <stop offset=\"0.3726\" stopColor=\"#FDFDFD\" />\n          <stop offset=\"0.5069\" stopColor=\"#F6F6F6\" />\n          <stop offset=\"0.6026\" stopColor=\"#EBEBEB\" />\n          <stop offset=\"0.68\" stopColor=\"#DADADA\" />\n          <stop offset=\"0.7463\" stopColor=\"#C4C4C4\" />\n          <stop offset=\"0.805\" stopColor=\"#A8A8A8\" />\n          <stop offset=\"0.8581\" stopColor=\"#888888\" />\n          <stop offset=\"0.9069\" stopColor=\"#626262\" />\n          <stop offset=\"0.9523\" stopColor=\"#373737\" />\n          <stop offset=\"0.9926\" stopColor=\"#090909\" />\n          <stop offset=\"1\" />\n        </linearGradient>\n        <clipPath id=\"clip0_36_2239\">\n          <rect width=\"37\" height=\"56\" fill=\"white\" transform=\"translate(10)\"></rect>\n        </clipPath>\n      </defs>\n    </svg>\n  );\n}\n","import GPTIcon from '../components/svg/GPTIcon';\nimport BingIcon from '../components/svg/BingIcon';\nimport { useAuthContext } from '~/hooks/AuthContext';\n\nconst getIcon = (props) => {\n  // { size = 30, isCreatedByUser, model, chatGptLabel, error, ...props }\n  const { size = 30, isCreatedByUser, button, model } = props;\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  const { user } = useAuthContext();\n\n  if (isCreatedByUser)\n    return (\n      <div\n        title={user?.name || 'User'}\n        style={{\n          width: size,\n          height: size\n        }}\n        className={`relative flex items-center justify-center` + props?.className}\n      >\n        <img\n          className=\"rounded-sm\"\n          src={\n            user?.avatar ||\n            `https://api.dicebear.com/6.x/initials/svg?seed=${user?.name || 'User'}&fontFamily=Verdana&fontSize=36`\n          }\n          alt=\"avatar\"\n        />\n      </div>\n    );\n  else if (!isCreatedByUser) {\n    const { endpoint, error } = props;\n\n    let icon, bg, name;\n    if (endpoint === 'azureOpenAI') {\n      const { chatGptLabel } = props;\n      icon = <GPTIcon size={size * 0.7} />;\n      bg = 'linear-gradient(0.375turn, #61bde2, #4389d0)';\n      name = chatGptLabel || 'ChatGPT';\n    } else if (endpoint === 'openAI') {\n      const { chatGptLabel } = props;\n      icon = <GPTIcon size={size * 0.7} />;\n      bg =\n        model && model.toLowerCase().startsWith('gpt-4')\n          ? '#AB68FF'\n          : chatGptLabel\n            ? `rgba(16, 163, 127, ${button ? 0.75 : 1})`\n            : `rgba(16, 163, 127, ${button ? 0.75 : 1})`;\n      name = chatGptLabel || 'ChatGPT';\n    } else if (endpoint === 'google') {\n      const { modelLabel } = props;\n      icon = <img src=\"/assets/palm.png\" />;\n      name = modelLabel || 'PaLM2';\n    } else if (endpoint === 'bingAI') {\n      const { jailbreak } = props;\n      icon = <BingIcon size={size * 0.7} />;\n      bg = jailbreak ? `radial-gradient(circle at 90% 110%, #F0F0FA, #D0E0F9)` : `transparent`;\n      name = jailbreak ? 'Sydney' : 'BingAI';\n    } else if (endpoint === 'chatGPTBrowser') {\n      icon = <GPTIcon size={size * 0.7} />;\n      bg =\n        model && model.toLowerCase().startsWith('gpt-4')\n          ? '#AB68FF'\n          : `rgba(0, 163, 255, ${button ? 0.75 : 1})`;\n      name = 'ChatGPT';\n    } else if (endpoint === null) {\n      icon = <GPTIcon size={size * 0.7} />;\n      bg = `grey`;\n      name = 'N/A';\n    } else {\n      icon = <GPTIcon size={size * 0.7} />;\n      bg = `grey`;\n      name = 'UNKNOWN';\n    }\n\n    return (\n      <div\n        title={name}\n        style={{\n          background: bg || 'transparent',\n          width: size,\n          height: size\n        }}\n        className={\n          `relative flex items-center justify-center rounded-sm text-white ` + props?.className\n        }\n      >\n        {icon}\n        {error && (\n          <span className=\"absolute right-0 top-[20px] -mr-2 flex h-4 w-4 items-center justify-center rounded-full border border-white bg-red-500 text-[10px] text-white\">\n            !\n          </span>\n        )}\n      </div>\n    );\n  }\n};\n\nexport default getIcon;\n","import { v4 } from 'uuid';\nimport { useRecoilState, useRecoilValue, useSetRecoilState } from 'recoil';\n\nimport store from '~/store';\n\nconst useMessageHandler = () => {\n  const currentConversation = useRecoilValue(store.conversation) || {};\n  const setSubmission = useSetRecoilState(store.submission);\n  const isSubmitting = useRecoilValue(store.isSubmitting);\n  const endpointsConfig = useRecoilValue(store.endpointsConfig);\n\n  const { getToken } = store.useToken(currentConversation?.endpoint);\n\n  const latestMessage = useRecoilValue(store.latestMessage);\n\n  const [messages, setMessages] = useRecoilState(store.messages);\n\n  const ask = (\n    { text, parentMessageId = null, conversationId = null, messageId = null },\n    { isRegenerate = false } = {}\n  ) => {\n    if (!!isSubmitting || text === '') {\n      return;\n    }\n\n    // determine the model to be used\n    const { endpoint } = currentConversation;\n    let endpointOption = {};\n    let responseSender = '';\n    if (endpoint === 'azureOpenAI' || endpoint === 'openAI') {\n      endpointOption = {\n        endpoint,\n        model:\n          currentConversation?.model ??\n          endpointsConfig[endpoint]?.availableModels?.[0] ??\n          'gpt-3.5-turbo',\n        chatGptLabel: currentConversation?.chatGptLabel ?? null,\n        promptPrefix: currentConversation?.promptPrefix ?? null,\n        temperature: currentConversation?.temperature ?? 1,\n        top_p: currentConversation?.top_p ?? 1,\n        presence_penalty: currentConversation?.presence_penalty ?? 0,\n        frequency_penalty: currentConversation?.frequency_penalty ?? 0,\n        token: endpointsConfig[endpoint]?.userProvide ? getToken() : null\n      };\n      responseSender = endpointOption.chatGptLabel ?? 'ChatGPT';\n    } else if (endpoint === 'google') {\n      endpointOption = {\n        endpoint,\n        model:\n          currentConversation?.model ??\n          endpointsConfig[endpoint]?.availableModels?.[0] ??\n          'chat-bison',\n        modelLabel: currentConversation?.modelLabel ?? null,\n        promptPrefix: currentConversation?.promptPrefix ?? null,\n        examples: currentConversation?.examples ?? [\n          { input: { content: '' }, output: { content: '' } }\n        ],\n        temperature: currentConversation?.temperature ?? 0.2,\n        maxOutputTokens: currentConversation?.maxOutputTokens ?? 1024,\n        topP: currentConversation?.topP ?? 0.95,\n        topK: currentConversation?.topK ?? 40,\n        token: endpointsConfig[endpoint]?.userProvide ? getToken() : null\n      };\n      responseSender = endpointOption.chatGptLabel ?? 'ChatGPT';\n    } else if (endpoint === 'bingAI') {\n      endpointOption = {\n        endpoint,\n        jailbreak: currentConversation?.jailbreak ?? false,\n        systemMessage: currentConversation?.systemMessage ?? null,\n        context: currentConversation?.context ?? null,\n        toneStyle: currentConversation?.toneStyle ?? 'creative',\n        jailbreakConversationId: currentConversation?.jailbreakConversationId ?? null,\n        conversationSignature: currentConversation?.conversationSignature ?? null,\n        clientId: currentConversation?.clientId ?? null,\n        invocationId: currentConversation?.invocationId ?? 1,\n        token: endpointsConfig[endpoint]?.userProvide ? getToken() : null\n      };\n      responseSender = endpointOption.jailbreak ? 'Sydney' : 'BingAI';\n    } else if (endpoint === 'chatGPTBrowser') {\n      endpointOption = {\n        endpoint,\n        model:\n          currentConversation?.model ??\n          endpointsConfig[endpoint]?.availableModels?.[0] ??\n          'text-davinci-002-render-sha',\n        token: endpointsConfig[endpoint]?.userProvide ? getToken() : null\n      };\n      responseSender = 'ChatGPT';\n    } else if (endpoint === null) {\n      console.error('No endpoint available');\n      return;\n    } else {\n      console.error(`Unknown endpoint ${endpoint}`);\n      return;\n    }\n\n    let currentMessages = messages;\n\n    // construct the query message\n    // this is not a real messageId, it is used as placeholder before real messageId returned\n    text = text.trim();\n    const fakeMessageId = v4();\n    parentMessageId =\n      parentMessageId || latestMessage?.messageId || '00000000-0000-0000-0000-000000000000';\n    conversationId = conversationId || currentConversation?.conversationId;\n    if (conversationId == 'search') {\n      console.error('cannot send any message under search view!');\n      return;\n    }\n    if (conversationId == 'new') {\n      parentMessageId = '00000000-0000-0000-0000-000000000000';\n      currentMessages = [];\n      conversationId = null;\n    }\n    const currentMsg = {\n      sender: 'User',\n      text,\n      current: true,\n      isCreatedByUser: true,\n      parentMessageId,\n      conversationId,\n      messageId: fakeMessageId\n    };\n\n    // construct the placeholder response message\n    const initialResponse = {\n      sender: responseSender,\n      text: '<span className=\"result-streaming\">█</span>',\n      parentMessageId: isRegenerate ? messageId : fakeMessageId,\n      messageId: (isRegenerate ? messageId : fakeMessageId) + '_',\n      conversationId,\n      unfinished: endpoint === 'azureOpenAI' || endpoint === 'openAI' ? false : true,\n      submitting: true\n    };\n\n    const submission = {\n      conversation: {\n        ...currentConversation,\n        conversationId\n      },\n      endpointOption,\n      message: {\n        ...currentMsg,\n        overrideParentMessageId: isRegenerate ? messageId : null\n      },\n      messages: currentMessages,\n      isRegenerate,\n      initialResponse\n    };\n\n    console.log('User Input:', text, submission);\n\n    if (isRegenerate) {\n      setMessages([...currentMessages, initialResponse]);\n    } else {\n      setMessages([...currentMessages, currentMsg, initialResponse]);\n    }\n    setSubmission(submission);\n  };\n\n  const regenerate = ({ parentMessageId }) => {\n    const parentMessage = messages?.find((element) => element.messageId == parentMessageId);\n\n    if (parentMessage && parentMessage.isCreatedByUser)\n      ask({ ...parentMessage }, { isRegenerate: true });\n    else\n      console.error(\n        'Failed to regenerate the message: parentMessage not found or not created by user.'\n      );\n  };\n\n  const stopGenerating = () => {\n    setSubmission(null);\n  };\n\n  return { ask, regenerate, stopGenerating };\n};\n\nexport { useMessageHandler };\n","import { useState, useEffect, useRef } from 'react';\r\nimport { useRecoilValue, useSetRecoilState } from 'recoil';\r\nimport copy from 'copy-to-clipboard';\r\nimport SubRow from './Content/SubRow';\r\nimport Content from './Content/Content';\r\nimport MultiMessage from './MultiMessage';\r\nimport HoverButtons from './HoverButtons';\r\nimport SiblingSwitch from './SiblingSwitch';\r\nimport getIcon from '~/utils/getIcon';\r\nimport { useMessageHandler } from '~/utils/handleSubmit';\r\nimport { useGetConversationByIdQuery } from '~/data-provider';\r\nimport { cn } from '~/utils/';\r\nimport store from '~/store';\r\n\r\nfunction isJson(str) {\r\n  try {\r\n    JSON.parse(str);\r\n  } catch (e) {\r\n    return false;\r\n  }\r\n  return true;\r\n}\r\n\r\nexport default function Message({\r\n  conversation,\r\n  message,\r\n  scrollToBottom,\r\n  currentEditId,\r\n  setCurrentEditId,\r\n  siblingIdx,\r\n  siblingCount,\r\n  setSiblingIdx\r\n}) {\r\n  const { text, searchResult, isCreatedByUser, error, submitting, unfinished } = message;\r\n  const isSubmitting = useRecoilValue(store.isSubmitting);\r\n  const setLatestMessage = useSetRecoilState(store.latestMessage);\r\n  const [abortScroll, setAbort] = useState(false);\r\n  const textEditor = useRef(null);\r\n  const last = !message?.children?.length;\r\n  const edit = message.messageId == currentEditId;\r\n  const { ask, regenerate } = useMessageHandler();\r\n  const { switchToConversation } = store.useConversation();\r\n  const blinker = submitting && isSubmitting;\r\n  const getConversationQuery = useGetConversationByIdQuery(message.conversationId, {\r\n    enabled: false\r\n  });\r\n\r\n  // debugging\r\n  // useEffect(() => {\r\n  //   console.log('isSubmitting:', isSubmitting);\r\n  //   console.log('unfinished:', unfinished);\r\n  // }, [isSubmitting, unfinished]);\r\n\r\n  useEffect(() => {\r\n    if (blinker && !abortScroll) {\r\n      scrollToBottom();\r\n    }\r\n  }, [isSubmitting, blinker, text, scrollToBottom]);\r\n\r\n  useEffect(() => {\r\n    if (last) {\r\n      setLatestMessage({ ...message });\r\n    }\r\n  }, [last, message]);\r\n\r\n  const enterEdit = (cancel) => setCurrentEditId(cancel ? -1 : message.messageId);\r\n\r\n  const handleWheel = () => {\r\n    if (blinker) {\r\n      setAbort(true);\r\n    } else {\r\n      setAbort(false);\r\n    }\r\n  };\r\n\r\n  const getError = (text) => {\r\n    const errorMessage = text.length > 512 ? text.slice(0, 512) + '...' : text;\r\n    const match = text.match(/\\{[^{}]*\\}/);\r\n    var json = match ? match[0] : '';\r\n    if (isJson(json)) {\r\n      json = JSON.parse(json);\r\n      if (json.code === 'invalid_api_key') {\r\n        return 'Invalid API key. Please check your API key and try again. You can access your API key by clicking on the model logo in the top-left corner of the textbox.';\r\n      } else if (json.type === 'insufficient_quota') {\r\n        return \"We're sorry, but the default API key has reached its limit. To continue using this service, please set up your own API key. You can do this by clicking on the model logo in the top-left corner of the textbox.\";\r\n      } else {\r\n        return `Oops! Something went wrong. Please try again in a few moments. Here's the specific error message we encountered: ${errorMessage}`;\r\n      }\r\n    } else {\r\n      return `Oops! Something went wrong. Please try again in a few moments. Here's the specific error message we encountered: ${errorMessage}`;\r\n    }\r\n  };\r\n\r\n  const props = {\r\n    className:\r\n      'w-full border-b border-black/10 dark:border-gray-900/50 text-gray-800 bg-white dark:text-gray-100 group dark:bg-gray-800'\r\n  };\r\n\r\n  const icon = getIcon({\r\n    ...conversation,\r\n    ...message\r\n  });\r\n\r\n  if (!isCreatedByUser)\r\n    props.className =\r\n      'w-full border-b border-black/10 bg-gray-50 dark:border-gray-900/50 text-gray-800 dark:text-gray-100 group bg-gray-100 dark:bg-[#444654]';\r\n\r\n  if (message.bg && searchResult) {\r\n    props.className = message.bg.split('hover')[0];\r\n    props.titleclass = message.bg.split(props.className)[1] + ' cursor-pointer';\r\n  }\r\n\r\n  const resubmitMessage = () => {\r\n    const text = textEditor.current.innerText;\r\n\r\n    ask({\r\n      text,\r\n      parentMessageId: message?.parentMessageId,\r\n      conversationId: message?.conversationId\r\n    });\r\n\r\n    setSiblingIdx(siblingCount - 1);\r\n    enterEdit(true);\r\n  };\r\n\r\n  const regenerateMessage = () => {\r\n    if (!isSubmitting && !message?.isCreatedByUser) regenerate(message);\r\n  };\r\n\r\n  const copyToClipboard = (setIsCopied) => {\r\n    setIsCopied(true);\r\n    copy(message?.text);\r\n\r\n    setTimeout(() => {\r\n      setIsCopied(false);\r\n    }, 3000);\r\n  };\r\n\r\n  const clickSearchResult = async () => {\r\n    if (!searchResult) return;\r\n    getConversationQuery.refetch(message.conversationId).then((response) => {\r\n      switchToConversation(response.data);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div {...props} onWheel={handleWheel}>\r\n        <div className=\"relative m-auto flex gap-4 p-4 text-base md:max-w-2xl md:gap-6 md:py-6 lg:max-w-2xl lg:px-0 xl:max-w-3xl\">\r\n          <div className=\"relative flex h-[30px] w-[30px] flex-col items-end text-right text-xs md:text-sm\">\r\n            {typeof icon === 'string' && icon.match(/[^\\\\x00-\\\\x7F]+/) ? (\r\n              <span className=\" direction-rtl w-40 overflow-x-scroll\">{icon}</span>\r\n            ) : (\r\n              icon\r\n            )}\r\n            <div className=\"sibling-switch invisible absolute left-0 top-2 -ml-4 flex -translate-x-full items-center justify-center gap-1 text-xs group-hover:visible\">\r\n              <SiblingSwitch\r\n                siblingIdx={siblingIdx}\r\n                siblingCount={siblingCount}\r\n                setSiblingIdx={setSiblingIdx}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"relative flex w-[calc(100%-50px)] flex-col gap-1  md:gap-3 lg:w-[calc(100%-115px)]\">\r\n            {searchResult && (\r\n              <SubRow\r\n                classes={props.titleclass + ' rounded'}\r\n                subclasses=\"switch-result pl-2 pb-2\"\r\n                onClick={clickSearchResult}\r\n              >\r\n                <strong>{`${message.title} | ${message.sender}`}</strong>\r\n              </SubRow>\r\n            )}\r\n            <div className=\"flex flex-grow flex-col gap-3\">\r\n              {error ? (\r\n                <div className=\"flex flex min-h-[20px] flex-grow flex-col items-start gap-2 gap-4  text-red-500\">\r\n                  <div className=\"rounded-md border border-red-500 bg-red-500/10 px-3 py-2 text-sm text-gray-600 dark:text-gray-100\">\r\n                   {getError(text)}\r\n                  </div>\r\n                </div>\r\n              ) : edit ? (\r\n                <div className=\"flex min-h-[20px] flex-grow flex-col items-start gap-4 \">\r\n                  {/* <div className={`${blinker ? 'result-streaming' : ''} markdown prose dark:prose-invert light w-full break-words`}> */}\r\n                  <div\r\n                    className=\"markdown prose dark:prose-invert light w-full whitespace-pre-wrap break-words border-none focus:outline-none\"\r\n                    contentEditable={true}\r\n                    ref={textEditor}\r\n                    suppressContentEditableWarning={true}\r\n                  >\r\n                    {text}\r\n                  </div>\r\n                  <div className=\"mt-2 flex w-full justify-center text-center\">\r\n                    <button\r\n                      className=\"btn btn-primary relative mr-2\"\r\n                      disabled={isSubmitting}\r\n                      onClick={resubmitMessage}\r\n                    >\r\n                      保存并提交\r\n                    </button>\r\n                    <button className=\"btn btn-neutral relative\" onClick={() => enterEdit(true)}>\r\n                      取消\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              ) : (\r\n                <>\r\n                  <div\r\n                    className={cn(\r\n                      'flex min-h-[20px] flex-grow flex-col items-start gap-4 ',\r\n                      isCreatedByUser ? 'whitespace-pre-wrap' : ''\r\n                    )}\r\n                  >\r\n                    {/* <div className={`${blinker ? 'result-streaming' : ''} markdown prose dark:prose-invert light w-full break-words`}> */}\r\n                    <div className=\"markdown prose dark:prose-invert light w-full break-words\">\r\n                      {!isCreatedByUser ? (\r\n                        <>\r\n                          <Content content={text} />\r\n                        </>\r\n                      ) : (\r\n                        <>{text}</>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                  {/* {!isSubmitting && cancelled ? (\r\n                    <div className=\"flex flex min-h-[20px] flex-grow flex-col items-start gap-2 gap-4  text-red-500\">\r\n                      <div className=\"rounded-md border border-blue-400 bg-blue-500/10 px-3 py-2 text-sm text-gray-600 dark:text-gray-100\">\r\n                        {`这是一条已取消的信息。`}\r\n                      </div>\r\n                    </div>\r\n                  ) : null} */}\r\n                  {!isSubmitting && unfinished ? (\r\n                    <div className=\"flex flex min-h-[20px] flex-grow flex-col items-start gap-2 gap-4  text-red-500\">\r\n                      <div className=\"rounded-md border border-blue-400 bg-blue-500/10 px-3 py-2 text-sm text-gray-600 dark:text-gray-100\">\r\n                        {`这是一条未完成的消息。人工智能可能仍在生成响应，或者它被中止了。刷新或稍后访问以查看更多更新。`}\r\n                      </div>\r\n                    </div>\r\n                  ) : null}\r\n                </>\r\n              )}\r\n            </div>\r\n            <HoverButtons\r\n              isEditting={edit}\r\n              isSubmitting={isSubmitting}\r\n              message={message}\r\n              conversation={conversation}\r\n              enterEdit={() => enterEdit()}\r\n              regenerate={() => regenerateMessage()}\r\n              copyToClipboard={copyToClipboard}\r\n            />\r\n            <SubRow subclasses=\"switch-container\">\r\n              <SiblingSwitch\r\n                siblingIdx={siblingIdx}\r\n                siblingCount={siblingCount}\r\n                setSiblingIdx={setSiblingIdx}\r\n              />\r\n            </SubRow>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <MultiMessage\r\n        messageId={message.messageId}\r\n        conversation={conversation}\r\n        messagesTree={message.children}\r\n        scrollToBottom={scrollToBottom}\r\n        currentEditId={currentEditId}\r\n        setCurrentEditId={setCurrentEditId}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from 'react';\nimport { useRecoilState } from 'recoil';\nimport Message from './Message';\n\nimport store from '~/store';\n\nexport default function MultiMessage({\n  messageId,\n  conversation,\n  messagesTree,\n  scrollToBottom,\n  currentEditId,\n  setCurrentEditId,\n  isSearchView\n}) {\n  // const [siblingIdx, setSiblingIdx] = useState(0);\n\n  const [siblingIdx, setSiblingIdx] = useRecoilState(store.messagesSiblingIdxFamily(messageId));\n\n  const setSiblingIdxRev = (value) => {\n    setSiblingIdx(messagesTree?.length - value - 1);\n  };\n\n  useEffect(() => {\n    // reset siblingIdx when changes, mostly a new message is submitting.\n    setSiblingIdx(0);\n  }, [messagesTree?.length]);\n\n  // if (!messageList?.length) return null;\n  if (!(messagesTree && messagesTree.length)) {\n    return null;\n  }\n\n  if (siblingIdx >= messagesTree?.length) {\n    setSiblingIdx(0);\n    return null;\n  }\n\n  const message = messagesTree[messagesTree.length - siblingIdx - 1];\n  if (isSearchView)\n    return (\n      <>\n        {messagesTree\n          ? messagesTree.map((message) => (\n            <Message\n              key={message.messageId}\n              conversation={conversation}\n              message={message}\n              scrollToBottom={scrollToBottom}\n              currentEditId={currentEditId}\n              setCurrentEditId={null}\n              siblingIdx={1}\n              siblingCount={1}\n              setSiblingIdx={null}\n            />\n          ))\n          : null}\n      </>\n    );\n  return (\n    <Message\n      key={message.messageId}\n      conversation={conversation}\n      message={message}\n      scrollToBottom={scrollToBottom}\n      currentEditId={currentEditId}\n      setCurrentEditId={setCurrentEditId}\n      siblingIdx={messagesTree.length - siblingIdx - 1}\n      siblingCount={messagesTree.length}\n      setSiblingIdx={setSiblingIdxRev}\n    />\n  );\n}\n","import React, { useEffect, useState } from 'react';\r\nimport { useRecoilValue } from 'recoil';\r\nimport DialogTemplate from '../ui/DialogTemplate';\r\nimport { Dialog } from '../ui/Dialog.tsx';\r\nimport { Input } from '../ui/Input.tsx';\r\nimport { Label } from '../ui/Label.tsx';\r\nimport { cn } from '~/utils/';\r\nimport cleanupPreset from '~/utils/cleanupPreset';\r\nimport { useCreatePresetMutation } from '~/data-provider';\r\nimport store from '~/store';\r\n\r\nconst SaveAsPresetDialog = ({ open, onOpenChange, preset }) => {\r\n  const [title, setTitle] = useState(preset?.title || 'My Preset');\r\n  const endpointsConfig = useRecoilValue(store.endpointsConfig);\r\n  const createPresetMutation = useCreatePresetMutation();\r\n\r\n  const defaultTextProps =\r\n    'rounded-md border border-gray-300 bg-transparent text-sm shadow-[0_0_10px_rgba(0,0,0,0.10)] outline-none placeholder:text-gray-400 focus:outline-none focus:ring-gray-400 focus:ring-opacity-20 focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 dark:border-gray-400 dark:bg-gray-700 dark:text-gray-50 dark:shadow-[0_0_15px_rgba(0,0,0,0.10)] dark:focus:border-gray-400 dark:focus:outline-none dark:focus:ring-0 dark:focus:ring-gray-400 dark:focus:ring-offset-0';\r\n\r\n  const submitPreset = () => {\r\n    const _preset = cleanupPreset({\r\n      preset: {\r\n        ...preset,\r\n        title\r\n      },\r\n      endpointsConfig\r\n    });\r\n    createPresetMutation.mutate(_preset);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setTitle(preset?.title || 'My Preset');\r\n  }, [open]);\r\n\r\n  return (\r\n    <Dialog open={open} onOpenChange={onOpenChange}>\r\n      <DialogTemplate\r\n        title=\"保存预设\"\r\n        main={\r\n          <div className=\"grid w-full items-center gap-2\">\r\n            <Label htmlFor=\"chatGptLabel\" className=\"text-left text-sm font-medium\">\r\n              预设名称\r\n            </Label>\r\n            <Input\r\n              id=\"chatGptLabel\"\r\n              value={title || ''}\r\n              onChange={(e) => setTitle(e.target.value || '')}\r\n              placeholder=\"自定义名称方便使用\"\r\n              className={cn(\r\n                defaultTextProps,\r\n                'flex h-10 max-h-10 w-full resize-none px-3 py-2 focus:outline-none focus:ring-0 focus:ring-opacity-0 focus:ring-offset-0'\r\n              )}\r\n            />\r\n          </div>\r\n        }\r\n        selection={{\r\n          selectHandler: submitPreset,\r\n          selectClasses: 'bg-green-600 hover:bg-green-700 dark:hover:bg-green-800 text-white',\r\n          selectText: '保存'\r\n        }}\r\n      />\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default SaveAsPresetDialog;\r\n","import React from 'react';\nimport CheckMark from '../svg/CheckMark.jsx';\nimport { Listbox, Transition } from '@headlessui/react';\nimport { cn } from '~/utils/';\n\nfunction SelectDropDown({\n  title = 'Model',\n  value,\n  disabled,\n  setValue,\n  availableValues,\n  showAbove = false,\n  showLabel = true,\n  containerClassName,\n  className\n}) {\n  return (\n    <div className={cn('flex items-center justify-center gap-2', containerClassName)}>\n      <div className=\"relative w-full\">\n        <Listbox value={value} onChange={setValue} disabled={disabled}>\n          {({ open }) => (\n            <>\n              <Listbox.Button\n                className={cn(\n                  'relative flex w-full cursor-default flex-col rounded-md border border-black/10 bg-white py-2 pl-3 pr-10 text-left focus:border-green-600 focus:outline-none focus:ring-1 focus:ring-green-600 dark:border-white/20 dark:bg-gray-800 sm:text-sm',\n                  className\n                )}\n              >\n                {' '}\n                {showLabel && (\n                  <Listbox.Label\n                    className=\"block text-xs text-gray-700 dark:text-gray-500\"\n                    id=\"headlessui-listbox-label-:r1:\"\n                    data-headlessui-state=\"\"\n                  >\n                    {title}\n                  </Listbox.Label>\n                )}\n                <span className=\"inline-flex w-full truncate\">\n                  <span\n                    className={cn(\n                      'flex h-6 items-center gap-1 truncate text-sm text-gray-900 dark:text-white',\n                      !showLabel ? 'text-xs' : ''\n                    )}\n                  >\n                    {!showLabel && (\n                      <span className=\"text-xs text-gray-700 dark:text-gray-500\">{title}:</span>\n                    )}\n                    {value}\n                  </span>\n                </span>\n                <span className=\"pointer-events-none absolute inset-y-0 right-0 flex items-center pr-2\">\n                  <svg\n                    stroke=\"currentColor\"\n                    fill=\"none\"\n                    strokeWidth=\"2\"\n                    viewBox=\"0 0 24 24\"\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    className=\"h-4 w-4  text-gray-400\"\n                    height=\"1em\"\n                    width=\"1em\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    style={showAbove ? { transform: 'scaleY(-1)' } : {}}\n                  >\n                    <polyline points=\"6 9 12 15 18 9\"></polyline>\n                  </svg>\n                </span>\n              </Listbox.Button>\n              <Transition\n                show={open}\n                as={React.Fragment}\n                leave=\"transition ease-in duration-100\"\n                leaveFrom=\"opacity-100\"\n                leaveTo=\"opacity-0\"\n                className={showAbove ? 'bottom-full mb-3' : 'top-full mt-3'}\n              >\n                <Listbox.Options className=\"absolute z-10 mt-2 max-h-60 w-full overflow-auto rounded bg-white text-base text-xs ring-1 ring-black/10 focus:outline-none dark:bg-gray-800 dark:ring-white/20 dark:last:border-0 md:w-[100%]\">\n                  {availableValues.map((option, i) => (\n                    <Listbox.Option\n                      key={i}\n                      value={option}\n                      className=\"group relative flex h-[42px] cursor-pointer select-none items-center overflow-hidden border-b border-black/10 pl-3 pr-9 text-gray-900 last:border-0 hover:bg-[#ECECF1] dark:border-white/20 dark:text-white dark:hover:bg-gray-700\"\n                    >\n                      <span className=\"flex items-center gap-1.5 truncate\">\n                        <span\n                          className={cn(\n                            'flex h-6 items-center gap-1 text-gray-800 dark:text-gray-100',\n                            option === value ? 'font-semibold' : ''\n                          )}\n                        >\n                          {option}\n                        </span>\n                        {option === value && (\n                          <span className=\"absolute inset-y-0 right-0 flex items-center pr-3 text-gray-800 dark:text-gray-100\">\n                            <CheckMark />\n                          </span>\n                        )}\n                      </span>\n                    </Listbox.Option>\n                  ))}\n                </Listbox.Options>\n              </Transition>\n            </>\n          )}\n        </Listbox>\n      </div>\n    </div>\n  );\n}\n\nexport default SelectDropDown;\n","'use client';\n\nimport * as React from 'react';\nimport * as SliderPrimitive from '@radix-ui/react-slider';\nimport { useDoubleClick } from '@zattoo/use-double-click';\nimport { cn } from '../../utils';\n\ntype clickEvent = (event: React.MouseEvent<HTMLButtonElement>) => void;\n\ninterface SliderProps extends React.ComponentPropsWithoutRef<typeof SliderPrimitive.Root> {\n  doubleClickHandler?: clickEvent;\n}\n\nconst Slider = React.forwardRef<React.ElementRef<typeof SliderPrimitive.Root>, SliderProps>(\n  ({ className, doubleClickHandler, ...props }, ref) => (\n    <SliderPrimitive.Root\n      ref={ref}\n      className={cn('relative flex w-full touch-none select-none items-center', className)}\n      {...props}\n    >\n      <SliderPrimitive.Track className=\"relative h-1 w-full grow overflow-hidden rounded-full bg-gray-100 dark:bg-gray-900\">\n        <SliderPrimitive.Range className=\"absolute h-full bg-gray-400  dark:bg-gray-400\" />\n      </SliderPrimitive.Track>\n      <SliderPrimitive.Thumb\n        onClick={useDoubleClick(doubleClickHandler) ?? (() => {})}\n        className=\"block h-4 w-4 rounded-full border-2 border-gray-400 bg-white transition-colors focus:outline-none focus:ring-2 focus:ring-gray-400 focus:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 dark:border-gray-100 dark:bg-gray-400 dark:focus:ring-gray-400 dark:focus:ring-offset-gray-900\"\n      />\n    </SliderPrimitive.Root>\n  )\n);\nSlider.displayName = SliderPrimitive.Root.displayName;\n\nexport { Slider };\n","'use client';\n\nimport * as React from 'react';\n\n// import { NumericFormat } from 'react-number-format';\n\nimport RCInputNumber from 'rc-input-number';\nimport * as InputNumberPrimitive from 'rc-input-number';\n\nimport { cn } from '../../utils/index.jsx';\n\n// TODO help needed\n// React.ElementRef<typeof LabelPrimitive.Root>,\n// React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\n\nconst InputNumber = React.forwardRef<\n  React.ElementRef<typeof RCInputNumber>,\n  InputNumberPrimitive.InputNumberProps\n>(({ className, ...props }, ref) => {\n  return (\n    <RCInputNumber\n      className={cn(\n        'flex h-10 w-full rounded-md border border-slate-300 bg-transparent px-3 py-2 text-sm placeholder:text-slate-400 focus:outline-none focus:ring-2 focus:ring-slate-400 focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 dark:border-slate-700 dark:text-slate-50 dark:focus:ring-slate-400 dark:focus:ring-offset-slate-900',\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  );\n});\nInputNumber.displayName = 'Input';\n\n// console.log(_InputNumber);\n\n// const InputNumber = React.forwardRef(({ className, ...props }, ref) => {\n//   return (\n//     <NumericFormat\n//       className={cn(\n//         'flex h-10 w-full rounded-md border border-slate-300 bg-transparent py-2 px-3 text-sm placeholder:text-slate-400 focus:outline-none focus:ring-2 focus:ring-slate-400 focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 dark:border-slate-700 dark:text-slate-50 dark:focus:ring-slate-400 dark:focus:ring-offset-slate-900',\n//         className\n//       )}\n//       ref={ref}\n//       {...props}\n//     />\n//   );\n// });\n\nexport { InputNumber };\n","'use client';\n\nimport * as React from 'react';\nimport * as HoverCardPrimitive from '@radix-ui/react-hover-card';\n\nimport { cn } from '../../utils';\n\nconst HoverCard = HoverCardPrimitive.Root;\n\nconst HoverCardTrigger = HoverCardPrimitive.Trigger;\n\nconst HoverCardPortal = HoverCardPrimitive.Portal;\n\nconst HoverCardContent = React.forwardRef<\n  React.ElementRef<typeof HoverCardPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof HoverCardPrimitive.Content>\n>(({ className, align = 'center', sideOffset = 6, ...props }, ref) => (\n  <HoverCardPrimitive.Content\n    ref={ref}\n    align={align}\n    sideOffset={sideOffset}\n    className={cn(\n      'animate-in fade-in-0 z-50 w-64 rounded-md border border-gray-100 bg-white p-4 shadow-md outline-none dark:border-gray-800 dark:bg-gray-800',\n      className\n    )}\n    {...props}\n  />\n));\nHoverCardContent.displayName = HoverCardPrimitive.Content.displayName;\n\nexport { HoverCard, HoverCardTrigger, HoverCardContent, HoverCardPortal };\n","import React from 'react';\nimport { HoverCardPortal, HoverCardContent } from '~/components/ui/HoverCard.tsx';\n\nconst types = {\n  temp: 'Higher values = more random, while lower values = more focused and deterministic. We recommend altering this or Top P but not both.',\n  max: \"The max tokens to generate. The total length of input tokens and generated tokens is limited by the model's context length.\",\n  topp: 'An alternative to sampling with temperature, called nucleus sampling, where the model considers the results of the tokens with top_p probability mass. So 0.1 means only the tokens comprising the top 10% probability mass are considered. We recommend altering this or temperature but not both.',\n  freq: \"Number between -2.0 and 2.0. Positive values penalize new tokens based on their existing frequency in the text so far, decreasing the model's likelihood to repeat the same line verbatim.\",\n  pres: \"Number between -2.0 and 2.0. Positive values penalize new tokens based on whether they appear in the text so far, increasing the model's likelihood to talk about new topics.\"\n};\n\nfunction OptionHover({ type, side }) {\n  // const options = {};\n  // if (type === 'pres') {\n  //   options.sideOffset = 45;\n  // }\n\n  return (\n    <HoverCardPortal>\n      <HoverCardContent\n        side={side}\n        className=\"w-80 \"\n        // {...options}\n      >\n        <div className=\"space-y-2\">\n          <p className=\"text-sm text-gray-600 dark:text-gray-300\">{types[type]}</p>\n        </div>\n      </HoverCardContent>\n    </HoverCardPortal>\n  );\n}\n\nexport default OptionHover;\n","import { useRecoilValue } from 'recoil';\nimport TextareaAutosize from 'react-textarea-autosize';\nimport SelectDropDown from '../../ui/SelectDropDown';\nimport { Input } from '~/components/ui/Input.tsx';\nimport { Label } from '~/components/ui/Label.tsx';\nimport { Slider } from '~/components/ui/Slider.tsx';\nimport { InputNumber } from '~/components/ui/InputNumber.tsx';\nimport OptionHover from './OptionHover';\nimport { HoverCard, HoverCardTrigger } from '~/components/ui/HoverCard.tsx';\nimport { cn } from '~/utils/';\nconst defaultTextProps =\n  'rounded-md border border-gray-200 focus:border-slate-400 focus:bg-gray-50 bg-transparent text-sm shadow-[0_0_10px_rgba(0,0,0,0.05)] outline-none placeholder:text-gray-400 focus:outline-none focus:ring-gray-400 focus:ring-opacity-20 focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 dark:border-gray-500 dark:bg-gray-700 focus:dark:bg-gray-600 dark:text-gray-50 dark:shadow-[0_0_15px_rgba(0,0,0,0.10)] dark:focus:border-gray-400 dark:focus:outline-none dark:focus:ring-0 dark:focus:ring-gray-400 dark:focus:ring-offset-0';\n\nconst optionText =\n  'p-0 shadow-none text-right pr-1 h-8 border-transparent focus:ring-[#10a37f] focus:ring-offset-0 focus:ring-opacity-100 hover:bg-gray-800/10 dark:hover:bg-white/10 focus:bg-gray-800/10 dark:focus:bg-white/10 transition-colors';\n\nimport store from '~/store';\n\nfunction Settings(props) {\n  const {\n    readonly,\n    model,\n    chatGptLabel,\n    promptPrefix,\n    temperature,\n    topP,\n    freqP,\n    presP,\n    setOption\n  } = props;\n\n  const endpointsConfig = useRecoilValue(store.endpointsConfig);\n\n  const setModel = setOption('model');\n  const setChatGptLabel = setOption('chatGptLabel');\n  const setPromptPrefix = setOption('promptPrefix');\n  const setTemperature = setOption('temperature');\n  const setTopP = setOption('top_p');\n  const setFreqP = setOption('presence_penalty');\n  const setPresP = setOption('frequency_penalty');\n\n  const models = endpointsConfig?.['openAI']?.['availableModels'] || [];\n\n  return (\n    <div className=\"max-h-[350px] overflow-y-auto\">\n      <div className=\"grid gap-6 sm:grid-cols-2\">\n        <div className=\"col-span-1 flex flex-col items-center justify-start gap-6\">\n          <div className=\"grid w-full items-center gap-2\">\n            <SelectDropDown\n              value={model}\n              setValue={setModel}\n              availableValues={models}\n              disabled={readonly}\n              className={cn(\n                defaultTextProps,\n                'flex w-full resize-none focus:outline-none focus:ring-0 focus:ring-opacity-0 focus:ring-offset-0'\n              )}\n              containerClassName=\"flex w-full resize-none\"\n            />\n          </div>\n          <div className=\"grid w-full items-center gap-2\">\n            <Label htmlFor=\"chatGptLabel\" className=\"text-left text-sm font-medium\">\n              Custom Name <small className=\"opacity-40\">(default: blank)</small>\n            </Label>\n            <Input\n              id=\"chatGptLabel\"\n              disabled={readonly}\n              value={chatGptLabel || ''}\n              onChange={(e) => setChatGptLabel(e.target.value || null)}\n              placeholder=\"Set a custom name for ChatGPT\"\n              className={cn(\n                defaultTextProps,\n                'flex h-10 max-h-10 w-full resize-none px-3 py-2 focus:outline-none focus:ring-0 focus:ring-opacity-0 focus:ring-offset-0'\n              )}\n            />\n          </div>\n          <div className=\"grid w-full items-center gap-2\">\n            <Label htmlFor=\"promptPrefix\" className=\"text-left text-sm font-medium\">\n              Prompt Prefix <small className=\"opacity-40\">(default: blank)</small>\n            </Label>\n            <TextareaAutosize\n              id=\"promptPrefix\"\n              disabled={readonly}\n              value={promptPrefix || ''}\n              onChange={(e) => setPromptPrefix(e.target.value || null)}\n              placeholder=\"Set custom instructions. Defaults to: 'You are ChatGPT, a large language model trained by OpenAI.'\"\n              className={cn(\n                defaultTextProps,\n                'flex max-h-[300px] min-h-[100px] w-full resize-none px-3 py-2 '\n              )}\n            />\n          </div>\n        </div>\n        <div className=\"col-span-1 flex flex-col items-center justify-start gap-6\">\n          <HoverCard openDelay={300}>\n            <HoverCardTrigger className=\"grid w-full items-center gap-2\">\n              <div className=\"flex justify-between\">\n                <Label htmlFor=\"temp-int\" className=\"text-left text-sm font-medium\">\n                  Temperature <small className=\"opacity-40\">(default: 1)</small>\n                </Label>\n                <InputNumber\n                  id=\"temp-int\"\n                  disabled={readonly}\n                  value={temperature}\n                  onChange={(value) => setTemperature(value)}\n                  max={2}\n                  min={0}\n                  step={0.01}\n                  controls={false}\n                  className={cn(\n                    defaultTextProps,\n                    cn(\n                      optionText,\n                      'reset-rc-number-input reset-rc-number-input-text-right h-auto w-12 border-0 group-hover/temp:border-gray-200'\n                    )\n                  )}\n                />\n              </div>\n              <Slider\n                disabled={readonly}\n                value={[temperature]}\n                onValueChange={(value) => setTemperature(value[0])}\n                doubleClickHandler={() => setTemperature(1)}\n                max={2}\n                min={0}\n                step={0.01}\n                className=\"flex h-4 w-full\"\n              />\n            </HoverCardTrigger>\n            <OptionHover type=\"temp\" side=\"left\" />\n          </HoverCard>\n          <HoverCard openDelay={300}>\n            <HoverCardTrigger className=\"grid w-full items-center gap-2\">\n              <div className=\"flex justify-between\">\n                <Label htmlFor=\"top-p-int\" className=\"text-left text-sm font-medium\">\n                  Top P <small className=\"opacity-40\">(default: 1)</small>\n                </Label>\n                <InputNumber\n                  id=\"top-p-int\"\n                  disabled={readonly}\n                  value={topP}\n                  onChange={(value) => setTopP(value)}\n                  max={1}\n                  min={0}\n                  step={0.01}\n                  controls={false}\n                  className={cn(\n                    defaultTextProps,\n                    cn(\n                      optionText,\n                      'reset-rc-number-input reset-rc-number-input-text-right h-auto w-12 border-0 group-hover/temp:border-gray-200'\n                    )\n                  )}\n                />\n              </div>\n              <Slider\n                disabled={readonly}\n                value={[topP]}\n                onValueChange={(value) => setTopP(value[0])}\n                doubleClickHandler={() => setTopP(1)}\n                max={1}\n                min={0}\n                step={0.01}\n                className=\"flex h-4 w-full\"\n              />\n            </HoverCardTrigger>\n            <OptionHover type=\"topp\" side=\"left\" />\n          </HoverCard>\n\n          <HoverCard openDelay={300}>\n            <HoverCardTrigger className=\"grid w-full items-center gap-2\">\n              <div className=\"flex justify-between\">\n                <Label htmlFor=\"freq-penalty-int\" className=\"text-left text-sm font-medium\">\n                  Frequency Penalty <small className=\"opacity-40\">(default: 0)</small>\n                </Label>\n                <InputNumber\n                  id=\"freq-penalty-int\"\n                  disabled={readonly}\n                  value={freqP}\n                  onChange={(value) => setFreqP(value)}\n                  max={2}\n                  min={-2}\n                  step={0.01}\n                  controls={false}\n                  className={cn(\n                    defaultTextProps,\n                    cn(\n                      optionText,\n                      'reset-rc-number-input reset-rc-number-input-text-right h-auto w-12 border-0 group-hover/temp:border-gray-200'\n                    )\n                  )}\n                />\n              </div>\n              <Slider\n                disabled={readonly}\n                value={[freqP]}\n                onValueChange={(value) => setFreqP(value[0])}\n                doubleClickHandler={() => setFreqP(0)}\n                max={2}\n                min={-2}\n                step={0.01}\n                className=\"flex h-4 w-full\"\n              />\n            </HoverCardTrigger>\n            <OptionHover type=\"freq\" side=\"left\" />\n          </HoverCard>\n\n          <HoverCard openDelay={300}>\n            <HoverCardTrigger className=\"grid w-full items-center gap-2\">\n              <div className=\"flex justify-between\">\n                <Label htmlFor=\"pres-penalty-int\" className=\"text-left text-sm font-medium\">\n                  Presence Penalty <small className=\"opacity-40\">(default: 0)</small>\n                </Label>\n                <InputNumber\n                  id=\"pres-penalty-int\"\n                  disabled={readonly}\n                  value={presP}\n                  onChange={(value) => setPresP(value)}\n                  max={2}\n                  min={-2}\n                  step={0.01}\n                  controls={false}\n                  className={cn(\n                    defaultTextProps,\n                    cn(\n                      optionText,\n                      'reset-rc-number-input reset-rc-number-input-text-right h-auto w-12 border-0 group-hover/temp:border-gray-200'\n                    )\n                  )}\n                />\n              </div>\n              <Slider\n                disabled={readonly}\n                value={[presP]}\n                onValueChange={(value) => setPresP(value[0])}\n                doubleClickHandler={() => setPresP(0)}\n                max={2}\n                min={-2}\n                step={0.01}\n                className=\"flex h-4 w-full\"\n              />\n            </HoverCardTrigger>\n            <OptionHover type=\"pres\" side=\"left\" />\n          </HoverCard>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Settings;\n","import { useEffect, useState } from 'react';\r\nimport TextareaAutosize from 'react-textarea-autosize';\r\nimport { Label } from '~/components/ui/Label.tsx';\r\nimport { Checkbox } from '~/components/ui/Checkbox.tsx';\r\nimport SelectDropDown from '../../ui/SelectDropDown';\r\nimport { cn } from '~/utils/';\r\nimport useDebounce from '~/hooks/useDebounce';\r\nimport { useUpdateTokenCountMutation } from '~/data-provider';\r\n\r\nconst defaultTextProps =\r\n  'rounded-md border border-gray-200 focus:border-slate-400 focus:bg-gray-50 bg-transparent text-sm shadow-[0_0_10px_rgba(0,0,0,0.05)] outline-none placeholder:text-gray-400 focus:outline-none focus:ring-gray-400 focus:ring-opacity-20 focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 dark:border-gray-500 dark:bg-gray-700 focus:dark:bg-gray-600 dark:text-gray-50 dark:shadow-[0_0_15px_rgba(0,0,0,0.10)] dark:focus:border-gray-400 dark:focus:outline-none dark:focus:ring-0 dark:focus:ring-gray-400 dark:focus:ring-offset-0';\r\n\r\nfunction Settings(props) {\r\n  const { readonly, context, systemMessage, jailbreak, toneStyle, setOption } = props;\r\n  const [tokenCount, setTokenCount] = useState(0);\r\n  const showSystemMessage = jailbreak;\r\n  const setContext = setOption('context');\r\n  const setSystemMessage = setOption('systemMessage');\r\n  const setJailbreak = setOption('jailbreak');\r\n  const setToneStyle = (value) => setOption('toneStyle')(value.toLowerCase());\r\n  const debouncedContext = useDebounce(context, 250);\r\n  const updateTokenCountMutation = useUpdateTokenCountMutation();\r\n\r\n  useEffect(() => {\r\n    if (!debouncedContext || debouncedContext.trim() === '') {\r\n      setTokenCount(0);\r\n      return;\r\n    }\r\n\r\n    const handleTextChange = (context) => {\r\n      updateTokenCountMutation.mutate(\r\n        { text: context },\r\n        {\r\n          onSuccess: (data) => {\r\n            setTokenCount(data.count);\r\n          }\r\n        }\r\n      );\r\n    };\r\n\r\n    handleTextChange(debouncedContext);\r\n  }, [debouncedContext]);\r\n\r\n  return (\r\n   <div className=\"max-h-[350px] overflow-y-auto\">\r\n      <div className=\"grid gap-6 sm:grid-cols-2\">\r\n        <div className=\"col-span-1 flex flex-col items-center justify-start gap-6\">\r\n          <div className=\"grid w-full items-center gap-2\">\r\n           <Label htmlFor=\"toneStyle-dropdown\" className=\"text-left text-sm font-medium\">\r\n              语气风格 <small className=\"opacity-40\">(默认: 创意)</small>\r\n            </Label>\r\n            <SelectDropDown\r\n              id=\"toneStyle-dropdown\"\r\n              title={null}\r\n              value={`${toneStyle.charAt(0).toUpperCase()}${toneStyle.slice(1)}`}\r\n              setValue={setToneStyle}\r\n              availableValues={['Creative', 'Fast', 'Balanced', 'Precise']}\r\n              disabled={readonly}\r\n              className={cn(\r\n                defaultTextProps,\r\n                'flex w-full resize-none focus:outline-none focus:ring-0 focus:ring-opacity-0 focus:ring-offset-0'\r\n              )}\r\n              containerClassName=\"flex w-full resize-none\"\r\n            />\r\n          </div>\r\n          <div className=\"grid w-full items-center gap-2\">\r\n            <Label htmlFor=\"context\" className=\"text-left text-sm font-medium\">\r\n              上下文 <small className=\"opacity-40\">(默认: 空白)</small>\r\n            </Label>\r\n            <TextareaAutosize\r\n              id=\"context\"\r\n              disabled={readonly}\r\n              value={context || ''}\r\n              onChange={(e) => setContext(e.target.value || null)}\r\n              placeholder=\"Bing 最多可以使用 7k Token 用于“上下文”对话引用。 具体限制尚不清楚，但超过 7k Token 可能会报错。\"\r\n              className={cn(\r\n                defaultTextProps,\r\n                'flex max-h-[300px] min-h-[100px] w-full resize-none px-3 py-2'\r\n              )}\r\n            />\r\n            <small className=\"mb-5 text-black dark:text-white\">{`Token count: ${tokenCount}`}</small>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-span-1 flex flex-col items-center justify-start gap-6\">\r\n          <div className=\"grid w-full items-center gap-2\">\r\n            <Label htmlFor=\"jailbreak\" className=\"text-left text-sm font-medium\">\r\n              启用 Sydney <small className=\"opacity-40\">(默认: 关闭)</small>\r\n            </Label>\r\n            <div className=\"flex h-[40px] w-full items-center space-x-3\">\r\n              <Checkbox\r\n                id=\"jailbreak\"\r\n                disabled={readonly}\r\n                checked={jailbreak}\r\n                className=\"focus:ring-opacity-20 dark:border-gray-500 dark:bg-gray-700 dark:text-gray-50 dark:focus:ring-gray-600 dark:focus:ring-opacity-50 dark:focus:ring-offset-0\"\r\n                onCheckedChange={setJailbreak}\r\n              />\r\n              <label\r\n                htmlFor=\"jailbreak\"\r\n                className=\"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70 dark:text-gray-50\"\r\n              >\r\n                越狱 <small>启用 Sydney</small>\r\n              </label>\r\n            </div>\r\n          </div>\r\n          {showSystemMessage && (\r\n            <div className=\"grid w-full items-center gap-2\">\r\n              <Label\r\n                htmlFor=\"systemMessage\"\r\n                className=\"text-left text-sm font-medium\"\r\n                style={{ opacity: showSystemMessage ? '1' : '0' }}\r\n              >\r\n                <a\r\n                  href=\"http://deembear.github.io/2023/05/03/%E7%B2%BE%E9%80%89-Prompt\"\r\n                  target=\"_blank\"\r\n                  className=\"text-blue-500 transition-colors duration-200 hover:text-blue-800 dark:text-blue-400 dark:hover:text-blue-500\" rel=\"noreferrer\"\r\n                >\r\n                  系统消息命令\r\n                </a>{' '}\r\n                <small className=\"opacity-40 dark:text-gray-50\">(默认: 空白)</small>\r\n              </Label>\r\n\r\n              <TextareaAutosize\r\n                id=\"systemMessage\"\r\n                disabled={readonly}\r\n                value={systemMessage || ''}\r\n                onChange={(e) => setSystemMessage(e.target.value || null)}\r\n                placeholder=\"警告：滥用此功能会导致被禁止使用Bing！ 如果省略使用默认，就是安全的“Sydney”预设。\"\r\n                className={cn(\r\n                  defaultTextProps,\r\n                  'flex max-h-[300px] min-h-[100px] w-full resize-none px-3 py-2 placeholder:text-red-400'\r\n                )}\r\n              />\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Settings;\r\n","import React from 'react';\nimport { HoverCardPortal, HoverCardContent } from '~/components/ui/HoverCard.tsx';\n\nconst types = {\n  temp: 'Higher values = more random, while lower values = more focused and deterministic. We recommend altering this or Top P but not both.',\n  topp: 'Top-p changes how the model selects tokens for output. Tokens are selected from most K (see topK parameter) probable to least until the sum of their probabilities equals the top-p value.',\n  topk: \"Top-k changes how the model selects tokens for output. A top-k of 1 means the selected token is the most probable among all tokens in the model's vocabulary (also called greedy decoding), while a top-k of 3 means that the next token is selected from among the 3 most probable tokens (using temperature).\",\n  maxoutputtokens:\n    ' \tMaximum number of tokens that can be generated in the response. Specify a lower value for shorter responses and a higher value for longer responses.'\n};\n\nfunction OptionHover({ type, side }) {\n  // const options = {};\n  // if (type === 'pres') {\n  //   options.sideOffset = 45;\n  // }\n\n  return (\n    <HoverCardPortal>\n      <HoverCardContent\n        side={side}\n        className=\"w-80 \"\n        // {...options}\n      >\n        <div className=\"space-y-2\">\n          <p className=\"text-sm text-gray-600 dark:text-gray-300\">{types[type]}</p>\n        </div>\n      </HoverCardContent>\n    </HoverCardPortal>\n  );\n}\n\nexport default OptionHover;\n","import React from 'react';\nimport { useRecoilValue } from 'recoil';\nimport TextareaAutosize from 'react-textarea-autosize';\nimport SelectDropDown from '../../ui/SelectDropDown';\nimport { Input } from '~/components/ui/Input.tsx';\nimport { Label } from '~/components/ui/Label.tsx';\nimport { Slider } from '~/components/ui/Slider.tsx';\nimport { InputNumber } from '~/components/ui/InputNumber.tsx';\nimport OptionHover from './OptionHover';\nimport { HoverCard, HoverCardTrigger } from '~/components/ui/HoverCard.tsx';\nimport { cn } from '~/utils/';\nconst defaultTextProps =\n  'rounded-md border border-gray-200 focus:border-slate-400 focus:bg-gray-50 bg-transparent text-sm shadow-[0_0_10px_rgba(0,0,0,0.05)] outline-none placeholder:text-gray-400 focus:outline-none focus:ring-gray-400 focus:ring-opacity-20 focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 dark:border-gray-500 dark:bg-gray-700 focus:dark:bg-gray-600 dark:text-gray-50 dark:shadow-[0_0_15px_rgba(0,0,0,0.10)] dark:focus:border-gray-400 dark:focus:outline-none dark:focus:ring-0 dark:focus:ring-gray-400 dark:focus:ring-offset-0';\n\nconst optionText =\n  'p-0 shadow-none text-right pr-1 h-8 border-transparent focus:ring-[#10a37f] focus:ring-offset-0 focus:ring-opacity-100 hover:bg-gray-800/10 dark:hover:bg-white/10 focus:bg-gray-800/10 dark:focus:bg-white/10 transition-colors';\n\nimport store from '~/store';\n\nfunction Settings(props) {\n  const {\n    readonly,\n    model,\n    modelLabel,\n    promptPrefix,\n    temperature,\n    topP,\n    topK,\n    maxOutputTokens,\n    setOption,\n    edit = false\n  } = props;\n  const maxHeight = edit ? 'max-h-[305px]' : 'max-h-[350px]';\n  const endpointsConfig = useRecoilValue(store.endpointsConfig);\n\n  const setModel = setOption('model');\n  const setModelLabel = setOption('modelLabel');\n  const setPromptPrefix = setOption('promptPrefix');\n  const setTemperature = setOption('temperature');\n  const setTopP = setOption('topP');\n  const setTopK = setOption('topK');\n  const setMaxOutputTokens = setOption('maxOutputTokens');\n\n  const models = endpointsConfig?.['google']?.['availableModels'] || [];\n\n  return (\n    <div className={`${maxHeight} overflow-y-auto`}>\n      <div className=\"grid gap-6 sm:grid-cols-2\">\n        <div className=\"col-span-1 flex flex-col items-center justify-start gap-6\">\n          <div className=\"grid w-full items-center gap-2\">\n            <SelectDropDown\n              value={model}\n              setValue={setModel}\n              availableValues={models}\n              disabled={readonly}\n              className={cn(\n                defaultTextProps,\n                'flex w-full resize-none focus:outline-none focus:ring-0 focus:ring-opacity-0 focus:ring-offset-0'\n              )}\n              containerClassName=\"flex w-full resize-none\"\n            />\n          </div>\n          <div className=\"grid w-full items-center gap-2\">\n            <Label htmlFor=\"modelLabel\" className=\"text-left text-sm font-medium\">\n              Custom Name <small className=\"opacity-40\">(default: blank)</small>\n            </Label>\n            <Input\n              id=\"modelLabel\"\n              disabled={readonly}\n              value={modelLabel || ''}\n              onChange={(e) => setModelLabel(e.target.value || null)}\n              placeholder=\"Set a custom name for PaLM2\"\n              className={cn(\n                defaultTextProps,\n                'flex h-10 max-h-10 w-full resize-none px-3 py-2 focus:outline-none focus:ring-0 focus:ring-opacity-0 focus:ring-offset-0'\n              )}\n            />\n          </div>\n          <div className=\"grid w-full items-center gap-2\">\n            <Label htmlFor=\"promptPrefix\" className=\"text-left text-sm font-medium\">\n              Prompt Prefix <small className=\"opacity-40\">(default: blank)</small>\n            </Label>\n            <TextareaAutosize\n              id=\"promptPrefix\"\n              disabled={readonly}\n              value={promptPrefix || ''}\n              onChange={(e) => setPromptPrefix(e.target.value || null)}\n              placeholder=\"Set custom instructions or context. Ignored if empty.\"\n              className={cn(\n                defaultTextProps,\n                'flex max-h-[300px] min-h-[100px] w-full resize-none px-3 py-2 '\n              )}\n            />\n          </div>\n        </div>\n        <div className=\"col-span-1 flex flex-col items-center justify-start gap-6\">\n          <HoverCard openDelay={300}>\n            <HoverCardTrigger className=\"grid w-full items-center gap-2\">\n              <div className=\"flex justify-between\">\n                <Label htmlFor=\"temp-int\" className=\"text-left text-sm font-medium\">\n                  Temperature <small className=\"opacity-40\">(default: 0.2)</small>\n                </Label>\n                <InputNumber\n                  id=\"temp-int\"\n                  disabled={readonly}\n                  value={temperature}\n                  onChange={(value) => setTemperature(value)}\n                  max={1}\n                  min={0}\n                  step={0.01}\n                  controls={false}\n                  className={cn(\n                    defaultTextProps,\n                    cn(\n                      optionText,\n                      'reset-rc-number-input reset-rc-number-input-text-right h-auto w-12 border-0 group-hover/temp:border-gray-200'\n                    )\n                  )}\n                />\n              </div>\n              <Slider\n                disabled={readonly}\n                value={[temperature]}\n                onValueChange={(value) => setTemperature(value[0])}\n                doubleClickHandler={() => setTemperature(1)}\n                max={1}\n                min={0}\n                step={0.01}\n                className=\"flex h-4 w-full\"\n              />\n            </HoverCardTrigger>\n            <OptionHover type=\"temp\" side=\"left\" />\n          </HoverCard>\n          <HoverCard openDelay={300}>\n            <HoverCardTrigger className=\"grid w-full items-center gap-2\">\n              <div className=\"flex justify-between\">\n                <Label htmlFor=\"top-p-int\" className=\"text-left text-sm font-medium\">\n                  Top P <small className=\"opacity-40\">(default: 0.95)</small>\n                </Label>\n                <InputNumber\n                  id=\"top-p-int\"\n                  disabled={readonly}\n                  value={topP}\n                  onChange={(value) => setTopP(value)}\n                  max={1}\n                  min={0}\n                  step={0.01}\n                  controls={false}\n                  className={cn(\n                    defaultTextProps,\n                    cn(\n                      optionText,\n                      'reset-rc-number-input reset-rc-number-input-text-right h-auto w-12 border-0 group-hover/temp:border-gray-200'\n                    )\n                  )}\n                />\n              </div>\n              <Slider\n                disabled={readonly}\n                value={[topP]}\n                onValueChange={(value) => setTopP(value[0])}\n                doubleClickHandler={() => setTopP(1)}\n                max={1}\n                min={0}\n                step={0.01}\n                className=\"flex h-4 w-full\"\n              />\n            </HoverCardTrigger>\n            <OptionHover type=\"topp\" side=\"left\" />\n          </HoverCard>\n\n          <HoverCard openDelay={300}>\n            <HoverCardTrigger className=\"grid w-full items-center gap-2\">\n              <div className=\"flex justify-between\">\n                <Label htmlFor=\"top-k-int\" className=\"text-left text-sm font-medium\">\n                  Top K <small className=\"opacity-40\">(default: 40)</small>\n                </Label>\n                <InputNumber\n                  id=\"top-k-int\"\n                  disabled={readonly}\n                  value={topK}\n                  onChange={(value) => setTopK(value)}\n                  max={40}\n                  min={1}\n                  step={0.01}\n                  controls={false}\n                  className={cn(\n                    defaultTextProps,\n                    cn(\n                      optionText,\n                      'reset-rc-number-input reset-rc-number-input-text-right h-auto w-12 border-0 group-hover/temp:border-gray-200'\n                    )\n                  )}\n                />\n              </div>\n              <Slider\n                disabled={readonly}\n                value={[topK]}\n                onValueChange={(value) => setTopK(value[0])}\n                doubleClickHandler={() => setTopK(0)}\n                max={40}\n                min={1}\n                step={0.01}\n                className=\"flex h-4 w-full\"\n              />\n            </HoverCardTrigger>\n            <OptionHover type=\"topk\" side=\"left\" />\n          </HoverCard>\n\n          <HoverCard openDelay={300}>\n            <HoverCardTrigger className=\"grid w-full items-center gap-2\">\n              <div className=\"flex justify-between\">\n                <Label htmlFor=\"max-tokens-int\" className=\"text-left text-sm font-medium\">\n                  Max Output Tokens <small className=\"opacity-40\">(default: 1024)</small>\n                </Label>\n                <InputNumber\n                  id=\"max-tokens-int\"\n                  disabled={readonly}\n                  value={maxOutputTokens}\n                  onChange={(value) => setMaxOutputTokens(value)}\n                  max={1024}\n                  min={1}\n                  step={1}\n                  controls={false}\n                  className={cn(\n                    defaultTextProps,\n                    cn(\n                      optionText,\n                      'reset-rc-number-input reset-rc-number-input-text-right h-auto w-12 border-0 group-hover/temp:border-gray-200'\n                    )\n                  )}\n                />\n              </div>\n              <Slider\n                disabled={readonly}\n                value={[maxOutputTokens]}\n                onValueChange={(value) => setMaxOutputTokens(value[0])}\n                doubleClickHandler={() => setMaxOutputTokens(0)}\n                max={1024}\n                min={1}\n                step={1}\n                className=\"flex h-4 w-full\"\n              />\n            </HoverCardTrigger>\n            <OptionHover type=\"maxoutputtokens\" side=\"left\" />\n          </HoverCard>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Settings;\n","import React from 'react';\n\nimport OpenAISettings from './OpenAI/Settings.jsx';\nimport BingAISettings from './BingAI/Settings.jsx';\nimport GoogleSettings from './Google/Settings.jsx';\n\n// A preset dialog to show readonly preset values.\nconst Settings = ({ preset, ...props }) => {\n  const renderSettings = () => {\n    const { endpoint } = preset || {};\n    // console.log('preset', preset);\n\n    if (endpoint === 'openAI') {\n      return (\n        <OpenAISettings\n          model={preset?.model}\n          chatGptLabel={preset?.chatGptLabel}\n          promptPrefix={preset?.promptPrefix}\n          temperature={preset?.temperature}\n          topP={preset?.top_p}\n          freqP={preset?.presence_penalty}\n          presP={preset?.frequency_penalty}\n          {...props}\n        />\n      );\n    } else if (endpoint === 'bingAI') {\n      return (\n        <BingAISettings\n          toneStyle={preset?.toneStyle}\n          context={preset?.context}\n          systemMessage={preset?.systemMessage}\n          jailbreak={preset?.jailbreak}\n          {...props}\n        />\n      );\n    } else if (endpoint === 'google') {\n      return (\n        <GoogleSettings\n          model={preset?.model}\n          modelLabel={preset?.modelLabel}\n          promptPrefix={preset?.promptPrefix}\n          examples={preset?.examples}\n          temperature={preset?.temperature}\n          topP={preset?.topP}\n          topK={preset?.topK}\n          maxOutputTokens={preset?.maxOutputTokens}\n          edit={true}\n          {...props}\n        />\n      );\n    } else {\n      return <div className=\"text-black dark:text-white\">Not implemented</div>;\n    }\n  };\n\n  return renderSettings();\n};\n\nexport default Settings;\n","import React, { useEffect, useState } from 'react';\r\nimport { useRecoilValue } from 'recoil';\r\nimport exportFromJSON from 'export-from-json';\r\nimport DialogTemplate from '../ui/DialogTemplate.jsx';\r\nimport { Dialog, DialogButton } from '../ui/Dialog.tsx';\r\nimport SaveAsPresetDialog from './SaveAsPresetDialog';\r\nimport cleanupPreset from '~/utils/cleanupPreset';\r\n\r\nimport Settings from './Settings';\r\n\r\nimport store from '~/store';\r\n\r\n// A preset dialog to show readonly preset values.\r\nconst EndpointOptionsDialog = ({ open, onOpenChange, preset: _preset, title }) => {\r\n  const [preset, setPreset] = useState(_preset);\r\n  const [endpointName, setEndpointName] = useState(preset?.endpoint);\r\n\r\n  const [saveAsDialogShow, setSaveAsDialogShow] = useState(false);\r\n  const endpointsConfig = useRecoilValue(store.endpointsConfig);\r\n\r\n  if (endpointName === 'google') {\r\n    setEndpointName('PaLM');\r\n  }\r\n\r\n  const setOption = (param) => (newValue) => {\r\n    let update = {};\r\n    update[param] = newValue;\r\n    setPreset((prevState) => ({\r\n      ...prevState,\r\n      ...update\r\n    }));\r\n  };\r\n\r\n  const saveAsPreset = () => {\r\n    setSaveAsDialogShow(true);\r\n  };\r\n\r\n  const exportPreset = () => {\r\n    exportFromJSON({\r\n      data: cleanupPreset({ preset, endpointsConfig }),\r\n      fileName: `${preset?.title}.json`,\r\n      exportType: exportFromJSON.types.json\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    setPreset(_preset);\r\n  }, [open]);\r\n\r\n  return (\r\n    <>\r\n      <Dialog open={open} onOpenChange={onOpenChange}>\r\n        <DialogTemplate\r\n          title={`${title || 'View Options'} - ${endpointName}`}\r\n          className=\"max-w-full sm:max-w-4xl\"\r\n          main={\r\n            <div className=\"flex w-full flex-col items-center gap-2\">\r\n              <div className=\"w-full p-0\">\r\n                <Settings preset={preset} readonly={true} setOption={setOption} />\r\n              </div>\r\n            </div>\r\n          }\r\n          buttons={\r\n            <>\r\n              <DialogButton\r\n                onClick={saveAsPreset}\r\n                className=\"dark:hover:gray-400 border-gray-700 bg-green-600 text-white hover:bg-green-700 dark:hover:bg-green-800\"\r\n              >\r\n                保存预设\r\n              </DialogButton>\r\n            </>\r\n          }\r\n          leftButtons={\r\n            <>\r\n              <DialogButton onClick={exportPreset} className=\"dark:hover:gray-400 border-gray-700\">\r\n                Export\r\n              </DialogButton>\r\n            </>\r\n          }\r\n        />\r\n      </Dialog>\r\n      <SaveAsPresetDialog\r\n        open={saveAsDialogShow}\r\n        onOpenChange={setSaveAsDialogShow}\r\n        preset={preset}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EndpointOptionsDialog;\r\n","import React, { useState } from 'react';\nimport { useRecoilValue } from 'recoil';\nimport EndpointOptionsDialog from '../Endpoints/EndpointOptionsDialog';\nimport { cn } from '~/utils/';\n\nimport store from '~/store';\n\nconst MessageHeader = ({ isSearchView = false }) => {\n  const [saveAsDialogShow, setSaveAsDialogShow] = useState(false);\n  const conversation = useRecoilValue(store.conversation);\n  const searchQuery = useRecoilValue(store.searchQuery);\n  const { endpoint } = conversation;\n\n  const getConversationTitle = () => {\n    if (isSearchView) return `Search: ${searchQuery}`;\n    else {\n      let _title = `${endpoint}`;\n\n      if (endpoint === 'azureOpenAI' || endpoint === 'openAI') {\n        const { chatGptLabel, model } = conversation;\n        if (model) _title += `: ${model}`;\n        if (chatGptLabel) _title += ` as ${chatGptLabel}`;\n      } else if (endpoint === 'google') {\n        _title = 'PaLM';\n        const { modelLabel, model } = conversation;\n        if (model) _title += `: ${model}`;\n        if (modelLabel) _title += ` as ${modelLabel}`;\n      } else if (endpoint === 'bingAI') {\n        const { jailbreak, toneStyle } = conversation;\n        if (toneStyle) _title += `: ${toneStyle}`;\n        if (jailbreak) _title += ` as Sydney`;\n      } else if (endpoint === 'chatGPTBrowser') {\n        const { model } = conversation;\n        if (model) _title += `: ${model}`;\n      } else if (endpoint === null) {\n        null;\n      } else {\n        null;\n      }\n      return _title;\n    }\n  };\n\n  return (\n    <>\n      <div\n        className={cn(\n          'dark:text-gray-450 w-full gap-1 border-b border-black/10 bg-gray-50 text-sm text-gray-500 transition-all hover:bg-gray-100 hover:bg-opacity-30 dark:border-gray-900/50 dark:bg-gray-700 dark:hover:bg-gray-600 dark:hover:bg-opacity-100 dark:text-gray-500',\n          endpoint === 'chatGPTBrowser' ? '' : 'cursor-pointer '\n        )}\n        onClick={() => (endpoint === 'chatGPTBrowser' ? null : setSaveAsDialogShow(true))}\n      >\n        <div className=\"d-block flex w-full items-center justify-center p-3\">\n          {getConversationTitle()}\n        </div>\n      </div>\n\n      <EndpointOptionsDialog\n        open={saveAsDialogShow}\n        onOpenChange={setSaveAsDialogShow}\n        preset={conversation}\n      />\n    </>\n  );\n};\n\nexport default MessageHeader;\n","import React, { useEffect, useState, useRef, useCallback } from 'react';\nimport { useRecoilValue } from 'recoil';\nimport Spinner from '../svg/Spinner';\nimport throttle from 'lodash/throttle';\nimport { CSSTransition } from 'react-transition-group';\nimport ScrollToBottom from './ScrollToBottom';\nimport MultiMessage from './MultiMessage';\nimport MessageHeader from './MessageHeader';\nimport { useScreenshot } from '~/utils/screenshotContext.jsx';\n\nimport store from '~/store';\n\nexport default function Messages({ isSearchView = false }) {\n  const [currentEditId, setCurrentEditId] = useState(-1);\n  const [showScrollButton, setShowScrollButton] = useState(false);\n  const scrollableRef = useRef(null);\n  const messagesEndRef = useRef(null);\n\n  const messagesTree = useRecoilValue(store.messagesTree);\n  const searchResultMessagesTree = useRecoilValue(store.searchResultMessagesTree);\n\n  const _messagesTree = isSearchView ? searchResultMessagesTree : messagesTree;\n\n  const conversation = useRecoilValue(store.conversation) || {};\n  const { conversationId } = conversation;\n\n  const { screenshotTargetRef } = useScreenshot();\n\n  // const models = useRecoilValue(store.models) || [];\n  // const modelName = models.find(element => element.model == model)?.name;\n\n  useEffect(() => {\n    const timeoutId = setTimeout(() => {\n      const { scrollTop, scrollHeight, clientHeight } = scrollableRef.current;\n      const diff = Math.abs(scrollHeight - scrollTop);\n      const percent = Math.abs(clientHeight - diff) / clientHeight;\n      const hasScrollbar = scrollHeight > clientHeight && percent > 0.2;\n      setShowScrollButton(hasScrollbar);\n    }, 650);\n\n    // Add a listener on the window object\n    window.addEventListener('scroll', handleScroll);\n\n    return () => {\n      clearTimeout(timeoutId);\n      window.removeEventListener('scroll', handleScroll);\n    };\n  }, [_messagesTree]);\n\n  const scrollToBottom = useCallback(\n    throttle(\n      () => {\n        messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n        setShowScrollButton(false);\n      },\n      750,\n      { leading: true }\n    ),\n    [messagesEndRef]\n  );\n\n  const handleScroll = () => {\n    const { scrollTop, scrollHeight, clientHeight } = scrollableRef.current;\n    const diff = Math.abs(scrollHeight - scrollTop);\n    const percent = Math.abs(clientHeight - diff) / clientHeight;\n    if (percent <= 0.2) {\n      setShowScrollButton(false);\n    } else {\n      setShowScrollButton(true);\n    }\n  };\n\n  let timeoutId = null;\n  const debouncedHandleScroll = () => {\n    clearTimeout(timeoutId);\n    timeoutId = setTimeout(handleScroll, 100);\n  };\n\n  const scrollHandler = (e) => {\n    e.preventDefault();\n    scrollToBottom();\n  };\n\n  return (\n    <div\n      className=\"flex-1 overflow-y-auto pt-0\"\n      ref={scrollableRef}\n      onScroll={debouncedHandleScroll}\n    >\n      <div className=\"dark:gpt-dark-gray mb-32 h-auto md:mb-48\" ref={screenshotTargetRef}>\n        <div className=\"dark:gpt-dark-gray flex h-auto flex-col items-center text-sm\">\n          <MessageHeader isSearchView={isSearchView} />\n          {_messagesTree === null ? (\n            <Spinner />\n          ) : _messagesTree?.length == 0 && isSearchView ? (\n            <div className=\"flex w-full items-center justify-center gap-1 bg-gray-50 p-3 text-sm text-gray-500 dark:border-gray-900/50 dark:bg-gray-800 dark:text-gray-300\">\n              Nothing found\n            </div>\n          ) : (\n            <>\n              <MultiMessage\n                key={conversationId} // avoid internal state mixture\n                messageId={conversationId}\n                conversation={conversation}\n                messagesTree={_messagesTree}\n                scrollToBottom={scrollToBottom}\n                currentEditId={currentEditId}\n                setCurrentEditId={setCurrentEditId}\n                isSearchView={isSearchView}\n              />\n              <CSSTransition\n                in={showScrollButton}\n                timeout={400}\n                classNames=\"scroll-down\"\n                unmountOnExit={false}\n                // appear\n              >\n                {() => showScrollButton && <ScrollToBottom scrollHandler={scrollHandler} />}\n              </CSSTransition>\n            </>\n          )}\n          <div\n            className=\"dark:gpt-dark-gray group h-0 w-full flex-shrink-0 dark:border-gray-900/50\"\n            ref={messagesEndRef}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\n\nexport default function StopGeneratingIcon() {\n  return (\n    <svg\n      stroke=\"currentColor\"\n      fill=\"none\"\n      strokeWidth=\"2.5\"\n      viewBox=\"0 0 24 24\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      className=\"h-3 w-3\"\n      height=\"1em\"\n      width=\"1em\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <rect x=\"3\" y=\"3\" width=\"18\" height=\"18\" rx=\"2\" ry=\"2\"></rect>\n    </svg>\n  );\n}\n","import { useState } from 'react';\r\nimport { FileUp } from 'lucide-react';\r\nimport { cn } from '~/utils/';\r\n\r\nconst FileUpload = ({\r\n  onFileSelected,\r\n  successText = null,\r\n  invalidText = null,\r\n  validator = null,\r\n  text = null,\r\n  id = '1'\r\n}) => {\r\n  const [statusColor, setStatusColor] = useState('text-gray-600');\r\n  const [status, setStatus] = useState(null);\r\n\r\n  const handleFileChange = (event) => {\r\n    const file = event.target.files[0];\r\n    if (!file) return;\r\n\r\n    const reader = new FileReader();\r\n    reader.onload = (e) => {\r\n      const jsonData = JSON.parse(e.target.result);\r\n      if (validator && !validator(jsonData)) {\r\n        setStatus('invalid');\r\n        setStatusColor('text-red-600');\r\n        return;\r\n      }\r\n\r\n      if (validator) {\r\n        setStatus('success');\r\n        setStatusColor('text-green-500 dark:text-green-500');\r\n      }\r\n\r\n      onFileSelected(jsonData);\r\n    };\r\n    reader.readAsText(file);\r\n  };\r\n\r\n  return (\r\n    <label\r\n      htmlFor={`file-upload-${id}`}\r\n      className={cn(\r\n        'mr-1 flex h-auto cursor-pointer items-center rounded bg-transparent px-2 py-1 text-xs font-medium font-normal transition-colors hover:bg-slate-200 hover:text-green-700 dark:bg-transparent dark:text-gray-300 dark:hover:bg-gray-800 dark:hover:text-green-500',\r\n        statusColor\r\n      )}\r\n    >\r\n      <FileUp className=\"mr-1 flex w-[22px] items-center stroke-1\" />\r\n      <span className=\"flex text-xs \">\r\n        {!status ? text || 'Import' : status === 'success' ? successText : invalidText}\r\n      </span>\r\n      <input\r\n        id={`file-upload-${id}`}\r\n        value=\"\"\r\n        type=\"file\"\r\n        className=\"hidden \"\r\n        accept=\".json\"\r\n        onChange={handleFileChange}\r\n      />\r\n    </label>\r\n  );\r\n};\r\n\r\nexport default FileUpload;\r\n","import React from 'react';\nimport { Input } from '../../ui/Input.tsx';\nimport { Label } from '../../ui/Label.tsx';\nimport { cn } from '~/utils/';\n\nfunction InputWithLabel({ value, onChange, label, id }) {\n  const defaultTextProps =\n    'rounded-md border border-gray-300 bg-transparent text-sm shadow-[0_0_10px_rgba(0,0,0,0.10)] outline-none placeholder:text-gray-400 focus:outline-none focus:ring-gray-400 focus:ring-opacity-20 focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 dark:border-gray-400 dark:bg-gray-700 dark:text-gray-50 dark:shadow-[0_0_15px_rgba(0,0,0,0.10)] dark:focus:border-gray-400 dark:focus:outline-none dark:focus:ring-0 dark:focus:ring-gray-400 dark:focus:ring-offset-0';\n\n  return (\n    <>\n      <Label htmlFor={id} className=\"text-left text-sm font-medium\">\n        {label}\n        <br />\n      </Label>\n\n      <Input\n        id={id}\n        value={value || ''}\n        onChange={onChange}\n        placeholder={`Enter ${label}`}\n        className={cn(\n          defaultTextProps,\n          'flex h-10 max-h-10 w-full resize-none px-3 py-2 focus:outline-none focus:ring-0 focus:ring-opacity-0 focus:ring-offset-0'\n        )}\n      />\n    </>\n  );\n}\n\nexport default InputWithLabel;\n","import { useEffect, useState } from 'react';\nimport DialogTemplate from '../../ui/DialogTemplate';\nimport { Dialog } from '../../ui/Dialog.tsx';\nimport * as Checkbox from '@radix-ui/react-checkbox';\nimport { CheckIcon } from '@radix-ui/react-icons';\nimport FileUpload from '../NewConversationMenu/FileUpload';\nimport store from '~/store';\nimport InputWithLabel from './InputWithLabel';\n\nfunction isJson(str) {\n  try {\n    JSON.parse(str);\n  } catch (e) {\n    return false;\n  }\n  return true;\n}\n\nconst SetTokenDialog = ({ open, onOpenChange, endpoint }) => {\n  const [token, setToken] = useState('');\n  const [showPanel, setShowPanel] = useState(false);\n  const { getToken, saveToken } = store.useToken(endpoint);\n\n  const submit = () => {\n    saveToken(token);\n    onOpenChange(false);\n  };\n\n  useEffect(() => {\n    let oldToken = getToken();\n    if (isJson(token)) {\n      setShowPanel(true);\n    }\n    setToken(oldToken ?? '');\n  }, [open]);\n\n  useEffect(() => {\n    if (!showPanel && isJson(token)) {\n      setToken('');\n    }\n  }, [showPanel]);\n\n  const helpText = {\n    bingAI: (\n      <small className=\"break-all text-gray-600\">\n        {`As of 5/23/23, to use Bing, you will need your full cookie string from bing.com. Use dev tools or an extension while\n        logged into the site to view it in your network request Cookie header value. For full instructions, see my `}\n        <a\n          target=\"_blank\"\n          href=\"https://github.com/waylaidwanderer/node-chatgpt-api/issues/378#issuecomment-1559868368\"\n          rel=\"noreferrer\"\n          className=\"text-blue-600 underline\"\n        >\n          comment here\n        </a>\n      </small>\n    ),\n    chatGPTBrowser: (\n      <small className=\"break-all text-gray-600\">\n        {`To get your Access token For ChatGPT 'Free Version', login to `}\n        <a\n          target=\"_blank\"\n          href=\"https://chat.openai.com\"\n          rel=\"noreferrer\"\n          className=\"text-blue-600 underline\"\n        >\n          https://chat.openai.com\n        </a>\n        , then visit{' '}\n        <a\n          target=\"_blank\"\n          href=\"https://chat.openai.com/api/auth/session\"\n          rel=\"noreferrer\"\n          className=\"text-blue-600 underline\"\n        >\n          https://chat.openai.com/api/auth/session\n        </a>\n        . Copy access token.\n      </small>\n    ),\n    google: (\n      <small className=\"break-all text-gray-600\">\n        You need to{' '}\n        <a\n          target=\"_blank\"\n          href=\"https://console.cloud.google.com/vertex-ai\"\n          rel=\"noreferrer\"\n          className=\"text-blue-600 underline\"\n        >\n          Enable Vertex AI\n        </a>{' '}\n        API on Google Cloud, then{' '}\n        <a\n          target=\"_blank\"\n          href=\"https://console.cloud.google.com/projectselector/iam-admin/serviceaccounts/create?walkthrough_id=iam--create-service-account#step_index=1\"\n          rel=\"noreferrer\"\n          className=\"text-blue-600 underline\"\n        >\n          Create a Service Account\n        </a>\n        {`. Make sure to click 'Create and Continue' to give at least the 'Vertex AI User' role.\n        Lastly, create a JSON key to import here.`}\n      </small>\n    )\n  };\n\n  function getAzure(name) {\n    if (isJson(token)) {\n      let newToken = JSON.parse(token);\n      return newToken[name];\n    } else {\n      return '';\n    }\n  }\n\n  function setAzure(name, value) {\n    let newToken = {};\n    if (isJson(token)) {\n      newToken = JSON.parse(token);\n    }\n    newToken[name] = value;\n\n    setToken(JSON.stringify(newToken));\n  }\n\n  return (\n    <Dialog open={open} onOpenChange={onOpenChange}>\n      <DialogTemplate\n        title={`Set Token of ${endpoint}`}\n        main={\n          <div className=\"grid w-full items-center gap-2\">\n            {endpoint === 'google' ? (\n              <FileUpload\n                id=\"googleKey\"\n                className=\"w-full\"\n                text=\"Import Service Account JSON Key\"\n                successText=\"Successfully Imported Service Account JSON Key\"\n                invalidText=\"Invalid Service Account JSON Key, Did you import the correct file?\"\n                validator={(credentials) => {\n                  if (!credentials) {\n                    return false;\n                  }\n\n                  if (\n                    !credentials.client_email ||\n                    typeof credentials.client_email !== 'string' ||\n                    credentials.client_email.length <= 2\n                  ) {\n                    return false;\n                  }\n\n                  if (\n                    !credentials.project_id ||\n                    typeof credentials.project_id !== 'string' ||\n                    credentials.project_id.length <= 2\n                  ) {\n                    return false;\n                  }\n\n                  if (\n                    !credentials.private_key ||\n                    typeof credentials.private_key !== 'string' ||\n                    credentials.private_key.length <= 600\n                  ) {\n                    return false;\n                  }\n\n                  return true;\n                }}\n                onFileSelected={(data) => {\n                  setToken(JSON.stringify(data));\n                }}\n              />\n            ) : endpoint === 'openAI' ? (\n              <>\n                {!showPanel ? (\n                  <>\n                    <InputWithLabel\n                      id={'chatGPTLabel'}\n                      value={token || ''}\n                      onChange={(e) => setToken(e.target.value || '')}\n                      label={'OpenAI API Key'}\n                    />\n                  </>\n                ) : (\n                  <>\n                    <InputWithLabel\n                      id={'instanceNameLabel'}\n                      value={getAzure('instanceName') || ''}\n                      onChange={(e) => setAzure('instanceName', e.target.value || '')}\n                      label={'Azure OpenAI Instance Name'}\n                    />\n\n                    <InputWithLabel\n                      id={'deploymentNameLabel'}\n                      value={getAzure('deploymentName') || ''}\n                      onChange={(e) => setAzure('deploymentName', e.target.value || '')}\n                      label={'Azure OpenAI Deployment Name'}\n                    />\n\n                    <InputWithLabel\n                      id={'versionLabel'}\n                      value={getAzure('version') || ''}\n                      onChange={(e) => setAzure('version', e.target.value || '')}\n                      label={'Azure OpenAI API Version'}\n                    />\n\n                    <InputWithLabel\n                      id={'apiKeyLabel'}\n                      value={getAzure('apiKey') || ''}\n                      onChange={(e) => setAzure('apiKey', e.target.value || '')}\n                      label={'Azure OpenAI API Key'}\n                    />\n                  </>\n                )}\n                <div className=\"flex items-center\">\n                  <Checkbox.Root\n                    className=\"flex h-[20px] w-[20px] appearance-none items-center justify-center rounded-[4px] bg-gray-100 text-white outline-none hover:bg-gray-200 dark:bg-gray-700 dark:hover:bg-gray-900\"\n                    id=\"azureOpenAI\"\n                    checked={showPanel}\n                    onCheckedChange={() => setShowPanel(!showPanel)}\n                  >\n                    <Checkbox.Indicator className=\"flex h-[20px] w-[20px] items-center justify-center rounded-[3.5px] bg-green-600\">\n                      <CheckIcon />\n                    </Checkbox.Indicator>\n                  </Checkbox.Root>\n\n                  <label\n                    className=\"pl-[8px] text-[15px] leading-none dark:text-white\"\n                    htmlFor=\"azureOpenAI\"\n                  >\n                    Use Azure OpenAI.\n                  </label>\n                </div>\n              </>\n            ) : (\n              <>\n                <InputWithLabel\n                  id={'chatGPTLabel'}\n                  value={token || ''}\n                  onChange={(e) => setToken(e.target.value || '')}\n                  label={'Token Name'}\n                />\n              </>\n            )}\n            <small className=\"text-red-600\">\n              Your token will be sent to the server, but not saved.\n            </small>\n            {helpText?.[endpoint]}\n          </div>\n        }\n        selection={{\n          selectHandler: submit,\n          selectClasses: 'bg-green-600 hover:bg-green-700 dark:hover:bg-green-800 text-white',\n          selectText: 'Submit'\n        }}\n      />\n    </Dialog>\n  );\n};\n\nexport default SetTokenDialog;\n","import React, { useState } from 'react';\nimport StopGeneratingIcon from '../svg/StopGeneratingIcon';\nimport { Settings } from 'lucide-react';\nimport SetTokenDialog from './SetTokenDialog';\nimport store from '../../store';\n\nexport default function SubmitButton({\n  endpoint,\n  submitMessage,\n  handleStopGenerating,\n  disabled,\n  isSubmitting,\n  endpointsConfig\n}) {\n  const [setTokenDialogOpen, setSetTokenDialogOpen] = useState(false);\n  const { getToken } = store.useToken(endpoint);\n\n  const isTokenProvided = endpointsConfig?.[endpoint]?.userProvide ? !!getToken() : true;\n\n  const clickHandler = (e) => {\n    e.preventDefault();\n    submitMessage();\n  };\n\n  const setToken = () => {\n    setSetTokenDialogOpen(true);\n  };\n\n  if (isSubmitting)\n    return (\n      <button\n        onClick={handleStopGenerating}\n        type=\"button\"\n        className=\"group absolute bottom-0 right-0 flex h-[100%] w-[50px] items-center justify-center bg-transparent p-1 text-gray-500\"\n      >\n        <div className=\"m-1 mr-0 rounded-md p-2 pb-[10px] pt-[10px] group-hover:bg-gray-100 group-disabled:hover:bg-transparent dark:group-hover:bg-gray-900 dark:group-hover:text-gray-400 dark:group-disabled:hover:bg-transparent\">\n          <StopGeneratingIcon />\n        </div>\n      </button>\n    );\n  // // previous three dot animation\n  // return (\n  //   <button\n  //     className=\"absolute bottom-0 right-1 h-[100%] w-[40px] rounded-md p-1 text-gray-500 hover:bg-gray-100 disabled:hover:bg-transparent dark:hover:bg-gray-900 dark:hover:text-gray-400 dark:disabled:hover:bg-transparent md:right-2\"\n  //     disabled\n  //   >\n  //     <div className=\"text-2xl\">\n  //       <span style={{ maxWidth: 5.5, display: 'inline-grid' }}>·</span>\n  //       <span\n  //         className=\"blink\"\n  //         style={{ maxWidth: 5.5, display: 'inline-grid' }}\n  //       >\n  //         ·\n  //       </span>\n  //       <span\n  //         className=\"blink2\"\n  //         style={{ maxWidth: 5.5, display: 'inline-grid' }}\n  //       >\n  //         ·\n  //       </span>\n  //     </div>\n  //   </button>\n  // );\n  else if (!isTokenProvided && endpoint !== 'openAI') {\n    return (\n      <>\n        <button\n          onClick={setToken}\n          type=\"button\"\n          className=\"group absolute bottom-0 right-0 flex h-[100%] w-auto items-center justify-center bg-transparent p-1 text-gray-500\"\n        >\n          <div className=\"m-1 mr-0 rounded-md p-2 pb-[10px] pt-[10px] align-middle text-xs group-hover:bg-gray-100 group-disabled:hover:bg-transparent dark:group-hover:bg-gray-900 dark:group-hover:text-gray-400 dark:group-disabled:hover:bg-transparent\">\n            <Settings className=\"mr-1 inline-block w-[18px]\" />\n            Set Token First\n          </div>\n        </button>\n        <SetTokenDialog\n          open={setTokenDialogOpen}\n          onOpenChange={setSetTokenDialogOpen}\n          endpoint={endpoint}\n        />\n      </>\n    );\n  } else\n    return (\n      <button\n        onClick={clickHandler}\n        disabled={disabled}\n        className=\"group absolute bottom-0 right-0 flex h-[100%] w-[50px] items-center justify-center bg-transparent p-1 text-gray-500\"\n      >\n        <div className=\"m-1 mr-0 rounded-md p-2 pb-[10px] pt-[10px] group-hover:bg-gray-100 group-disabled:hover:bg-transparent dark:group-hover:bg-gray-900 dark:group-hover:text-gray-400 dark:group-disabled:hover:bg-transparent\">\n          <svg\n            stroke=\"currentColor\"\n            fill=\"none\"\n            strokeWidth=\"2\"\n            viewBox=\"0 0 24 24\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            className=\"mr-1 h-4 w-4 \"\n            height=\"1em\"\n            width=\"1em\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n          >\n            <line x1=\"22\" y1=\"2\" x2=\"11\" y2=\"13\" />\n            <polygon points=\"22 2 15 22 11 13 2 9 22 2\" />\n          </svg>\n        </div>\n      </button>\n    );\n}\n\n{\n  /* <div class=\"text-2xl\"><span class=\"\">·</span><span class=\"\">·</span><span class=\"invisible\">·</span></div> */\n}\n","import React from 'react';\r\nimport { Button } from '../ui/Button.tsx';\r\nimport CrossIcon from '../svg/CrossIcon';\r\n// import SaveIcon from '../svg/SaveIcon';\r\nimport { Save } from 'lucide-react';\r\n\r\nfunction EndpointOptionsPopover({\r\n  content,\r\n  visible,\r\n  saveAsPreset,\r\n  switchToSimpleMode,\r\n  additionalButton = null\r\n}) {\r\n  const cardStyle =\r\n    'shadow-md rounded-md min-w-[75px] font-normal bg-white border-black/10 border dark:bg-gray-700 text-black dark:text-white';\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className={\r\n          ' endpointOptionsPopover-container absolute bottom-[-10px] flex w-full flex-col items-center md:px-4' +\r\n          (visible ? ' show' : '')\r\n        }\r\n      >\r\n        <div\r\n          className={\r\n            cardStyle +\r\n            ' border-d-0 flex w-full flex-col overflow-hidden rounded-none border-s-0 border-t bg-slate-200 px-0 pb-[10px] dark:border-white/10 md:rounded-md md:border lg:w-[736px]'\r\n          }\r\n        >\r\n          <div className=\"flex w-full items-center bg-slate-100 px-2 py-2 dark:bg-gray-800/60\">\r\n            {/* <span className=\"text-xs font-medium font-normal\">Advanced settings for OpenAI endpoint</span> */}\r\n            <Button\r\n              type=\"button\"\r\n              className=\"h-auto justify-start bg-transparent px-2 py-1 text-xs font-medium font-normal text-black hover:bg-slate-200 hover:text-black focus:ring-0 dark:bg-transparent dark:text-white dark:hover:bg-gray-700 dark:hover:text-white dark:focus:outline-none dark:focus:ring-offset-0\"\r\n              onClick={saveAsPreset}\r\n            >\r\n              <Save className=\"mr-1 w-[14px]\" />\r\n              点击保存预设\r\n            </Button>\r\n            {additionalButton && (\r\n              <Button\r\n                type=\"button\"\r\n                className=\"ml-1 h-auto justify-start bg-transparent px-2 py-1 text-xs font-medium font-normal text-black hover:bg-slate-200 hover:text-black focus:ring-0 focus:ring-offset-0 dark:bg-transparent dark:text-white dark:hover:bg-gray-700 dark:hover:text-white dark:focus:outline-none dark:focus:ring-offset-0\"\r\n                onClick={additionalButton.handler}\r\n              >\r\n                {additionalButton.icon}\r\n                {additionalButton.label}\r\n              </Button>\r\n            )}\r\n            <Button\r\n              type=\"button\"\r\n              className=\"ml-auto h-auto bg-transparent px-2 py-1 text-xs font-medium font-normal text-black hover:bg-slate-200 hover:text-black focus:ring-offset-0 dark:bg-transparent dark:text-white dark:hover:bg-gray-700 dark:hover:text-white\"\r\n              onClick={switchToSimpleMode}\r\n            >\r\n              <CrossIcon className=\"mr-1\" />\r\n              {/* Switch to simple mode */}\r\n            </Button>\r\n          </div>\r\n          <div>{content}</div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default EndpointOptionsPopover;\r\n","import { useState } from 'react';\nimport { Settings2 } from 'lucide-react';\nimport { useRecoilState, useRecoilValue } from 'recoil';\nimport SelectDropDown from '../../ui/SelectDropDown';\nimport EndpointOptionsPopover from '../../Endpoints/EndpointOptionsPopover';\nimport SaveAsPresetDialog from '../../Endpoints/SaveAsPresetDialog';\nimport { Button } from '../../ui/Button.tsx';\nimport Settings from '../../Endpoints/OpenAI/Settings.jsx';\nimport { cn } from '~/utils/';\n\nimport store from '~/store';\n\nfunction OpenAIOptions() {\n  const [advancedMode, setAdvancedMode] = useState(false);\n  const [saveAsDialogShow, setSaveAsDialogShow] = useState(false);\n\n  const [conversation, setConversation] = useRecoilState(store.conversation) || {};\n  const { endpoint, conversationId } = conversation;\n  const {\n    model,\n    chatGptLabel,\n    promptPrefix,\n    temperature,\n    top_p,\n    presence_penalty,\n    frequency_penalty\n  } = conversation;\n\n  const endpointsConfig = useRecoilValue(store.endpointsConfig);\n\n  if (endpoint !== 'openAI') return null;\n  if (conversationId !== 'new') return null;\n\n  const models = endpointsConfig?.['openAI']?.['availableModels'] || [];\n\n  const triggerAdvancedMode = () => setAdvancedMode((prev) => !prev);\n\n  const switchToSimpleMode = () => {\n    setAdvancedMode(false);\n  };\n\n  const saveAsPreset = () => {\n    setSaveAsDialogShow(true);\n  };\n\n  const setOption = (param) => (newValue) => {\n    let update = {};\n    update[param] = newValue;\n    setConversation((prevState) => ({\n      ...prevState,\n      ...update\n    }));\n  };\n\n  const cardStyle =\n    'transition-colors shadow-md rounded-md min-w-[75px] font-normal bg-white border-black/10 hover:border-black/10 focus:border-black/10 dark:border-black/10 dark:hover:border-black/10 dark:focus:border-black/10 border dark:bg-gray-700 text-black dark:text-white';\n\n  return (\n    <>\n      <div\n        className={\n          'openAIOptions-simple-container flex w-full flex-wrap items-center justify-center gap-2' +\n          (!advancedMode ? ' show' : '')\n        }\n      >\n        <SelectDropDown\n          value={model}\n          setValue={setOption('model')}\n          availableValues={models}\n          showAbove={true}\n          showLabel={false}\n          className={cn(\n            cardStyle,\n            'min-w-48 z-50 flex h-[40px] w-48 flex-none items-center justify-center px-4 ring-0 hover:cursor-pointer hover:bg-slate-50 focus:ring-0 focus:ring-offset-0 data-[state=open]:bg-slate-50 dark:bg-gray-700 dark:hover:bg-gray-600 dark:data-[state=open]:bg-gray-600'\n          )}\n        />\n        <Button\n          type=\"button\"\n          className={cn(\n            cardStyle,\n            'min-w-4 z-50 flex h-[40px] flex-none items-center justify-center px-4 hover:bg-slate-50 focus:ring-0 focus:ring-offset-0 dark:hover:bg-gray-600'\n          )}\n          onClick={triggerAdvancedMode}\n        >\n          <Settings2 className=\"w-4 text-gray-600 dark:text-white\" />\n        </Button>\n      </div>\n      <EndpointOptionsPopover\n        content={\n          <div className=\"px-4 py-4\">\n            <Settings\n              model={model}\n              chatGptLabel={chatGptLabel}\n              promptPrefix={promptPrefix}\n              temperature={temperature}\n              topP={top_p}\n              freqP={presence_penalty}\n              presP={frequency_penalty}\n              setOption={setOption}\n            />\n          </div>\n        }\n        visible={advancedMode}\n        saveAsPreset={saveAsPreset}\n        switchToSimpleMode={switchToSimpleMode}\n      />\n      <SaveAsPresetDialog\n        open={saveAsDialogShow}\n        onOpenChange={setSaveAsDialogShow}\n        preset={conversation}\n      />\n    </>\n  );\n}\n\nexport default OpenAIOptions;\n","import React, { useEffect } from 'react';\nimport { useRecoilState, useRecoilValue } from 'recoil';\nimport SelectDropDown from '../../ui/SelectDropDown';\nimport { cn } from '~/utils/';\n\nimport store from '~/store';\n\nfunction ChatGPTOptions() {\n  const [conversation, setConversation] = useRecoilState(store.conversation) || {};\n  const { endpoint, conversationId } = conversation;\n  const { model } = conversation;\n\n  const endpointsConfig = useRecoilValue(store.endpointsConfig);\n\n  if (endpoint !== 'chatGPTBrowser') return null;\n  if (conversationId !== 'new') return null;\n\n  const models = endpointsConfig?.['chatGPTBrowser']?.['availableModels'] || [];\n\n  const setOption = (param) => (newValue) => {\n    let update = {};\n    update[param] = newValue;\n    setConversation((prevState) => ({\n      ...prevState,\n      ...update\n    }));\n  };\n\n  const cardStyle =\n    'transition-colors shadow-md rounded-md min-w-[75px] font-normal bg-white border-black/10 hover:border-black/10 focus:border-black/10 dark:border-black/10 dark:hover:border-black/10 dark:focus:border-black/10 border dark:bg-gray-700 text-black dark:text-white';\n\n  return (\n    <div className=\"openAIOptions-simple-container show flex w-full flex-wrap items-center justify-center gap-2\">\n      <SelectDropDown\n        value={model}\n        setValue={setOption('model')}\n        availableValues={models}\n        showAbove={true}\n        showLabel={false}\n        className={cn(\n          cardStyle,\n          'z-50 flex h-[40px] w-[260px] min-w-[260px] flex-none items-center justify-center px-4 ring-0 hover:cursor-pointer hover:bg-slate-50 focus:ring-0 focus:ring-offset-0 data-[state=open]:bg-slate-50 dark:bg-gray-700 dark:hover:bg-gray-600 dark:data-[state=open]:bg-gray-600'\n        )}\n      />\n    </div>\n  );\n}\n\nexport default ChatGPTOptions;\n","'use client';\n\nimport * as React from 'react';\nimport * as TabsPrimitive from '@radix-ui/react-tabs';\n\nimport { cn } from '../../utils';\n\nconst Tabs = TabsPrimitive.Root;\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      'inline-flex items-center justify-center rounded-md bg-gray-100 p-1 dark:bg-gray-800',\n      className\n    )}\n    {...props}\n  />\n));\nTabsList.displayName = TabsPrimitive.List.displayName;\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    className={cn(\n      'inline-flex min-w-[100px] items-center justify-center rounded-[0.185rem] px-3 py-1.5  text-sm font-medium text-gray-700 transition-all  disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-white data-[state=active]:text-gray-900 data-[state=active]:shadow-sm dark:text-gray-200 dark:data-[state=active]:bg-gray-700 dark:data-[state=active]:text-gray-100',\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n));\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName;\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    className={cn('mt-2 rounded-md border border-gray-200 p-6 dark:border-gray-700', className)}\n    {...props}\n    ref={ref}\n  />\n));\nTabsContent.displayName = TabsPrimitive.Content.displayName;\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent };\n","import { useState } from 'react';\r\nimport { useRecoilState } from 'recoil';\r\nimport { cn } from '~/utils';\r\nimport { Button } from '../../ui/Button.tsx';\r\nimport { Settings2 } from 'lucide-react';\r\nimport { Tabs, TabsList, TabsTrigger } from '../../ui/Tabs.tsx';\r\nimport SelectDropDown from '../../ui/SelectDropDown';\r\nimport Settings from '../../Endpoints/BingAI/Settings.jsx';\r\nimport EndpointOptionsPopover from '../../Endpoints/EndpointOptionsPopover';\r\nimport SaveAsPresetDialog from '../../Endpoints/SaveAsPresetDialog';\r\n\r\nimport store from '~/store';\r\n\r\nfunction BingAIOptions({ show }) {\r\n  const [conversation, setConversation] = useRecoilState(store.conversation) || {};\r\n  const [advancedMode, setAdvancedMode] = useState(false);\r\n  const [saveAsDialogShow, setSaveAsDialogShow] = useState(false);\r\n  const { endpoint, conversationId } = conversation;\r\n  const { toneStyle, context, systemMessage, jailbreak } = conversation;\r\n\r\n  if (endpoint !== 'bingAI') return null;\r\n  if (conversationId !== 'new' && !show) return null;\r\n\r\n  const triggerAdvancedMode = () => setAdvancedMode((prev) => !prev);\r\n\r\n  const switchToSimpleMode = () => {\r\n    setAdvancedMode(false);\r\n  };\r\n\r\n  const saveAsPreset = () => {\r\n    setSaveAsDialogShow(true);\r\n  };\r\n\r\n  const setOption = (param) => (newValue) => {\r\n    let update = {};\r\n    update[param] = newValue;\r\n    setConversation((prevState) => ({\r\n      ...prevState,\r\n      ...update\r\n    }));\r\n  };\r\n\r\n  const cardStyle =\r\n    'transition-colors shadow-md rounded-md min-w-[75px] font-normal bg-white border-black/10 hover:border-black/10 focus:border-black/10 dark:border-black/10 dark:hover:border-black/10 dark:focus:border-black/10 border dark:bg-gray-700 text-black dark:text-white';\r\n  const defaultClasses =\r\n    'p-2 rounded-md min-w-[75px] font-normal bg-white/[.60] dark:bg-gray-700 text-black text-xs';\r\n  const defaultSelected = cn(\r\n    defaultClasses,\r\n    'font-medium data-[state=active]:text-white text-xs text-white'\r\n  );\r\n  const selectedClass = (val) => val + '-tab ' + defaultSelected;\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className={\r\n          'openAIOptions-simple-container flex w-full flex-wrap items-center justify-center gap-2' +\r\n          (!advancedMode ? ' show' : '')\r\n        }\r\n      >\r\n        <SelectDropDown\r\n          title=\"模型\"\r\n          value={jailbreak ? 'Sydney' : 'BingAI'}\r\n          setValue={(value) => setOption('jailbreak')(value === 'Sydney')}\r\n          availableValues={['BingAI', 'Sydney']}\r\n          showAbove={true}\r\n          showLabel={false}\r\n          className={cn(\r\n            cardStyle,\r\n            'min-w-36 z-50 flex h-[40px] w-36 flex-none items-center justify-center px-4 ring-0 hover:cursor-pointer hover:bg-slate-50 focus:ring-0 focus:ring-offset-0 data-[state=open]:bg-slate-50 dark:bg-gray-700 dark:hover:bg-gray-600 dark:data-[state=open]:bg-gray-600',\r\n            show ? 'hidden' : null\r\n          )}\r\n        />\r\n\r\n        <Tabs\r\n          value={toneStyle}\r\n          className={\r\n            cardStyle +\r\n            ' z-50 flex h-[40px] flex-none items-center justify-center px-0 hover:bg-slate-50 dark:hover:bg-gray-600'\r\n          }\r\n          onValueChange={(value) => setOption('toneStyle')(value.toLowerCase())}\r\n        >\r\n          <TabsList className=\"bg-white/[.60] dark:bg-gray-700\">\r\n            <TabsTrigger\r\n              value=\"creative\"\r\n              className={`${toneStyle === 'creative' ? selectedClass('creative') : defaultClasses}`}\r\n            >\r\n              {'创意'}\r\n            </TabsTrigger>\r\n            <TabsTrigger\r\n              value=\"fast\"\r\n              className={`${toneStyle === 'fast' ? selectedClass('fast') : defaultClasses}`}\r\n            >\r\n              {'快速'}\r\n            </TabsTrigger>\r\n            <TabsTrigger\r\n              value=\"balanced\"\r\n              className={`${toneStyle === 'balanced' ? selectedClass('balanced') : defaultClasses}`}\r\n            >\r\n              {'平衡'}\r\n            </TabsTrigger>\r\n            <TabsTrigger\r\n              value=\"precise\"\r\n              className={`${toneStyle === 'precise' ? selectedClass('precise') : defaultClasses}`}\r\n            >\r\n              {'精确'}\r\n            </TabsTrigger>\r\n          </TabsList>\r\n        </Tabs>\r\n        <Button\r\n          type=\"button\"\r\n          className={cn(\r\n            cardStyle,\r\n            'min-w-4 z-50 flex h-[40px] flex-none items-center justify-center px-4 hover:bg-slate-50 focus:ring-0 focus:ring-offset-0 dark:hover:bg-gray-600',\r\n            show ? 'hidden' : null\r\n          )}\r\n          onClick={triggerAdvancedMode}\r\n        >\r\n          <Settings2 className=\"w-4 text-gray-600 dark:text-white\" />\r\n        </Button>\r\n      </div>\r\n      <EndpointOptionsPopover\r\n        content={\r\n          <div className=\"z-50 px-4 py-4\">\r\n            <Settings\r\n              context={context}\r\n              systemMessage={systemMessage}\r\n              jailbreak={jailbreak}\r\n              toneStyle={toneStyle}\r\n              setOption={setOption}\r\n            />\r\n          </div>\r\n        }\r\n        visible={advancedMode}\r\n        saveAsPreset={saveAsPreset}\r\n        switchToSimpleMode={switchToSimpleMode}\r\n      />\r\n      <SaveAsPresetDialog\r\n        open={saveAsDialogShow}\r\n        onOpenChange={setSaveAsDialogShow}\r\n        preset={conversation}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default BingAIOptions;\r\n","import { cn } from '~/utils/';\n\nexport default function MessagesSquared({ className }) {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"24\"\n      height=\"24\"\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      stroke=\"currentColor\"\n      strokeWidth=\"2\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      className={cn(className, 'lucide lucide-messages-square')}\n    >\n      <path d=\"M14 9a2 2 0 0 1-2 2H6l-4 4V4c0-1.1.9-2 2-2h8a2 2 0 0 1 2 2v5Z\" />\n      <path d=\"M18 9h2a2 2 0 0 1 2 2v11l-4-4h-6a2 2 0 0 1-2-2v-1\" />\n    </svg>\n  );\n}\n","import React from 'react';\nimport TextareaAutosize from 'react-textarea-autosize';\nimport { Button } from '~/components/ui/Button.tsx';\nimport { Label } from '~/components/ui/Label.tsx';\nimport { Plus, Minus } from 'lucide-react';\nimport { cn } from '~/utils/';\nconst defaultTextProps =\n  'rounded-md border border-gray-200 focus:border-slate-400 focus:bg-gray-50 bg-transparent text-sm shadow-[0_0_10px_rgba(0,0,0,0.05)] outline-none placeholder:text-gray-400 focus:outline-none focus:ring-gray-400 focus:ring-opacity-20 focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 dark:border-gray-500 dark:bg-gray-700 focus:dark:bg-gray-600 dark:text-gray-50 dark:shadow-[0_0_15px_rgba(0,0,0,0.10)] dark:focus:border-gray-400 dark:focus:outline-none dark:focus:ring-0 dark:focus:ring-gray-400 dark:focus:ring-offset-0';\n\nfunction Examples({ readonly, examples, setExample, addExample, removeExample, edit = false }) {\n  const maxHeight = edit ? 'max-h-[233px]' : 'max-h-[350px]';\n  return (\n    <>\n      <div className={`${maxHeight} overflow-y-auto`}>\n        <div id=\"examples-grid\" className=\"grid gap-6 sm:grid-cols-2\">\n          {examples.map((example, idx) => (\n            <React.Fragment key={idx}>\n              {/* Input */}\n              <div\n                className={`col-span-${\n                  examples.length === 1 ? '1' : 'full'\n                } flex flex-col items-center justify-start gap-6 sm:col-span-1`}\n              >\n                <div className=\"grid w-full items-center gap-2\">\n                  <Label htmlFor={`input-${idx}`} className=\"text-left text-sm font-medium\">\n                    Input <small className=\"opacity-40\">(default: blank)</small>\n                  </Label>\n                  <TextareaAutosize\n                    id={`input-${idx}`}\n                    disabled={readonly}\n                    value={example?.input?.content || ''}\n                    onChange={(e) => setExample(idx, 'input', e.target.value || null)}\n                    placeholder=\"Set example input. Example is ignored if empty.\"\n                    className={cn(\n                      defaultTextProps,\n                      'flex max-h-[300px] min-h-[75px] w-full resize-none px-3 py-2 '\n                    )}\n                  />\n                </div>\n              </div>\n\n              {/* Output */}\n              <div\n                className={`col-span-${\n                  examples.length === 1 ? '1' : 'full'\n                } flex flex-col items-center justify-start gap-6 sm:col-span-1`}\n              >\n                <div className=\"grid w-full items-center gap-2\">\n                  <Label htmlFor={`output-${idx}`} className=\"text-left text-sm font-medium\">\n                    Output <small className=\"opacity-40\">(default: blank)</small>\n                  </Label>\n                  <TextareaAutosize\n                    id={`output-${idx}`}\n                    disabled={readonly}\n                    value={example?.output?.content || ''}\n                    onChange={(e) => setExample(idx, 'output', e.target.value || null)}\n                    placeholder={`Set example output. Example is ignored if empty.`}\n                    className={cn(\n                      defaultTextProps,\n                      'flex max-h-[300px] min-h-[75px] w-full resize-none px-3 py-2 '\n                    )}\n                  />\n                </div>\n              </div>\n            </React.Fragment>\n          ))}\n        </div>\n      </div>\n      <div className=\"flex justify-center\">\n        <Button\n          type=\"button\"\n          className=\"mr-2 mt-1 h-auto items-center justify-center bg-transparent px-3 py-2 text-xs font-medium font-normal text-black hover:bg-slate-200 hover:text-black focus:ring-0 focus:ring-offset-0 dark:bg-transparent dark:text-white dark:hover:bg-gray-600 dark:hover:text-white dark:focus:outline-none dark:focus:ring-offset-0\"\n          onClick={removeExample}\n        >\n          <Minus className=\"w-[16px]\" />\n        </Button>\n        <Button\n          type=\"button\"\n          className=\"mt-1 h-auto items-center justify-center bg-transparent px-3 py-2 text-xs font-medium font-normal text-black hover:bg-slate-200 hover:text-black focus:ring-0 focus:ring-offset-0 dark:bg-transparent dark:text-white dark:hover:bg-gray-600 dark:hover:text-white dark:focus:outline-none dark:focus:ring-offset-0\"\n          onClick={addExample}\n        >\n          <Plus className=\"w-[16px]\" />\n        </Button>\n      </div>\n    </>\n  );\n}\n\nexport default Examples;\n","import { useState } from 'react';\nimport { Settings2 } from 'lucide-react';\nimport { useRecoilState, useRecoilValue } from 'recoil';\nimport MessagesSquared from '~/components/svg/MessagesSquared.jsx';\nimport SelectDropDown from '../../ui/SelectDropDown';\nimport EndpointOptionsPopover from '../../Endpoints/EndpointOptionsPopover';\nimport SaveAsPresetDialog from '../../Endpoints/SaveAsPresetDialog';\nimport { Button } from '../../ui/Button.tsx';\nimport Settings from '../../Endpoints/Google/Settings.jsx';\nimport Examples from '../../Endpoints/Google/Examples.jsx';\nimport { cn } from '~/utils/';\n\nimport store from '~/store';\n\nfunction GoogleOptions() {\n  const [advancedMode, setAdvancedMode] = useState(false);\n  const [showExamples, setShowExamples] = useState(false);\n  const [saveAsDialogShow, setSaveAsDialogShow] = useState(false);\n\n  const [conversation, setConversation] = useRecoilState(store.conversation) || {};\n  const { endpoint, conversationId } = conversation;\n  const { model, modelLabel, promptPrefix, examples, temperature, topP, topK, maxOutputTokens } =\n    conversation;\n\n  const endpointsConfig = useRecoilValue(store.endpointsConfig);\n\n  if (endpoint !== 'google') return null;\n  if (conversationId !== 'new') return null;\n\n  const models = endpointsConfig?.['google']?.['availableModels'] || [];\n\n  const triggerAdvancedMode = () => setAdvancedMode((prev) => !prev);\n  const triggerExamples = () => setShowExamples((prev) => !prev);\n\n  const switchToSimpleMode = () => {\n    setAdvancedMode(false);\n  };\n\n  const saveAsPreset = () => {\n    setSaveAsDialogShow(true);\n  };\n\n  const setOption = (param) => (newValue) => {\n    let update = {};\n    update[param] = newValue;\n    setConversation((prevState) => ({\n      ...prevState,\n      ...update\n    }));\n  };\n\n  const setExample = (i, type, newValue = null) => {\n    let update = {};\n    let current = conversation?.examples.slice() || [];\n    let currentExample = { ...current[i] } || {};\n    currentExample[type] = { content: newValue };\n    current[i] = currentExample;\n    update.examples = current;\n    setConversation((prevState) => ({\n      ...prevState,\n      ...update\n    }));\n  };\n\n  const addExample = () => {\n    let update = {};\n    let current = conversation?.examples.slice() || [];\n    current.push({ input: { content: '' }, output: { content: '' } });\n    update.examples = current;\n    setConversation((prevState) => ({\n      ...prevState,\n      ...update\n    }));\n  };\n\n  const removeExample = () => {\n    let update = {};\n    let current = conversation?.examples.slice() || [];\n    if (current.length <= 1) {\n      update.examples = [{ input: { content: '' }, output: { content: '' } }];\n      setConversation((prevState) => ({\n        ...prevState,\n        ...update\n      }));\n      return;\n    }\n    current.pop();\n    update.examples = current;\n    setConversation((prevState) => ({\n      ...prevState,\n      ...update\n    }));\n  };\n\n  const cardStyle =\n    'transition-colors shadow-md rounded-md min-w-[75px] font-normal bg-white border-black/10 hover:border-black/10 focus:border-black/10 dark:border-black/10 dark:hover:border-black/10 dark:focus:border-black/10 border dark:bg-gray-700 text-black dark:text-white';\n\n  return (\n    <>\n      <div\n        className={\n          'openAIOptions-simple-container flex w-full flex-wrap items-center justify-center gap-2' +\n          (!advancedMode ? ' show' : '')\n        }\n      >\n        <SelectDropDown\n          value={model}\n          setValue={setOption('model')}\n          availableValues={models}\n          showAbove={true}\n          showLabel={false}\n          className={cn(\n            cardStyle,\n            'min-w-48 z-50 flex h-[40px] w-48 flex-none items-center justify-center px-4 ring-0 hover:cursor-pointer hover:bg-slate-50 focus:ring-0 focus:ring-offset-0 data-[state=open]:bg-slate-50 dark:bg-gray-700 dark:hover:bg-gray-600 dark:data-[state=open]:bg-gray-600'\n          )}\n        />\n        <Button\n          type=\"button\"\n          className={cn(\n            cardStyle,\n            'min-w-4 z-50 flex h-[40px] flex-none items-center justify-center px-4 hover:bg-slate-50 focus:ring-0 focus:ring-offset-0 dark:hover:bg-gray-600'\n          )}\n          onClick={triggerAdvancedMode}\n        >\n          <Settings2 className=\"w-4 text-gray-600 dark:text-white\" />\n        </Button>\n      </div>\n      <EndpointOptionsPopover\n        content={\n          <div className=\"px-4 py-4\">\n            {showExamples ? (\n              <Examples\n                examples={examples}\n                setExample={setExample}\n                addExample={addExample}\n                removeExample={removeExample}\n              />\n            ) : (\n              <Settings\n                model={model}\n                modelLabel={modelLabel}\n                promptPrefix={promptPrefix}\n                temperature={temperature}\n                topP={topP}\n                topK={topK}\n                maxOutputTokens={maxOutputTokens}\n                setOption={setOption}\n              />\n            )}\n          </div>\n        }\n        visible={advancedMode}\n        saveAsPreset={saveAsPreset}\n        switchToSimpleMode={switchToSimpleMode}\n        additionalButton={{\n          label: (showExamples ? 'Hide' : 'Show') + ' Examples',\n          handler: triggerExamples,\n          icon: <MessagesSquared className=\"mr-1 w-[14px]\" />\n        }}\n      />\n      <SaveAsPresetDialog\n        open={saveAsDialogShow}\n        onOpenChange={setSaveAsDialogShow}\n        preset={conversation}\n      />\n    </>\n  );\n}\n\nexport default GoogleOptions;\n","import React, { useEffect, useState } from 'react';\r\nimport Examples from './Google/Examples.jsx';\r\nimport MessagesSquared from '~/components/svg/MessagesSquared.jsx';\r\nimport { useSetRecoilState, useRecoilValue } from 'recoil';\r\nimport filenamify from 'filenamify';\r\nimport axios from 'axios';\r\nimport exportFromJSON from 'export-from-json';\r\nimport DialogTemplate from '../ui/DialogTemplate';\r\nimport { Dialog, DialogClose, DialogButton } from '../ui/Dialog.tsx';\r\nimport { Input } from '../ui/Input.tsx';\r\nimport { Label } from '../ui/Label.tsx';\r\nimport { Button } from '../ui/Button.tsx';\r\nimport Dropdown from '../ui/Dropdown';\r\nimport { cn } from '~/utils/';\r\nimport cleanupPreset from '~/utils/cleanupPreset';\r\n\r\nimport Settings from './Settings';\r\n\r\nimport store from '~/store';\r\n\r\nconst EditPresetDialog = ({ open, onOpenChange, preset: _preset, title }) => {\r\n  //   const [title, setTitle] = useState('My Preset');\r\n  const [preset, setPreset] = useState(_preset);\r\n  const setPresets = useSetRecoilState(store.presets);\r\n  const [showExamples, setShowExamples] = useState(false);\r\n\r\n  const availableEndpoints = useRecoilValue(store.availableEndpoints);\r\n  const endpointsConfig = useRecoilValue(store.endpointsConfig);\r\n\r\n  const triggerExamples = () => setShowExamples((prev) => !prev);\r\n\r\n  const setOption = (param) => (newValue) => {\r\n    let update = {};\r\n    update[param] = newValue;\r\n    setPreset((prevState) =>\r\n      cleanupPreset({\r\n        preset: {\r\n          ...prevState,\r\n          ...update\r\n        },\r\n        endpointsConfig\r\n      })\r\n    );\r\n  };\r\n\r\n  const setExample = (i, type, newValue = null) => {\r\n    let update = {};\r\n    let current = preset?.examples.slice() || [];\r\n    let currentExample = { ...current[i] } || {};\r\n    currentExample[type] = { content: newValue };\r\n    current[i] = currentExample;\r\n    update.examples = current;\r\n    setPreset((prevState) =>\r\n      cleanupPreset({\r\n        preset: {\r\n          ...prevState,\r\n          ...update\r\n        },\r\n        endpointsConfig\r\n      })\r\n    );\r\n  };\r\n\r\n  const addExample = () => {\r\n    let update = {};\r\n    let current = preset?.examples.slice() || [];\r\n    current.push({ input: { content: '' }, output: { content: '' } });\r\n    update.examples = current;\r\n    setPreset((prevState) =>\r\n      cleanupPreset({\r\n        preset: {\r\n          ...prevState,\r\n          ...update\r\n        },\r\n        endpointsConfig\r\n      })\r\n    );\r\n  };\r\n\r\n  const removeExample = () => {\r\n    let update = {};\r\n    let current = preset?.examples.slice() || [];\r\n    if (current.length <= 1) {\r\n      update.examples = [{ input: { content: '' }, output: { content: '' } }];\r\n      setPreset((prevState) =>\r\n        cleanupPreset({\r\n          preset: {\r\n            ...prevState,\r\n            ...update\r\n          },\r\n          endpointsConfig\r\n        })\r\n      );\r\n      return;\r\n    }\r\n    current.pop();\r\n    update.examples = current;\r\n    setPreset((prevState) =>\r\n      cleanupPreset({\r\n        preset: {\r\n          ...prevState,\r\n          ...update\r\n        },\r\n        endpointsConfig\r\n      })\r\n    );\r\n  };\r\n\r\n  const defaultTextProps =\r\n    'rounded-md border border-gray-200 focus:border-slate-400 focus:bg-gray-50 bg-transparent text-sm shadow-[0_0_10px_rgba(0,0,0,0.05)] outline-none placeholder:text-gray-400 focus:outline-none focus:ring-gray-400 focus:ring-opacity-20 focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 dark:border-gray-500 dark:bg-gray-700 focus:dark:bg-gray-600 dark:text-gray-50 dark:shadow-[0_0_15px_rgba(0,0,0,0.10)] dark:focus:border-gray-400 dark:focus:outline-none dark:focus:ring-0 dark:focus:ring-gray-400 dark:focus:ring-offset-0';\r\n\r\n  const submitPreset = () => {\r\n    axios({\r\n      method: 'post',\r\n      url: '/api/presets',\r\n      data: cleanupPreset({ preset, endpointsConfig }),\r\n      withCredentials: true\r\n    }).then((res) => {\r\n      setPresets(res?.data);\r\n    });\r\n  };\r\n\r\n  const exportPreset = () => {\r\n    const fileName = filenamify(preset?.title || 'preset');\r\n    exportFromJSON({\r\n      data: cleanupPreset({ preset, endpointsConfig }),\r\n      fileName,\r\n      exportType: exportFromJSON.types.json\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    setPreset(_preset);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [open]);\r\n\r\n  return (\r\n    <Dialog open={open} onOpenChange={onOpenChange}>\r\n      <DialogTemplate\r\n        title={`${title || '编辑预设'} - ${preset?.title}`}\r\n        className=\"max-w-full sm:max-w-4xl\"\r\n        main={\r\n          <div className=\"flex w-full flex-col items-center gap-2\">\r\n            <div className=\"grid w-full gap-6 sm:grid-cols-2\">\r\n              <div className=\"col-span-1 flex flex-col items-start justify-start gap-2\">\r\n                <Label htmlFor=\"chatGptLabel\" className=\"text-left text-sm font-medium\">\r\n                  预设名称\r\n                </Label>\r\n                <Input\r\n                  id=\"chatGptLabel\"\r\n                  value={preset?.title || ''}\r\n                  onChange={(e) => setOption('title')(e.target.value || '')}\r\n                  placeholder=\"自定义名称方便使用\"\r\n                  className={cn(\r\n                    defaultTextProps,\r\n                    'flex h-10 max-h-10 w-full resize-none px-3 py-2 focus:outline-none focus:ring-0 focus:ring-opacity-0 focus:ring-offset-0'\r\n                  )}\r\n                />\r\n              </div>\r\n              <div className=\"col-span-1 flex flex-col items-start justify-start gap-2\">\r\n                <Label htmlFor=\"endpoint\" className=\"text-left text-sm font-medium\">\r\n                  端口\r\n                </Label>\r\n                <Dropdown\r\n                  id=\"endpoint\"\r\n                  value={preset?.endpoint || ''}\r\n                  onChange={setOption('endpoint')}\r\n                  options={availableEndpoints}\r\n                  className={cn(\r\n                    defaultTextProps,\r\n                    'flex h-10 max-h-10 w-full resize-none focus:outline-none focus:ring-0 focus:ring-opacity-0 focus:ring-offset-0'\r\n                  )}\r\n                  containerClassName=\"flex w-full resize-none\"\r\n                />\r\n                {preset?.endpoint === 'google' && (\r\n                  <Button\r\n                    type=\"button\"\r\n                    className=\"ml-1 flex h-auto w-full bg-transparent px-2 py-1 text-xs font-medium font-normal text-black hover:bg-slate-200 hover:text-black focus:ring-0 focus:ring-offset-0 dark:bg-transparent dark:text-white dark:hover:bg-gray-700 dark:hover:text-white dark:focus:outline-none dark:focus:ring-offset-0\"\r\n                    onClick={triggerExamples}\r\n                  >\r\n                    <MessagesSquared className=\"mr-1 w-[14px]\" />\r\n                    {(showExamples ? 'Hide' : 'Show') + ' Examples'}\r\n                  </Button>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"my-4 w-full border-t border-gray-300 dark:border-gray-500\" />\r\n            <div className=\"w-full p-0\">\r\n              {((preset?.endpoint === 'google' && !showExamples) ||\r\n                preset?.endpoint !== 'google') && (\r\n                <Settings preset={preset} setOption={setOption} />\r\n              )}\r\n              {preset?.endpoint === 'google' && showExamples && (\r\n                <Examples\r\n                  examples={preset.examples}\r\n                  setExample={setExample}\r\n                  addExample={addExample}\r\n                  removeExample={removeExample}\r\n                  edit={true}\r\n                />\r\n              )}\r\n            </div>\r\n          </div>\r\n        }\r\n        buttons={\r\n          <>\r\n            <DialogClose\r\n              onClick={submitPreset}\r\n              className=\"dark:hover:gray-400 border-gray-700 bg-green-600 text-white hover:bg-green-700 dark:hover:bg-green-800\"\r\n            >\r\n              保存\r\n            </DialogClose>\r\n          </>\r\n        }\r\n        leftButtons={\r\n          <>\r\n            <DialogButton onClick={exportPreset} className=\"dark:hover:gray-400 border-gray-700\">\r\n              导出\r\n            </DialogButton>\r\n          </>\r\n        }\r\n      />\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default EditPresetDialog;\r\n","'use client';\n\nimport * as React from 'react';\nimport * as DropdownMenuPrimitive from '@radix-ui/react-dropdown-menu';\nimport { Check, ChevronRight, Circle } from 'lucide-react';\n\nimport { cn } from '../../utils';\n\nconst DropdownMenu = DropdownMenuPrimitive.Root;\n\nconst DropdownMenuTrigger = DropdownMenuPrimitive.Trigger;\n\nconst DropdownMenuGroup = DropdownMenuPrimitive.Group;\n\nconst DropdownMenuPortal = DropdownMenuPrimitive.Portal;\n\nconst DropdownMenuSub = DropdownMenuPrimitive.Sub;\n\nconst DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup;\n\nconst DropdownMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {\n    inset?: boolean;\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      'flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm font-medium outline-none focus:bg-slate-100 data-[state=open]:bg-slate-100 dark:focus:bg-gray-900 dark:data-[state=open]:bg-gray-900',\n      inset && 'pl-8',\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </DropdownMenuPrimitive.SubTrigger>\n));\nDropdownMenuSubTrigger.displayName = DropdownMenuPrimitive.SubTrigger.displayName;\n\nconst DropdownMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      'animate-in slide-in-from-left-1 z-50 min-w-[8rem] overflow-hidden rounded-md border border-slate-100 bg-white p-1 text-slate-700 shadow-md dark:border-slate-800 dark:bg-slate-800 dark:text-slate-400',\n      className\n    )}\n    {...props}\n  />\n));\nDropdownMenuSubContent.displayName = DropdownMenuPrimitive.SubContent.displayName;\n\nconst DropdownMenuContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <DropdownMenuPrimitive.Portal>\n    <DropdownMenuPrimitive.Content\n      ref={ref}\n      sideOffset={sideOffset}\n      className={cn(\n        'animate-in data-[side=right]:slide-in-from-left-2 data-[side=left]:slide-in-from-right-2 data-[side=bottom]:slide-in-from-top-2 data-[side=top]:slide-in-from-bottom-2 z-50 min-w-[8rem] overflow-hidden rounded-md border border-slate-100 bg-white p-1 text-slate-700 shadow-md dark:border-slate-800 dark:bg-slate-800 dark:text-slate-400',\n        className\n      )}\n      {...props}\n    />\n  </DropdownMenuPrimitive.Portal>\n));\nDropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName;\n\nconst DropdownMenuItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {\n    inset?: boolean;\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      'relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm font-medium outline-none focus:bg-slate-100 data-[disabled]:pointer-events-none data-[disabled]:opacity-50 dark:focus:bg-gray-900',\n      inset && 'pl-8',\n      className\n    )}\n    {...props}\n  />\n));\nDropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName;\n\nconst DropdownMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <DropdownMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      'relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm font-medium outline-none focus:bg-slate-100 data-[disabled]:pointer-events-none data-[disabled]:opacity-50 dark:focus:bg-gray-900',\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.CheckboxItem>\n));\nDropdownMenuCheckboxItem.displayName = DropdownMenuPrimitive.CheckboxItem.displayName;\n\nconst DropdownMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      'relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm font-medium outline-none focus:bg-slate-100 data-[disabled]:pointer-events-none data-[disabled]:opacity-50 dark:focus:bg-gray-900',\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.RadioItem>\n));\nDropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName;\n\nconst DropdownMenuLabel = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {\n    inset?: boolean;\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      'px-2 py-1.5 text-sm font-semibold text-slate-900 dark:text-slate-300',\n      inset && 'pl-8',\n      className\n    )}\n    {...props}\n  />\n));\nDropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName;\n\nconst DropdownMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.Separator\n    ref={ref}\n    className={cn('-mx-1 my-1 h-px bg-slate-100 dark:bg-gray-900', className)}\n    {...props}\n  />\n));\nDropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName;\n\nconst DropdownMenuShortcut = ({ className, ...props }: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span className={cn('ml-auto text-xs tracking-widest text-slate-500', className)} {...props} />\n  );\n};\nDropdownMenuShortcut.displayName = 'DropdownMenuShortcut';\n\nexport {\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuGroup,\n  DropdownMenuPortal,\n  DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenuSubTrigger,\n  DropdownMenuRadioGroup\n};\n","import React, { useState } from 'react';\nimport { DropdownMenuRadioItem } from '../../ui/DropdownMenu.tsx';\nimport { Settings } from 'lucide-react';\nimport getIcon from '~/utils/getIcon';\nimport { useRecoilValue } from 'recoil';\nimport SetTokenDialog from '../SetTokenDialog';\n\nimport store from '../../../store';\n\nconst alternateName = {\n  openAI: 'OpenAI',\n  azureOpenAI: 'Azure OpenAI',\n  bingAI: 'Bing',\n  chatGPTBrowser: 'ChatGPT',\n  google: 'PaLM'\n};\n\nexport default function ModelItem({ endpoint, value }) {\n  const [setTokenDialogOpen, setSetTokenDialogOpen] = useState(false);\n  const endpointsConfig = useRecoilValue(store.endpointsConfig);\n\n  const icon = getIcon({\n    size: 20,\n    endpoint,\n    error: false,\n    className: 'mr-2'\n  });\n\n  const isUserProvided = endpointsConfig?.[endpoint]?.userProvide;\n\n  // regular model\n  return (\n    <>\n      <DropdownMenuRadioItem\n        value={value}\n        id={endpoint}\n        className=\"group dark:font-semibold dark:text-gray-100 dark:hover:bg-gray-800\"\n      >\n        {icon}\n        {alternateName[endpoint] || endpoint}\n        {!!['azureOpenAI', 'openAI'].find((e) => e === endpoint) && <sup>$</sup>}\n        <div className=\"flex w-4 flex-1\" />\n        {isUserProvided ? (\n          <button\n            className=\"invisible m-0 mr-1 flex-initial rounded-md p-0 text-xs font-medium text-gray-400 hover:text-gray-700 group-hover:visible dark:font-normal dark:text-gray-400 dark:hover:text-gray-200\"\n            onClick={(e) => {\n              e.preventDefault();\n              setSetTokenDialogOpen(true);\n            }}\n          >\n            <Settings className=\"mr-1 inline-block w-[16px] items-center stroke-1\" />\n            Config Token\n          </button>\n        ) : null}\n      </DropdownMenuRadioItem>\n      <SetTokenDialog\n        open={setTokenDialogOpen}\n        onOpenChange={setSetTokenDialogOpen}\n        endpoint={endpoint}\n      />\n    </>\n  );\n}\n","import React from 'react';\nimport EndpointItem from './EndpointItem.jsx';\n\nexport default function EndpointItems({ endpoints, onSelect }) {\n  return (\n    <>\n      {endpoints.map((endpoint) => (\n        <EndpointItem key={endpoint} value={endpoint} onSelect={onSelect} endpoint={endpoint} />\n      ))}\n    </>\n  );\n}\n","import React from 'react';\nimport { DropdownMenuRadioItem } from '../../ui/DropdownMenu.tsx';\nimport EditIcon from '../../svg/EditIcon.jsx';\nimport TrashIcon from '../../svg/TrashIcon.jsx';\nimport getIcon from '~/utils/getIcon';\n\nexport default function PresetItem({\n  preset = {},\n  value,\n  onSelect,\n  onChangePreset,\n  onDeletePreset\n}) {\n  const { endpoint } = preset;\n\n  const icon = getIcon({\n    size: 20,\n    endpoint: preset?.endpoint,\n    model: preset?.model,\n    error: false,\n    className: 'mr-2'\n  });\n\n  const getPresetTitle = () => {\n    let _title = `${endpoint}`;\n\n    if (endpoint === 'azureOpenAI' || endpoint === 'openAI') {\n      const { chatGptLabel, model } = preset;\n      if (model) _title += `: ${model}`;\n      if (chatGptLabel) _title += ` as ${chatGptLabel}`;\n    } else if (endpoint === 'google') {\n      const { modelLabel, model } = preset;\n      if (model) _title += `: ${model}`;\n      if (modelLabel) _title += ` as ${modelLabel}`;\n    } else if (endpoint === 'bingAI') {\n      const { jailbreak, toneStyle } = preset;\n      if (toneStyle) _title += `: ${toneStyle}`;\n      if (jailbreak) _title += ` as Sydney`;\n    } else if (endpoint === 'chatGPTBrowser') {\n      const { model } = preset;\n      if (model) _title += `: ${model}`;\n    } else if (endpoint === null) {\n      null;\n    } else {\n      null;\n    }\n    return _title;\n  };\n\n  // regular model\n  return (\n    <DropdownMenuRadioItem\n      value={value}\n      className=\"group dark:font-semibold dark:text-gray-100 dark:hover:bg-gray-800\"\n    >\n      {icon}\n      {preset?.title}\n      <small className=\"ml-2\">({getPresetTitle()})</small>\n      <div className=\"flex w-4 flex-1\" />\n      <button\n        className=\"invisible m-0 mr-1 rounded-md p-2 text-gray-400 hover:text-gray-700 group-hover:visible dark:text-gray-400 dark:hover:text-gray-200        \"\n        onClick={(e) => {\n          e.preventDefault();\n          onChangePreset(preset);\n        }}\n      >\n        <EditIcon />\n      </button>\n      <button\n        className=\"invisible m-0 rounded-md text-gray-400 hover:text-gray-700 group-hover:visible dark:text-gray-400 dark:hover:text-gray-200        \"\n        onClick={(e) => {\n          e.preventDefault();\n          onDeletePreset(preset);\n        }}\n      >\n        <TrashIcon />\n      </button>\n    </DropdownMenuRadioItem>\n  );\n}\n","import React from 'react';\nimport PresetItem from './PresetItem.jsx';\n\nexport default function PresetItems({ presets, onSelect, onChangePreset, onDeletePreset }) {\n  return (\n    <>\n      {presets.map((preset) => (\n        <PresetItem\n          key={preset?.presetId}\n          value={preset}\n          onSelect={onSelect}\n          onChangePreset={onChangePreset}\n          onDeletePreset={onDeletePreset}\n          preset={preset}\n        />\n      ))}\n    </>\n  );\n}\n","import { useState, useEffect } from 'react';\r\nimport cleanupPreset from '~/utils/cleanupPreset.js';\r\nimport { useRecoilValue, useRecoilState } from 'recoil';\r\nimport EditPresetDialog from '../../Endpoints/EditPresetDialog';\r\nimport EndpointItems from './EndpointItems';\r\nimport PresetItems from './PresetItems';\r\nimport { Trash2 } from 'lucide-react';\r\nimport FileUpload from './FileUpload';\r\nimport getIcon from '~/utils/getIcon';\r\nimport { useDeletePresetMutation, useCreatePresetMutation } from '~/data-provider';\r\nimport { Button } from '../../ui/Button.tsx';\r\nimport {\r\n  DropdownMenu,\r\n  DropdownMenuContent,\r\n  DropdownMenuLabel,\r\n  DropdownMenuRadioGroup,\r\n  DropdownMenuSeparator,\r\n  DropdownMenuTrigger\r\n} from '../../ui/DropdownMenu.tsx';\r\nimport { Dialog, DialogTrigger } from '../../ui/Dialog.tsx';\r\nimport DialogTemplate from '../../ui/DialogTemplate';\r\nimport { cn } from '~/utils/';\r\n\r\nimport store from '~/store';\r\n\r\nexport default function NewConversationMenu() {\r\n  const [menuOpen, setMenuOpen] = useState(false);\r\n  const [showPresets, setShowPresets] = useState(true);\r\n  const [showEndpoints, setShowEndpoints] = useState(true);\r\n  const [presetModelVisible, setPresetModelVisible] = useState(false);\r\n  const [preset, setPreset] = useState(false);\r\n\r\n  const availableEndpoints = useRecoilValue(store.availableEndpoints);\r\n  const endpointsConfig = useRecoilValue(store.endpointsConfig);\r\n  const [presets, setPresets] = useRecoilState(store.presets);\r\n\r\n  const conversation = useRecoilValue(store.conversation) || {};\r\n  const { endpoint, conversationId } = conversation;\r\n  const { newConversation } = store.useConversation();\r\n\r\n  const deletePresetsMutation = useDeletePresetMutation();\r\n  const createPresetMutation = useCreatePresetMutation();\r\n\r\n  const importPreset = (jsonData) => {\r\n    createPresetMutation.mutate(\r\n      { ...jsonData },\r\n      {\r\n        onSuccess: (data) => {\r\n          setPresets(data);\r\n        },\r\n        onError: (error) => {\r\n          console.error('Error uploading the preset:', error);\r\n        }\r\n      }\r\n    );\r\n  };\r\n\r\n  const onFileSelected = (jsonData) => {\r\n    const jsonPreset = { ...cleanupPreset({ preset: jsonData, endpointsConfig }), presetId: null };\r\n    importPreset(jsonPreset);\r\n  };\r\n\r\n  // update the default model when availableModels changes\r\n  // typically, availableModels changes => modelsFilter or customGPTModels changes\r\n  useEffect(() => {\r\n    const isInvalidConversation = !availableEndpoints.find((e) => e === endpoint);\r\n    if (conversationId == 'new' && isInvalidConversation) {\r\n      newConversation();\r\n    }\r\n  }, [availableEndpoints]);\r\n\r\n  // save selected model to localstoreage\r\n  useEffect(() => {\r\n    if (endpoint) {\r\n      const lastSelectedModel = JSON.parse(localStorage.getItem('lastSelectedModel')) || {};\r\n      localStorage.setItem('lastConversationSetup', JSON.stringify(conversation));\r\n      localStorage.setItem(\r\n        'lastSelectedModel',\r\n        JSON.stringify({ ...lastSelectedModel, [endpoint]: conversation.model })\r\n      );\r\n    }\r\n  }, [conversation]);\r\n\r\n  // set the current model\r\n  const onSelectEndpoint = (newEndpoint) => {\r\n    setMenuOpen(false);\r\n\r\n    if (!newEndpoint) return;\r\n    else {\r\n      newConversation({}, { endpoint: newEndpoint });\r\n    }\r\n  };\r\n\r\n  // set the current model\r\n  const onSelectPreset = (newPreset) => {\r\n    setMenuOpen(false);\r\n    if (!newPreset) return;\r\n    else {\r\n      newConversation({}, newPreset);\r\n    }\r\n  };\r\n\r\n  const onChangePreset = (preset) => {\r\n    setPresetModelVisible(true);\r\n    setPreset(preset);\r\n  };\r\n\r\n  const clearAllPresets = () => {\r\n    deletePresetsMutation.mutate({ arg: {} });\r\n  };\r\n\r\n  const onDeletePreset = (preset) => {\r\n    deletePresetsMutation.mutate({ arg: preset });\r\n  };\r\n\r\n  const icon = getIcon({\r\n    size: 32,\r\n    ...conversation,\r\n    isCreatedByUser: false,\r\n    error: false,\r\n    button: true\r\n  });\r\n\r\n  return (\r\n    <Dialog className=\"z-[100]\">\r\n      <DropdownMenu open={menuOpen} onOpenChange={setMenuOpen}>\r\n        <DropdownMenuTrigger asChild>\r\n          <Button\r\n            id=\"new-conversation-menu\"\r\n            variant=\"outline\"\r\n            className={`group relative mb-[-12px] ml-0 mt-[-8px] items-center rounded-md border-0 p-1 outline-none focus:ring-0 focus:ring-offset-0 dark:data-[state=open]:bg-opacity-50 md:left-1 md:ml-[-12px] md:pl-1`}\r\n          >\r\n            {icon}\r\n            <span className=\"max-w-0 overflow-hidden whitespace-nowrap px-0 text-slate-600 transition-all group-hover:max-w-[80px] group-hover:px-2 group-data-[state=open]:max-w-[80px] group-data-[state=open]:px-2 dark:text-slate-300\">\r\n              新话题\r\n            </span>\r\n          </Button>\r\n        </DropdownMenuTrigger>\r\n        <DropdownMenuContent\r\n          className=\"min-w-[300px] dark:bg-gray-700 z-[100]\"\r\n          onCloseAutoFocus={(event) => event.preventDefault()}\r\n        >\r\n          <DropdownMenuLabel\r\n            className=\"cursor-pointer dark:text-gray-300\"\r\n            onClick={() => setShowEndpoints((prev) => !prev)}\r\n          >\r\n            {showEndpoints ? 'Hide ' : 'Show '} Endpoints\r\n          </DropdownMenuLabel>\r\n          <DropdownMenuSeparator />\r\n          <DropdownMenuRadioGroup\r\n            value={endpoint}\r\n            onValueChange={onSelectEndpoint}\r\n            className=\"overflow-y-auto\"\r\n          >\r\n            {showEndpoints &&\r\n              (availableEndpoints.length ? (\r\n                <EndpointItems endpoints={availableEndpoints} onSelect={onSelectEndpoint} />\r\n              ) : (\r\n                <DropdownMenuLabel className=\"dark:text-gray-300\">\r\n                  No endpoint available.\r\n                </DropdownMenuLabel>\r\n              ))}\r\n          </DropdownMenuRadioGroup>\r\n\r\n          <div className=\"mt-2 w-full\" />\r\n\r\n          <DropdownMenuLabel className=\"flex items-center dark:text-gray-300\">\r\n            <span className=\"cursor-pointer mr-auto \" onClick={() => setShowPresets((prev) => !prev)}>\r\n              {showPresets ? 'Hide ' : 'Show '} Presets\r\n            </span>\r\n            <FileUpload onFileSelected={onFileSelected} />\r\n            <Dialog>\r\n              <DialogTrigger asChild>\r\n                <label\r\n                  htmlFor=\"file-upload\"\r\n                  className=\"mr-1 flex h-[32px] h-auto cursor-pointer  items-center rounded bg-transparent px-2 py-1 text-xs font-medium font-normal text-gray-600 transition-colors hover:bg-slate-200 hover:text-red-700 dark:bg-transparent dark:text-gray-300 dark:hover:bg-gray-800 dark:hover:text-green-500\"\r\n                >\r\n                  {/* <Button\r\n                  type=\"button\"\r\n                  className=\"h-auto bg-transparent px-2 py-1 text-xs font-medium font-normal text-red-700 hover:bg-slate-200 hover:text-red-700 dark:bg-transparent dark:text-red-400 dark:hover:bg-gray-800 dark:hover:text-red-400\"\r\n                > */}\r\n                  <Trash2 className=\"mr-1 flex w-[22px] items-center stroke-1\" />\r\n                  清除所有预设\r\n                  {/* </Button> */}\r\n                </label>\r\n              </DialogTrigger>\r\n              <DialogTemplate\r\n                title=\"清除所有预设\"\r\n                description=\"您确定要清除所有预设吗？ 这是不可逆转的。\"\r\n                selection={{\r\n                  selectHandler: clearAllPresets,\r\n                  selectClasses: 'bg-red-600 hover:bg-red-700 dark:hover:bg-red-800 text-white',\r\n                  selectText: '清除'\r\n                }}\r\n              />\r\n            </Dialog>\r\n          </DropdownMenuLabel>\r\n          <DropdownMenuSeparator />\r\n          <DropdownMenuRadioGroup\r\n            onValueChange={onSelectPreset}\r\n            className={cn('overflow-y-auto', showEndpoints ? 'max-h-[180px]' : 'max-h-[315px]')}\r\n          >\r\n            {showPresets &&\r\n              (presets.length ? (\r\n                <PresetItems\r\n                  presets={presets}\r\n                  onSelect={onSelectPreset}\r\n                  onChangePreset={onChangePreset}\r\n                  onDeletePreset={onDeletePreset}\r\n                />\r\n              ) : (\r\n                <DropdownMenuLabel className=\"dark:text-gray-300\">No preset yet.</DropdownMenuLabel>\r\n              ))}\r\n          </DropdownMenuRadioGroup>\r\n        </DropdownMenuContent>\r\n      </DropdownMenu>\r\n      <EditPresetDialog\r\n        open={presetModelVisible}\r\n        onOpenChange={setPresetModelVisible}\r\n        preset={preset}\r\n      />\r\n    </Dialog>\r\n  );\r\n}\r\n","import React from 'react';\nimport { Settings2 } from 'lucide-react';\nexport default function AdjustButton({ onClick }) {\n  const clickHandler = (e) => {\n    e.preventDefault();\n    onClick();\n  };\n  return (\n    <button\n      onClick={clickHandler}\n      className=\"group absolute bottom-11 right-0 flex h-[100%] w-[50px] items-center justify-center bg-transparent p-1 text-gray-500 lg:-right-11 lg:bottom-0\"\n    >\n      <div className=\"m-1 mr-0 rounded-md p-2 pb-[10px] pt-[10px] group-hover:bg-gray-100 group-disabled:hover:bg-transparent dark:group-hover:bg-gray-900 dark:group-hover:text-gray-400 dark:group-disabled:hover:bg-transparent\">\n        <Settings2 size=\"1em\" />\n      </div>\n    </button>\n  );\n}\n","import React from 'react';\r\n\r\nexport default function Footer() {\r\n/**\r\n*/\r\n}\r\n","import React, { useEffect, useRef, useState } from 'react';\r\nimport { useRecoilValue, useRecoilState } from 'recoil';\r\nimport SubmitButton from './SubmitButton';\r\nimport OpenAIOptions from './OpenAIOptions';\r\nimport ChatGPTOptions from './ChatGPTOptions';\r\nimport BingAIOptions from './BingAIOptions';\r\nimport GoogleOptions from './GoogleOptions';\r\nimport NewConversationMenu from './NewConversationMenu';\r\nimport AdjustToneButton from './AdjustToneButton';\r\nimport Footer from './Footer';\r\nimport TextareaAutosize from 'react-textarea-autosize';\r\nimport { useMessageHandler } from '../../utils/handleSubmit';\r\n\r\nimport store from '~/store';\r\n\r\n\r\n// 定义一个变量存储json文件的内容\r\nlet aJson;\r\n\r\n// 使用fetch函数获取json文件的内容，并转换为json对象\r\nfetch('https://raw.githubusercontent.com/DeemBear/DeemBear.github.io/main/resources/prompts-my.json')\r\n  .then(response => response.json())\r\n  .then(data => {\r\n    // 将json对象赋值给aJson变量\r\n    aJson = data;\r\n    // 遍历json对象中的每个元素\r\n    for (let item of aJson) {\r\n      // 获取act值\r\n      let act = item.act;\r\n      // 创建一个option元素\r\n      let option = document.createElement('option');\r\n      // 设置option元素的value属性为act值\r\n      option.value = act;\r\n      // 设置option元素的文本内容为act值\r\n      option.textContent = act;\r\n      // 获取下拉选项框元素\r\n      let actSelect = document.getElementById('actSelect');\r\n      // 将option元素添加到下拉选项框中\r\n      actSelect.appendChild(option);\r\n    };\r\n\t\t// 给下拉选项框添加一个change事件监听器\r\n\t\tdocument.getElementById('actSelect').addEventListener('change', function() {\r\n\t\t\t// 获取下拉选项框中选中的值\r\n\t\t\tlet selectedAct = this.value;\r\n\t\t\t// 如果选中的值不为空\r\n\t\t\tif (selectedAct) {\r\n\t\t\t\t// 遍历json对象中的每个元素\r\n\t\t\t\tfor (let item of aJson) {\r\n\t\t\t\t\t// 如果元素的ac值与选中的值相同\r\n\t\t\t\t\tif (item.act === selectedAct) {\r\n\t\t\t\t\t\t// 获取prompt值\r\n\t\t\t\t\t\tlet prompt = item.prompt;\r\n\t\t\t\t\t\t// 获取用户输入的文本输入框元素\r\n\t\t\t\t\t\tlet userInput = document.getElementById('userInput');\r\n\t\t\t\t\t\t// 将文本输入框的值设置为prompt值\r\n\t\t\t\t\t\tuserInput.value = prompt;\r\n\t\t\t\t\t\t// 跳出循环\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n  });\r\n\r\n\r\nexport default function TextChat({ isSearchView = false }) {\r\n  const inputRef = useRef(null);\r\n  const isComposing = useRef(false);\r\n\r\n  const conversation = useRecoilValue(store.conversation);\r\n  const latestMessage = useRecoilValue(store.latestMessage);\r\n  const [text, setText] = useRecoilState(store.text);\r\n\r\n  const endpointsConfig = useRecoilValue(store.endpointsConfig);\r\n  const isSubmitting = useRecoilValue(store.isSubmitting);\r\n\r\n  // TODO: do we need this?\r\n  const disabled = false;\r\n\r\n  const { ask, stopGenerating } = useMessageHandler();\r\n  const [showBingToneSetting, setShowBingToneSetting] = useState(false);\r\n\r\n  const isNotAppendable = latestMessage?.unfinished & !isSubmitting || latestMessage?.error;\r\n\r\n  // auto focus to input, when enter a conversation.\r\n  useEffect(() => {\r\n    if (conversation?.conversationId !== 'search') inputRef.current?.focus();\r\n  }, [conversation?.conversationId]);\r\n\r\n  useEffect(() => {\r\n    const timeoutId = setTimeout(() => {\r\n      inputRef.current?.focus();\r\n    }, 100);\r\n\r\n    return () => clearTimeout(timeoutId);\r\n  }, [isSubmitting]);  \r\n\r\n  const submitMessage = () => {\r\n    ask({ text });\r\n    setText('');\r\n  };\r\n\r\n const handleStopGenerating = (e) => {\r\n    e.preventDefault();\r\n    stopGenerating();\r\n  };\r\n\r\n const handleKeyDown = (e) => {\r\n    if (e.key === 'Enter' && isSubmitting) {\r\n      return;\r\n    }\r\n\r\n    if (e.key === 'Enter' && !e.shiftKey) {\r\n      e.preventDefault();\r\n    }\r\n\r\n    if (e.key === 'Enter' && !e.shiftKey && !isComposing?.current) {\r\n      submitMessage();\r\n    }\r\n  };\r\n\r\n  const handleKeyUp = (e) => {\r\n    if (e.keyCode === 8 && e.target.value.trim() === '') {\r\n      setText(e.target.value);\r\n    }\r\n\r\n    if (e.key === 'Enter' && e.shiftKey) {\r\n      return console.log('Enter + Shift');\r\n    }\r\n\r\n    if (isSubmitting) {\r\n      return;\r\n    }\r\n  };\r\n\r\n  const handleCompositionStart = () => {\r\n    isComposing.current = true;\r\n  };\r\n\r\n  const handleCompositionEnd = () => {\r\n    isComposing.current = false;\r\n  };\r\n\r\n  const changeHandler = e => {\r\n    const { value } = e.target;\r\n\r\n    setText(value);\r\n  };\r\n\r\n  const getPlaceholderText = () => {\r\n    if (isSearchView) {\r\n      return '单击消息标题以打开对话。';\r\n    }\r\n\r\n    if (disabled) {\r\n      return '选择其他模型或重新自定义 GPT';\r\n    }\r\n\r\n    if (isNotAppendable) {\r\n      return '编辑失败的对话消息或者再次提交发送';\r\n    }\r\n\r\n    return '';\r\n  };\r\n\r\n  const handleBingToneSetting = () => {\r\n    setShowBingToneSetting((show) => !show);\r\n  };\r\n\r\n  if (isSearchView) return <></>;\r\n\r\n  return (\r\n    <>\r\n      <div className=\"fixed bottom-0 left-0 w-full md:absolute\">\r\n        <div className=\"relative py-2 md:mb-[-16px] md:py-4 lg:mb-[-32px]\">\r\n          <span className=\"flex w-full flex-col items-center justify-center gap-0 md:order-none md:m-auto md:gap-2\">\r\n            <OpenAIOptions />\r\n            <ChatGPTOptions />\r\n            <GoogleOptions />\r\n            <BingAIOptions show={showBingToneSetting} />\r\n          </span>\r\n        </div>\r\n        <div className=\"input-panel md:bg-vert-light-gradient dark:md:bg-vert-dark-gradient relative w-full border-t bg-white py-2 dark:border-white/20 dark:bg-gray-800 md:border-t-0 md:border-transparent md:bg-transparent md:dark:border-transparent md:dark:bg-transparent\">\r\n          <form className=\"stretch mx-2 flex flex-row gap-3 last:mb-2 md:pt-2 md:last:mb-6 lg:mx-auto lg:max-w-3xl lg:pt-6\">\r\n            <div className=\"relative flex h-full flex-1 md:flex-col\">\r\n              <div\r\n                className={`relative flex flex-grow flex-row rounded-md border border-black/10 ${\r\n                  disabled ? 'bg-gray-100' : 'bg-white'\r\n                } py-2 shadow-[0_0_10px_rgba(0,0,0,0.10)] dark:border-gray-900/50 ${\r\n                  disabled ? 'dark:bg-gray-900' : 'dark:bg-gray-700'\r\n                } dark:text-white dark:shadow-[0_0_15px_rgba(0,0,0,0.10)] md:py-3 md:pl-4`}\r\n              >\r\n                <NewConversationMenu />\r\n\r\n        <select id=\"actSelect\" class=\"selector\">\r\n            <option value=\"\">请选择</option>\r\n        </select>\r\n\r\n                <TextareaAutosize\r\n                // set test id for e2e testing\r\n                  data-testid=\"text-input\"\r\n                  id=\"userInput\" \r\n                  tabIndex=\"0\"\r\n                  autoFocus\r\n                  ref={inputRef}\r\n                  // style={{maxHeight: '200px', height: '24px', overflowY: 'hidden'}}\r\n                  rows=\"1\"\r\n                  value={disabled || isNotAppendable ? '' : text}\r\n                  onKeyUp={handleKeyUp}\r\n                  onKeyDown={handleKeyDown}\r\n                  onChange={changeHandler}\r\n                  onCompositionStart={handleCompositionStart}\r\n                  onCompositionEnd={handleCompositionEnd}\r\n                  placeholder={getPlaceholderText()}\r\n                  disabled={disabled || isNotAppendable}\r\n                  className=\"m-0 flex h-auto max-h-52 flex-1 resize-none overflow-auto border-0 bg-transparent p-0 pl-2 pr-12 leading-6 placeholder:text-sm placeholder:text-gray-600 focus:outline-none focus:ring-0 focus-visible:ring-0 dark:bg-transparent dark:placeholder:text-gray-500 md:pl-2\"\r\n                />\r\n                <SubmitButton\r\n                  submitMessage={submitMessage}\r\n                  handleStopGenerating={handleStopGenerating}\r\n                  disabled={disabled || isNotAppendable}\r\n                  isSubmitting={isSubmitting}\r\n                  endpointsConfig={endpointsConfig}\r\n                  endpoint={conversation?.endpoint}\r\n                />\r\n                {latestMessage && conversation?.jailbreak && conversation.endpoint === 'bingAI' ? (\r\n                  <AdjustToneButton onClick={handleBingToneSetting} />\r\n                ) : null}\r\n              </div>\r\n            </div>\r\n          </form>\r\n          <Footer />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import { useEffect } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { useRecoilState, useRecoilValue, useSetRecoilState } from 'recoil';\n\nimport Landing from '../components/ui/Landing';\nimport Messages from '../components/Messages';\nimport TextChat from '../components/Input';\n\nimport store from '~/store';\nimport { useGetMessagesByConvoId, useGetConversationByIdMutation } from '~/data-provider';\n\nexport default function Chat() {\n  const searchQuery = useRecoilValue(store.searchQuery);\n  const [conversation, setConversation] = useRecoilState(store.conversation);\n  const setMessages = useSetRecoilState(store.messages);\n  const messagesTree = useRecoilValue(store.messagesTree);\n  const { newConversation } = store.useConversation();\n  const { conversationId } = useParams();\n  const navigate = useNavigate();\n\n  //disabled by default, we only enable it when messagesTree is null\n  const messagesQuery = useGetMessagesByConvoId(conversationId, { enabled: false });\n  const getConversationMutation = useGetConversationByIdMutation(conversationId);\n\n  // when conversation changed or conversationId (in url) changed\n  useEffect(() => {\n    if (conversation === null) {\n      // no current conversation, we need to do something\n      if (conversationId === 'new') {\n        // create new\n        newConversation();\n      } else if (conversationId) {\n        // fetch it from server\n        getConversationMutation.mutate(conversationId, {\n          onSuccess: (data) => {\n            setConversation(data);\n          },\n          onError: (error) => {\n            console.error('failed to fetch the conversation');\n            console.error(error);\n            navigate(`/chat/new`);\n            newConversation();\n          }\n        });\n        setMessages(null);\n      } else {\n        navigate(`/chat/new`);\n      }\n    } else if (conversation?.conversationId === 'search') {\n      // jump to search page\n      navigate(`/search/${searchQuery}`);\n    } else if (conversation?.conversationId !== conversationId) {\n      // conversationId (in url) should always follow conversation?.conversationId, unless conversation is null\n      navigate(`/chat/${conversation?.conversationId}`);\n    }\n    document.title = conversation?.title || import.meta.env.VITE_APP_TITLE || 'Chat';\n  }, [conversation, conversationId]);\n\n  useEffect(() => {\n    if (messagesTree === null && conversation?.conversationId) {\n      messagesQuery.refetch(conversation?.conversationId);\n    }\n  }, [conversation?.conversationId, messagesQuery, messagesTree]);\n\n  useEffect(() => {\n    if (messagesQuery.data) {\n      setMessages(messagesQuery.data);\n    } else if (messagesQuery.isError) {\n      console.error('failed to fetch the messages');\n      console.error(messagesQuery.error);\n      setMessages(null);\n    }\n  }, [messagesQuery.data, messagesQuery.isError, setMessages]);\n\n  // if not a conversation\n  if (conversation?.conversationId === 'search') return null;\n  // if conversationId not match\n  if (conversation?.conversationId !== conversationId) return null;\n  // if conversationId is null\n  if (!conversationId) return null;\n\n  return (\n    <>\n      {conversationId === 'new' && !messagesTree?.length ? <Landing /> : <Messages />}\n      <TextChat />\n    </>\n  );\n}\n","import React, { useEffect } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { useRecoilState, useRecoilValue } from 'recoil';\n\nimport Messages from '../components/Messages';\nimport TextChat from '../components/Input';\n\nimport store from '~/store';\n\nexport default function Search() {\n  const [searchQuery, setSearchQuery] = useRecoilState(store.searchQuery);\n  const conversation = useRecoilValue(store.conversation);\n  const { searchPlaceholderConversation } = store.useConversation();\n  const { query } = useParams();\n  const navigate = useNavigate();\n\n  // when conversation changed or conversationId (in url) changed\n  useEffect(() => {\n    if (conversation === null) {\n      // no current conversation, we need to do something\n      if (query) {\n        // create new\n        searchPlaceholderConversation();\n        setSearchQuery(query);\n      } else {\n        navigate(`/chat/new`);\n      }\n    } else if (conversation?.conversationId === 'search') {\n      // jump to search page\n      if (searchQuery !== query) navigate(`/search/${searchQuery}`);\n    } else {\n      // conversationId (in url) should always follow conversation?.conversationId, unless conversation is null\n      navigate(`/chat/${conversation?.conversationId}`);\n    }\n  }, [conversation, query, searchQuery]);\n\n  // if not a search\n  if (conversation?.conversationId !== 'search') return null;\n  // if query not match\n  if (searchQuery !== query) return null;\n  // if query is null\n  if (!query) return null;\n\n  return (\n    <>\n      <Messages isSearchView={true} />\n      <TextChat isSearchView={true} />\n    </>\n  );\n}\n","import { useEffect } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { TLoginUser } from '~/data-provider';\nimport { useAuthContext } from '~/hooks/AuthContext';\nimport { useNavigate } from 'react-router-dom';\n\nfunction Login() {\n  const { login, error, isAuthenticated } = useAuthContext();\n  const {\n    register,\n    handleSubmit,\n    formState: { errors }\n  } = useForm<TLoginUser>();\n\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    if (isAuthenticated) {\n      navigate('/chat/new');\n    }\n  }, [isAuthenticated, navigate]);\n\n  const SERVER_URL = import.meta.env.DEV\n    ? import.meta.env.VITE_SERVER_URL_DEV\n    : import.meta.env.VITE_SERVER_URL_PROD;\n  const showGoogleLogin = import.meta.env.VITE_SHOW_GOOGLE_LOGIN_OPTION === 'true';\n\n  return (\n    <div className=\"flex min-h-screen flex-col items-center justify-center bg-white pt-6 sm:pt-0\">\n      <div className=\"mt-6 w-96 overflow-hidden bg-white px-6 py-4 sm:max-w-md sm:rounded-lg\">\n        <h1 className=\"mb-4 text-center text-3xl font-semibold\">Welcome back</h1>\n        {error && (\n          <div\n            className=\"relative mt-4 rounded border border-red-400 bg-red-100 px-4 py-3 text-red-700\"\n            role=\"alert\"\n          >\n            Unable to login with the information provided. Please check your credentials and try\n            again.\n          </div>\n        )}\n        <form\n          className=\"mt-6\"\n          aria-label=\"Login form\"\n          method=\"POST\"\n          onSubmit={handleSubmit((data) => login(data))}\n        >\n          <div className=\"mb-2\">\n            <div className=\"relative\">\n              <input\n                type=\"email\"\n                id=\"email\"\n                autoComplete=\"email\"\n                aria-label=\"Email\"\n                {...register('email', {\n                  required: 'Email is required',\n                  minLength: {\n                    value: 3,\n                    message: 'Email must be at least 6 characters'\n                  },\n                  maxLength: {\n                    value: 120,\n                    message: 'Email should not be longer than 120 characters'\n                  },\n                  pattern: {\n                    value: /\\S+@\\S+\\.\\S+/,\n                    message: 'You must enter a valid email address'\n                  }\n                })}\n                aria-invalid={!!errors.email}\n                className=\"peer block w-full appearance-none rounded-t-md border-0 border-b-2 border-gray-300 bg-gray-50 px-2.5 pb-2.5 pt-5 text-sm text-gray-900 focus:border-green-500 focus:outline-none focus:ring-0\"\n                placeholder=\" \"\n              ></input>\n              <label\n                htmlFor=\"email\"\n                className=\"absolute left-2.5 top-4 z-10 origin-[0] -translate-y-4 scale-75 transform text-gray-500 duration-300 peer-placeholder-shown:translate-y-0 peer-placeholder-shown:scale-100 peer-focus:-translate-y-4 peer-focus:scale-75 peer-focus:text-green-500\"\n              >\n                Email address\n              </label>\n            </div>\n            {errors.email && (\n              <span role=\"alert\" className=\"mt-1 text-sm text-red-600\">\n                {/* @ts-ignore */}\n                {errors.email.message}\n              </span>\n            )}\n          </div>\n          <div className=\"mb-2\">\n            <div className=\"relative\">\n              <input\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"current-password\"\n                aria-label=\"Password\"\n                {...register('password', {\n                  required: 'Password is required',\n                  minLength: {\n                    value: 8,\n                    message: 'Password must be at least 8 characters'\n                  },\n                  maxLength: {\n                    value: 40,\n                    message: 'Password must be less than 40 characters'\n                  }\n                })}\n                aria-invalid={!!errors.password}\n                className=\"peer block w-full appearance-none rounded-t-md border-0 border-b-2 border-gray-300 bg-gray-50 px-2.5 pb-2.5 pt-5 text-sm text-gray-900 focus:border-green-500 focus:outline-none focus:ring-0\"\n                placeholder=\" \"\n              ></input>\n              <label\n                htmlFor=\"password\"\n                className=\"absolute left-2.5 top-4 z-10 origin-[0] -translate-y-4 scale-75 transform text-gray-500 duration-300 peer-placeholder-shown:translate-y-0 peer-placeholder-shown:scale-100 peer-focus:-translate-y-4 peer-focus:scale-75 peer-focus:text-green-500\"\n              >\n                Password\n              </label>\n            </div>\n\n            {errors.password && (\n              <span role=\"alert\" className=\"mt-1 text-sm text-red-600\">\n                {/* @ts-ignore */}\n                {errors.password.message}\n              </span>\n            )}\n          </div>\n          <a href=\"/forgot-password\" className=\"text-sm text-green-500 hover:underline\">\n            Forgot Password?\n          </a>\n          <div className=\"mt-6\">\n            <button\n              aria-label=\"Sign in\"\n              type=\"submit\"\n              className=\"w-full transform rounded-sm bg-green-500 px-4 py-3 tracking-wide text-white transition-colors duration-200 hover:bg-green-600 focus:bg-green-600 focus:outline-none\"\n            >\n              Continue\n            </button>\n          </div>\n        </form>\n        <p className=\"my-4 text-center text-sm font-light text-gray-700\">\n          {' '}\n          Don't have an account?{' '}\n          <a href=\"/register\" className=\"p-1 text-green-500 hover:underline\">\n            Sign up\n          </a>\n        </p>\n        {showGoogleLogin && (\n          <>\n            <div className=\"relative mt-6 flex w-full items-center justify-center border border-t uppercase\">\n              <div className=\"absolute bg-white px-3 text-xs\">Or</div>\n            </div>\n            <div className=\"mt-4 flex gap-x-2\">\n              <a\n                aria-label=\"Login with Google\"\n                className=\"justify-left flex w-full items-center space-x-3 rounded-md border border-gray-300 px-5 py-3 hover:bg-gray-50 focus:ring-2 focus:ring-violet-600 focus:ring-offset-1\"\n                href={`${SERVER_URL}/oauth/google`}\n              >\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  viewBox=\"0 0 512 512\"\n                  id=\"google\"\n                  className=\"h-5 w-5\"\n                >\n                  <path\n                    fill=\"#fbbb00\"\n                    d=\"M113.47 309.408 95.648 375.94l-65.139 1.378C11.042 341.211 0 299.9 0 256c0-42.451 10.324-82.483 28.624-117.732h.014L86.63 148.9l25.404 57.644c-5.317 15.501-8.215 32.141-8.215 49.456.002 18.792 3.406 36.797 9.651 53.408z\"\n                  ></path>\n                  <path\n                    fill=\"#518ef8\"\n                    d=\"M507.527 208.176C510.467 223.662 512 239.655 512 256c0 18.328-1.927 36.206-5.598 53.451-12.462 58.683-45.025 109.925-90.134 146.187l-.014-.014-73.044-3.727-10.338-64.535c29.932-17.554 53.324-45.025 65.646-77.911h-136.89V208.176h245.899z\"\n                  ></path>\n                  <path\n                    fill=\"#28b446\"\n                    d=\"m416.253 455.624.014.014C372.396 490.901 316.666 512 256 512c-97.491 0-182.252-54.491-225.491-134.681l82.961-67.91c21.619 57.698 77.278 98.771 142.53 98.771 28.047 0 54.323-7.582 76.87-20.818l83.383 68.262z\"\n                  ></path>\n                  <path\n                    fill=\"#f14336\"\n                    d=\"m419.404 58.936-82.933 67.896C313.136 112.246 285.552 103.82 256 103.82c-66.729 0-123.429 42.957-143.965 102.724l-83.397-68.276h-.014C71.23 56.123 157.06 0 256 0c62.115 0 119.068 22.126 163.404 58.936z\"\n                  ></path>\n                </svg>\n                <p>Login with Google</p>\n              </a>\n\n              {/* <a \n                aria-label=\"Login with Facebook\"\n                className=\"flex w-full items-center justify-center rounded-md border border-gray-600 p-2 focus:ring-2 focus:ring-violet-600 focus:ring-offset-1\"\n                href=\"http://localhost:3080/auth/facebook\">\n                <FontAwesomeIcon\n                  icon={faFacebook} \n                  size={'lg'}\n                />\n              </a> */}\n            </div>\n          </>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default Login;\n","import { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useForm } from 'react-hook-form';\nimport { useRegisterUserMutation, TRegisterUser } from '~/data-provider';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faFacebook } from '@fortawesome/free-brands-svg-icons';\nimport { faGoogle } from '@fortawesome/free-brands-svg-icons';\n\nfunction Registration() {\n  const SERVER_URL = import.meta.env.DEV\n    ? import.meta.env.VITE_SERVER_URL_DEV\n    : import.meta.env.VITE_SERVER_URL_PROD;\n  const showGoogleLogin = import.meta.env.VITE_SHOW_GOOGLE_LOGIN_OPTION === 'true';\n\n  const navigate = useNavigate();\n  const {\n    register,\n    watch,\n    handleSubmit,\n    formState: { errors }\n  } = useForm<TRegisterUser>({ mode: 'onChange' });\n  const [error, setError] = useState<boolean>(false);\n  const [errorMessage, setErrorMessage] = useState<string>('');\n  const registerUser = useRegisterUserMutation();\n\n  const password = watch('password');\n\n  const onRegisterUserFormSubmit = (data: TRegisterUser) => {\n    registerUser.mutate(data, {\n      onSuccess: () => {\n        navigate('/chat/new');\n      },\n      onError: (error) => {\n        setError(true);\n        if (error.response?.data?.message) {\n          setErrorMessage(error.response?.data?.message);\n        }\n      }\n    });\n  };\n\n  return (\n    <div className=\"flex min-h-screen flex-col items-center justify-center bg-white pt-6 sm:pt-0\">\n      <div className=\"mt-6 w-96 overflow-hidden bg-white px-6 py-4 sm:max-w-md sm:rounded-lg\">\n        <h1 className=\"mb-4 text-center text-3xl font-semibold\">Create your account</h1>\n        {error && (\n          <div\n            className=\"relative mt-4 rounded border border-red-400 bg-red-100 px-4 py-3 text-red-700\"\n            role=\"alert\"\n          >\n            There was an error attempting to register your account. Please try again. {errorMessage}\n          </div>\n        )}\n        <form\n          className=\"mt-6\"\n          aria-label=\"Registration form\"\n          method=\"POST\"\n          onSubmit={handleSubmit((data) => onRegisterUserFormSubmit(data))}\n        >\n          <div className=\"mb-2\">\n            <div className=\"relative\">\n              <input\n                id=\"name\"\n                type=\"text\"\n                autoComplete=\"name\"\n                aria-label=\"Name\"\n                // uncomment to prevent pasting in confirm field\n                onPaste={(e) => {\n                  e.preventDefault();\n                  return false;\n                }}\n                {...register('name', {\n                  required: 'Name is required',\n                  minLength: {\n                    value: 3,\n                    message: 'Name must be at least 3 characters'\n                  },\n                  maxLength: {\n                    value: 80,\n                    message: 'Name must be less than 80 characters'\n                  }\n                })}\n                aria-invalid={!!errors.name}\n                className=\"peer block w-full appearance-none rounded-t-md border-0 border-b-2 border-gray-300 bg-gray-50 px-2.5 pb-2.5 pt-5 text-sm text-gray-900 focus:border-green-500 focus:outline-none focus:ring-0\"\n                placeholder=\" \"\n              ></input>\n              <label\n                htmlFor=\"name\"\n                className=\"absolute left-2.5 top-4 z-10 origin-[0] -translate-y-4 scale-75 transform text-sm text-gray-500 duration-300 peer-placeholder-shown:translate-y-0 peer-placeholder-shown:scale-100 peer-focus:-translate-y-4 peer-focus:scale-75 peer-focus:text-green-500\"\n              >\n                Full Name\n              </label>\n            </div>\n\n            {errors.name && (\n              <span role=\"alert\" className=\"mt-1 text-sm text-red-600\">\n                {/* @ts-ignore */}\n                {errors.name.message}\n              </span>\n            )}\n          </div>\n          <div className=\"mb-2\">\n            <div className=\"relative\">\n              <input\n                type=\"text\"\n                id=\"username\"\n                aria-label=\"Username\"\n                {...register('username', {\n                  required: 'Username is required',\n                  minLength: {\n                    value: 3,\n                    message: 'Username must be at least 3 characters'\n                  },\n                  maxLength: {\n                    value: 20,\n                    message: 'Username must be less than 20 characters'\n                  }\n                })}\n                aria-invalid={!!errors.username}\n                className=\"peer block w-full appearance-none rounded-t-md border-0 border-b-2 border-gray-300 bg-gray-50 px-2.5 pb-2.5 pt-5 text-sm text-gray-900 focus:border-green-500 focus:outline-none focus:ring-0\"\n                placeholder=\" \"\n                autoComplete=\"off\"\n              ></input>\n              <label\n                htmlFor=\"username\"\n                className=\"absolute left-2.5 top-4 z-10 origin-[0] -translate-y-4 scale-75 transform text-sm text-gray-500 duration-300 peer-placeholder-shown:translate-y-0 peer-placeholder-shown:scale-100 peer-focus:-translate-y-4 peer-focus:scale-75 peer-focus:text-green-500\"\n              >\n                Username\n              </label>\n            </div>\n\n            {errors.username && (\n              <span role=\"alert\" className=\"mt-1 text-sm text-red-600\">\n                {/* @ts-ignore */}\n                {errors.username.message}\n              </span>\n            )}\n          </div>\n          <div className=\"mb-2\">\n            <div className=\"relative\">\n              <input\n                type=\"email\"\n                id=\"email\"\n                autoComplete=\"email\"\n                aria-label=\"Email\"\n                {...register('email', {\n                  required: 'Email is required',\n                  minLength: {\n                    value: 3,\n                    message: 'Email must be at least 6 characters'\n                  },\n                  maxLength: {\n                    value: 120,\n                    message: 'Email should not be longer than 120 characters'\n                  },\n                  pattern: {\n                    value: /\\S+@\\S+\\.\\S+/,\n                    message: 'You must enter a valid email address'\n                  }\n                })}\n                aria-invalid={!!errors.email}\n                className=\"peer block w-full appearance-none rounded-t-md border-0 border-b-2 border-gray-300 bg-gray-50 px-2.5 pb-2.5 pt-5 text-sm text-gray-900 focus:border-green-500 focus:outline-none focus:ring-0\"\n                placeholder=\" \"\n              ></input>\n              <label\n                htmlFor=\"email\"\n                className=\"absolute left-2.5 top-4 z-10 origin-[0] -translate-y-4 scale-75 transform text-sm text-gray-500 duration-300 peer-placeholder-shown:translate-y-0 peer-placeholder-shown:scale-100 peer-focus:-translate-y-4 peer-focus:scale-75 peer-focus:text-green-500\"\n              >\n                Email\n              </label>\n            </div>\n            {errors.email && (\n              <span role=\"alert\" className=\"mt-1 text-sm text-red-600\">\n                {/* @ts-ignore */}\n                {errors.email.message}\n              </span>\n            )}\n          </div>\n          <div className=\"mb-2\">\n            <div className=\"relative\">\n              <input\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"current-password\"\n                aria-label=\"Password\"\n                {...register('password', {\n                  required: 'Password is required',\n                  minLength: {\n                    value: 8,\n                    message: 'Password must be at least 8 characters'\n                  },\n                  maxLength: {\n                    value: 40,\n                    message: 'Password must be less than 40 characters'\n                  }\n                })}\n                aria-invalid={!!errors.password}\n                className=\"peer block w-full appearance-none rounded-t-md border-0 border-b-2 border-gray-300 bg-gray-50 px-2.5 pb-2.5 pt-5 text-sm text-gray-900 focus:border-green-500 focus:outline-none focus:ring-0\"\n                placeholder=\" \"\n              ></input>\n              <label\n                htmlFor=\"password\"\n                className=\"absolute left-2.5 top-4 z-10 origin-[0] -translate-y-4 scale-75 transform text-sm text-gray-500 duration-300 peer-placeholder-shown:translate-y-0 peer-placeholder-shown:scale-100 peer-focus:-translate-y-4 peer-focus:scale-75 peer-focus:text-green-500\"\n              >\n                Password\n              </label>\n            </div>\n\n            {errors.password && (\n              <span role=\"alert\" className=\"mt-1 text-sm text-red-600\">\n                {/* @ts-ignore */}\n                {errors.password.message}\n              </span>\n            )}\n          </div>\n          <div className=\"mb-2\">\n            <div className=\"relative\">\n              <input\n                type=\"password\"\n                id=\"confirm_password\"\n                aria-label=\"Confirm Password\"\n                // uncomment to prevent pasting in confirm field\n                onPaste={(e) => {\n                  e.preventDefault();\n                  return false;\n                }}\n                {...register('confirm_password', {\n                  validate: (value) => value === password || 'Passwords do not match'\n                })}\n                aria-invalid={!!errors.confirm_password}\n                className=\"peer block w-full appearance-none rounded-t-md border-0 border-b-2 border-gray-300 bg-gray-50 px-2.5 pb-2.5 pt-5 text-sm text-gray-900 focus:border-green-500 focus:outline-none focus:ring-0\"\n                placeholder=\" \"\n              ></input>\n              <label\n                htmlFor=\"confirm_password\"\n                className=\"absolute left-2.5 top-4 z-10 origin-[0] -translate-y-4 scale-75 transform text-sm text-gray-500 duration-300 peer-placeholder-shown:translate-y-0 peer-placeholder-shown:scale-100 peer-focus:-translate-y-4 peer-focus:scale-75 peer-focus:text-green-500\"\n              >\n                Confirm Password\n              </label>\n            </div>\n\n            {errors.confirm_password && (\n              <span role=\"alert\" className=\"mt-1 text-sm text-red-600\">\n                {/* @ts-ignore */}\n                {errors.confirm_password.message}\n              </span>\n            )}\n          </div>\n          <div className=\"mt-6\">\n            <button\n              disabled={\n                !!errors.email ||\n                !!errors.name ||\n                !!errors.password ||\n                !!errors.username ||\n                !!errors.confirm_password\n              }\n              type=\"submit\"\n              aria-label=\"Submit registration\"\n              className=\"w-full transform rounded-sm bg-green-500 px-4 py-3 tracking-wide text-white transition-colors duration-200 hover:bg-green-600 focus:bg-green-600 focus:outline-none\"\n            >\n              Continue\n            </button>\n          </div>\n        </form>\n        <p className=\"my-4 text-center text-sm font-light text-gray-700\">\n          {' '}\n          Already have an account?{' '}\n          <a href=\"/login\" className=\"p-1 font-medium text-green-500 hover:underline\">\n            Login\n          </a>\n        </p>\n        {showGoogleLogin && (\n          <>\n            <div className=\"relative mt-6 flex w-full items-center justify-center border border-t uppercase\">\n              <div className=\"absolute bg-white px-3 text-xs\">Or</div>\n            </div>\n\n            <div className=\"mt-4 flex gap-x-2\">\n              <a\n                aria-label=\"Login with Google\"\n                href={`${SERVER_URL}/oauth/google`}\n                className=\"justify-left flex w-full items-center space-x-3 rounded-md border border-gray-300 px-5 py-3 hover:bg-gray-50 focus:ring-2 focus:ring-violet-600 focus:ring-offset-1\"\n              >\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  viewBox=\"0 0 512 512\"\n                  id=\"google\"\n                  className=\"h-5 w-5\"\n                >\n                  <path\n                    fill=\"#fbbb00\"\n                    d=\"M113.47 309.408 95.648 375.94l-65.139 1.378C11.042 341.211 0 299.9 0 256c0-42.451 10.324-82.483 28.624-117.732h.014L86.63 148.9l25.404 57.644c-5.317 15.501-8.215 32.141-8.215 49.456.002 18.792 3.406 36.797 9.651 53.408z\"\n                  ></path>\n                  <path\n                    fill=\"#518ef8\"\n                    d=\"M507.527 208.176C510.467 223.662 512 239.655 512 256c0 18.328-1.927 36.206-5.598 53.451-12.462 58.683-45.025 109.925-90.134 146.187l-.014-.014-73.044-3.727-10.338-64.535c29.932-17.554 53.324-45.025 65.646-77.911h-136.89V208.176h245.899z\"\n                  ></path>\n                  <path\n                    fill=\"#28b446\"\n                    d=\"m416.253 455.624.014.014C372.396 490.901 316.666 512 256 512c-97.491 0-182.252-54.491-225.491-134.681l82.961-67.91c21.619 57.698 77.278 98.771 142.53 98.771 28.047 0 54.323-7.582 76.87-20.818l83.383 68.262z\"\n                  ></path>\n                  <path\n                    fill=\"#f14336\"\n                    d=\"m419.404 58.936-82.933 67.896C313.136 112.246 285.552 103.82 256 103.82c-66.729 0-123.429 42.957-143.965 102.724l-83.397-68.276h-.014C71.23 56.123 157.06 0 256 0c62.115 0 119.068 22.126 163.404 58.936z\"\n                  ></path>\n                </svg>\n                <p>Login with Google</p>\n              </a>\n              {/* <button\n                  aria-label=\"Login with Facebook\"\n                  role=\"button\"\n                  className=\"flex w-full items-center justify-center space-x-3 rounded-md border p-4 focus:ring-2 focus:ring-violet-400 focus:ring-offset-1 dark:border-gray-400\"\n                >\n                  <FontAwesomeIcon\n                    icon={faFacebook} \n                    size={'lg'}\n                  />\n                  <p>Login with Facebook</p>\n                </button> */}\n            </div>\n          </>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default Registration;\n","import { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useRequestPasswordResetMutation, TRequestPasswordReset } from '~/data-provider';\n\nfunction RequestPasswordReset() {\n  const {\n    register,\n    handleSubmit,\n    formState: { errors }\n  } = useForm<TRequestPasswordReset>();\n  const requestPasswordReset = useRequestPasswordResetMutation();\n  const [success, setSuccess] = useState<boolean>(false);\n  const [requestError, setRequestError] = useState<boolean>(false);\n  const [resetLink, setResetLink] = useState<string>('');\n\n  const onSubmit = (data: TRequestPasswordReset) => {\n    requestPasswordReset.mutate(data, {\n      onSuccess: (data) => {\n        setSuccess(true);\n        setResetLink(data.link);\n      },\n      onError: () => {\n        setRequestError(true);\n        setTimeout(() => {\n          setRequestError(false);\n        }, 5000);\n      }\n    });\n  };\n\n  return (\n    <div className=\"flex min-h-screen flex-col items-center justify-center bg-white pt-6 sm:pt-0\">\n      <div className=\"mt-6 w-96 overflow-hidden bg-white px-6 py-4 sm:max-w-md sm:rounded-lg\">\n        <h1 className=\"mb-4 text-center text-3xl font-semibold\">Reset your password</h1>\n        {success && (\n          <div\n            className=\"relative mt-4 rounded border border-green-400 bg-green-100 px-4 py-3 text-green-700\"\n            role=\"alert\"\n          >\n            Click{' '}\n            <a className=\"text-green-600 hover:underline\" href={resetLink}>\n              HERE\n            </a>{' '}\n            to reset your password.\n            {/* An email has been sent with instructions on how to reset your password. */}\n          </div>\n        )}\n        {requestError && (\n          <div\n            className=\"relative mt-4 rounded border border-red-400 bg-red-100 px-4 py-3 text-red-700\"\n            role=\"alert\"\n          >\n            There was a problem resetting your password. There was no user found with the email\n            address provided. Please try again.\n          </div>\n        )}\n        <form\n          className=\"mt-6\"\n          aria-label=\"Password reset form\"\n          method=\"POST\"\n          onSubmit={handleSubmit(onSubmit)}\n        >\n          <div className=\"mb-2\">\n            <div className=\"relative\">\n              <input\n                type=\"email\"\n                id=\"email\"\n                autoComplete=\"off\"\n                aria-label=\"Email\"\n                {...register('email', {\n                  required: 'Email is required',\n                  minLength: {\n                    value: 3,\n                    message: 'Email must be at least 6 characters'\n                  },\n                  maxLength: {\n                    value: 120,\n                    message: 'Email should not be longer than 120 characters'\n                  },\n                  pattern: {\n                    value: /\\S+@\\S+\\.\\S+/,\n                    message: 'You must enter a valid email address'\n                  }\n                })}\n                aria-invalid={!!errors.email}\n                className=\"peer block w-full appearance-none rounded-t-md border-0 border-b-2 border-gray-300 bg-gray-50 px-2.5 pb-2.5 pt-5 text-sm text-gray-900 focus:border-green-500 focus:outline-none focus:ring-0\"\n                placeholder=\" \"\n              ></input>\n              <label\n                htmlFor=\"email\"\n                className=\"absolute left-2.5 top-4 z-10 origin-[0] -translate-y-4 scale-75 transform text-gray-500 duration-300 peer-placeholder-shown:translate-y-0 peer-placeholder-shown:scale-100 peer-focus:-translate-y-4 peer-focus:scale-75 peer-focus:text-green-500\"\n              >\n                Email address\n              </label>\n            </div>\n            {errors.email && (\n              <span role=\"alert\" className=\"mt-1 text-sm text-red-600\">\n                {/* @ts-ignore */}\n                {errors.email.message}\n              </span>\n            )}\n          </div>\n          <div className=\"mt-6\">\n            <button\n              type=\"submit\"\n              disabled={!!errors.email}\n              className=\"w-full rounded-sm border border-transparent bg-green-500 px-4 py-2 text-sm font-medium text-white shadow-sm hover:bg-green-600 focus:outline-none active:bg-green-500\"\n            >\n              Continue\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n}\n\nexport default RequestPasswordReset;\n","import { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useResetPasswordMutation, TResetPassword } from '~/data-provider';\nimport { useNavigate, useSearchParams } from 'react-router-dom';\n\nfunction ResetPassword() {\n  const {\n    register,\n    handleSubmit,\n    watch,\n    formState: { errors }\n  } = useForm<TResetPassword>();\n  const resetPassword = useResetPasswordMutation();\n  const [resetError, setResetError] = useState<boolean>(false);\n  const [params] = useSearchParams();\n  const navigate = useNavigate();\n  const password = watch('password');\n\n  const onSubmit = (data: TResetPassword) => {\n    resetPassword.mutate(data, {\n      onError: () => {\n        setResetError(true);\n      }\n    });\n  };\n\n  if (resetPassword.isSuccess) {\n    return (\n      <div className=\"flex min-h-screen flex-col items-center justify-center bg-white pt-6 sm:pt-0\">\n        <div className=\"mt-6 w-96 overflow-hidden bg-white px-6 py-4 sm:max-w-md sm:rounded-lg\">\n          <h1 className=\"mb-4 text-center text-3xl font-semibold\">Password Reset Success</h1>\n          <div\n            className=\"relative mb-8 mt-4 rounded border border-green-400 bg-green-100 px-4 py-3 text-center text-green-700\"\n            role=\"alert\"\n          >\n            You may now login with your new password.\n          </div>\n          <button\n            onClick={() => navigate('/login')}\n            aria-label=\"Sign in\"\n            className=\"w-full transform rounded-sm bg-green-500 px-4 py-3 tracking-wide text-white transition-colors duration-200 hover:bg-green-600 focus:bg-green-600 focus:outline-none\"\n          >\n            Continue\n          </button>\n        </div>\n      </div>\n    );\n  } else {\n    return (\n      <div className=\"flex min-h-screen flex-col items-center justify-center bg-white pt-6 sm:pt-0\">\n        <div className=\"mt-6 w-96 overflow-hidden bg-white px-6 py-4 sm:max-w-md sm:rounded-lg\">\n          <h1 className=\"mb-4 text-center text-3xl font-semibold\">Reset your password</h1>\n          {resetError && (\n            <div\n              className=\"relative mt-4 rounded border border-red-400 bg-red-100 px-4 py-3 text-red-700\"\n              role=\"alert\"\n            >\n              This password reset token is no longer valid.{' '}\n              <a className=\"font-semibold text-green-600 hover:underline\" href=\"/forgot-password\">\n                Click here\n              </a>{' '}\n              to try again.\n            </div>\n          )}\n          <form\n            className=\"mt-6\"\n            aria-label=\"Password reset form\"\n            method=\"POST\"\n            onSubmit={handleSubmit(onSubmit)}\n          >\n            <div className=\"mb-2\">\n              <div className=\"relative\">\n                <input\n                  type=\"hidden\"\n                  id=\"token\"\n                  value={params.get('token')}\n                  {...register('token', { required: 'Unable to process: No valid reset token' })}\n                />\n                <input\n                  type=\"hidden\"\n                  id=\"userId\"\n                  value={params.get('userId')}\n                  {...register('userId', { required: 'Unable to process: No valid user id' })}\n                />\n                <input\n                  type=\"password\"\n                  id=\"password\"\n                  autoComplete=\"current-password\"\n                  aria-label=\"Password\"\n                  {...register('password', {\n                    required: 'Password is required',\n                    minLength: {\n                      value: 8,\n                      message: 'Password must be at least 8 characters'\n                    },\n                    maxLength: {\n                      value: 40,\n                      message: 'Password must be less than 40 characters'\n                    }\n                  })}\n                  aria-invalid={!!errors.password}\n                  className=\"peer block w-full appearance-none rounded-t-md border-0 border-b-2 border-gray-300 bg-gray-50 px-2.5 pb-2.5 pt-5 text-sm text-gray-900 focus:border-green-500 focus:outline-none focus:ring-0\"\n                  placeholder=\" \"\n                ></input>\n                <label\n                  htmlFor=\"password\"\n                  className=\"absolute left-2.5 top-4 z-10 origin-[0] -translate-y-4 scale-75 transform text-sm text-gray-500 duration-300 peer-placeholder-shown:translate-y-0 peer-placeholder-shown:scale-100 peer-focus:-translate-y-4 peer-focus:scale-75 peer-focus:text-green-500\"\n                >\n                  Password\n                </label>\n              </div>\n\n              {errors.password && (\n                <span role=\"alert\" className=\"mt-1 text-sm text-red-600\">\n                  {/* @ts-ignore */}\n                  {errors.password.message}\n                </span>\n              )}\n            </div>\n            <div className=\"mb-2\">\n              <div className=\"relative\">\n                <input\n                  type=\"password\"\n                  id=\"confirm_password\"\n                  aria-label=\"Confirm Password\"\n                  // uncomment to prevent pasting in confirm field\n                  onPaste={(e) => {\n                    e.preventDefault();\n                    return false;\n                  }}\n                  {...register('confirm_password', {\n                    validate: (value) => value === password || 'Passwords do not match'\n                  })}\n                  aria-invalid={!!errors.confirm_password}\n                  className=\"peer block w-full appearance-none rounded-t-md border-0 border-b-2 border-gray-300 bg-gray-50 px-2.5 pb-2.5 pt-5 text-sm text-gray-900 focus:border-green-500 focus:outline-none focus:ring-0\"\n                  placeholder=\" \"\n                ></input>\n                <label\n                  htmlFor=\"confirm_password\"\n                  className=\"absolute left-2.5 top-4 z-10 origin-[0] -translate-y-4 scale-75 transform text-sm text-gray-500 duration-300 peer-placeholder-shown:translate-y-0 peer-placeholder-shown:scale-100 peer-focus:-translate-y-4 peer-focus:scale-75 peer-focus:text-green-500\"\n                >\n                  Confirm Password\n                </label>\n              </div>\n              {errors.confirm_password && (\n                <span role=\"alert\" className=\"mt-1 text-sm text-red-600\">\n                  {/* @ts-ignore */}\n                  {errors.confirm_password.message}\n                </span>\n              )}\n              {errors.token && (\n                <span role=\"alert\" className=\"mt-1 text-sm text-red-600\">\n                  {/* @ts-ignore */}\n                  {errors.token.message}\n                </span>\n              )}\n              {errors.userId && (\n                <span role=\"alert\" className=\"mt-1 text-sm text-red-600\">\n                  {/* @ts-ignore */}\n                  {errors.userId.message}\n                </span>\n              )}\n            </div>\n            <div className=\"mt-6\">\n              <button\n                disabled={!!errors.password || !!errors.confirm_password}\n                type=\"submit\"\n                aria-label=\"Submit registration\"\n                className=\"w-full transform rounded-sm bg-green-500 px-4 py-3 tracking-wide text-white transition-colors duration-200 hover:bg-green-600 focus:bg-green-600 focus:outline-none\"\n              >\n                Continue\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ResetPassword;\n","import React, { useState } from 'react';\n\nexport type ApiError = {\n  error: any;\n  setError: (error: any) => void;\n};\n\nconst ApiErrorBoundaryContext = React.createContext<ApiError | undefined>(undefined);\n\nexport const ApiErrorBoundaryProvider = ({\n  value,\n  children\n}: {\n  value?: ApiError;\n  children: React.ReactNode;\n}) => {\n  const [error, setError] = useState(false);\n  return (\n    <ApiErrorBoundaryContext.Provider value={value ? value : { error, setError }}>\n      {children}\n    </ApiErrorBoundaryContext.Provider>\n  );\n};\n\nexport const useApiErrorBoundary = () => {\n  const context = React.useContext(ApiErrorBoundaryContext);\n\n  if (context === undefined) {\n    throw new Error('useApiErrorBoundary must be used inside ApiErrorBoundaryProvider');\n  }\n\n  return context;\n};\n","import React from 'react';\nimport { useApiErrorBoundary } from '~/hooks/ApiErrorBoundaryContext';\nimport { useNavigate } from 'react-router-dom';\n\nconst ApiErrorWatcher = () => {\n  const { error } = useApiErrorBoundary();\n  const navigate = useNavigate();\n  React.useEffect(() => {\n    if (error?.response?.status === 500) {\n      // do something with error\n      // navigate('/login');\n    }\n  }, [error, navigate]);\n\n  return null;\n};\n\nexport default ApiErrorWatcher;\n","import { createBrowserRouter, RouterProvider, Navigate, Outlet } from 'react-router-dom';\nimport Root from './routes/Root';\nimport Chat from './routes/Chat';\nimport Search from './routes/Search';\nimport { ScreenshotProvider } from './utils/screenshotContext.jsx';\nimport { ReactQueryDevtools } from '@tanstack/react-query-devtools';\nimport { Login, Registration, RequestPasswordReset, ResetPassword } from './components/Auth';\nimport { AuthContextProvider } from './hooks/AuthContext';\nimport { RecoilRoot } from 'recoil';\nimport { QueryClient, QueryClientProvider, QueryCache } from '@tanstack/react-query';\nimport { ThemeProvider } from './hooks/ThemeContext';\nimport { useApiErrorBoundary } from './hooks/ApiErrorBoundaryContext';\nimport ApiErrorWatcher from './components/Auth/ApiErrorWatcher';\n\nconst AuthLayout = () => (\n  <AuthContextProvider>\n    <Outlet />\n    <ApiErrorWatcher />\n  </AuthContextProvider>\n);\nconst router = createBrowserRouter([\n  {\n    path: 'register',\n    element: <Registration />\n  },\n  {\n    path: 'forgot-password',\n    element: <RequestPasswordReset />\n  },\n  {\n    path: 'reset-password',\n    element: <ResetPassword />\n  },\n  {\n    element: <AuthLayout />,\n    children: [\n      {\n        path: 'login',\n        element: <Login />\n      },\n      {\n        path: '/',\n        element: <Root />,\n        children: [\n          {\n            index: true,\n            element: <Navigate to=\"/chat/new\" replace={true} />\n          },\n          {\n            path: 'chat/:conversationId?',\n            element: <Chat />\n          },\n          {\n            path: 'search/:query?',\n            element: <Search />\n          }\n        ]\n      }\n    ]\n  }\n]);\n\nconst App = () => {\n  const { setError } = useApiErrorBoundary();\n\n  const queryClient = new QueryClient({\n    queryCache: new QueryCache({\n      onError: (error) => {\n        if (error?.response?.status === 401) {\n          setError(error);\n        }\n      }\n    })\n  });\n\n  return (\n    <QueryClientProvider client={queryClient}>\n      <RecoilRoot>\n        <ThemeProvider>\n          <RouterProvider router={router} />\n          <ReactQueryDevtools initialIsOpen={false} />\n        </ThemeProvider>\n      </RecoilRoot>\n    </QueryClientProvider>\n  );\n};\n\nexport default () => (\n  <ScreenshotProvider>\n    <App />\n  </ScreenshotProvider>\n);\n","import { createRoot } from 'react-dom/client';\nimport App from './App';\nimport './style.css';\nimport './mobile.css';\nimport { ApiErrorBoundaryProvider } from './hooks/ApiErrorBoundaryContext';\n\nconst container = document.getElementById('root');\nconst root = createRoot(container);\n\nroot.render(\n  <ApiErrorBoundaryProvider>\n    <App />\n  </ApiErrorBoundaryProvider>\n);\n"],"names":["SSE","url","options","type","listener","filtered","element","e","onHandler","callback","state","event","data","part","chunk","line","index","field","value","header","createPayload","submission","conversation","message","endpointOption","conversationId","endpoint","server","payload","endpointsConfig","atom","endpointsFilter","selector","get","config","filter","key","availableEndpoints","endpoints","f","even","odd","buildTree","messages","groupAll","messageMap","rootMessages","m","idx","parentMessage","buildDefaultConversation","lastConversationSetup","lastSelectedModel","_b","_a","_d","_c","_f","_e","getDefaultConversation","preset","targetEndpoint","error","isSubmitting","submission$1","messagesTree","latestMessage","messagesSiblingIdxFamily","atomFamily","useConversation","setConversation","useSetRecoilState","setMessages","setSubmission","resetLatestMessage","useResetRecoilState","switchToConversation","useRecoilCallback","snapshot","_conversation","prevConversation","_switchToConversation","template","conversation$1","refreshConversationsHint","useConversations","setRefreshConversationsHint","prevState","conversations$1","user","user$2","text","text$1","isSearchEnabled","searchQuery","searchResultMessages","searchResultMessagesTree","isSearching","search$1","presets","tokenRefreshHints","useToken","hints","setHints","useRecoilState","getToken","saveToken","prev","token","store","conversations","search","_get","axios","_post","_postMultiPart","formData","_put","_delete","_deleteWithOptions","_patch","request","id","pageNumber","conversationById","updateConversation","deleteConversation","q","searchEnabled","deletePreset","aiEndpoints","tokenizer","login","logout","register","refreshToken","requestPasswordReset","resetPassword","getConversations","endpoints.conversations","endpoints.deleteConversation","clearAllConversations","getMessagesByConvoId","endpoints.messages","getConversationById","endpoints.conversationById","endpoints.updateConversation","getPresets","endpoints.presets","createPreset","arg","endpoints.deletePreset","getSearchEnabled","endpoints.searchEnabled","getUser","endpoints.user","searchConversations","endpoints.search","getAIEndpoints","endpoints.aiEndpoints","updateTokenCount","endpoints.tokenizer","endpoints.login","endpoints.logout","endpoints.register","endpoints.refreshToken","endpoints.requestPasswordReset","endpoints.resetPassword","useGetUserQuery","useQuery","dataService.getUser","useGetMessagesByConvoId","dataService.getMessagesByConvoId","useGetConversationByIdQuery","dataService.getConversationById","useGetConversationByIdMutation","queryClient","useQueryClient","useMutation","res","useUpdateConversationMutation","dataService.updateConversation","useDeleteConversationMutation","dataService.deleteConversation","useClearConversationsMutation","dataService.clearAllConversations","useGetConversationsQuery","dataService.getConversations","useGetSearchEnabledQuery","dataService.getSearchEnabled","useGetEndpointsQuery","dataService.getAIEndpoints","useCreatePresetMutation","dataService.createPreset","useGetPresetsQuery","dataService.getPresets","useDeletePresetMutation","dataService.deletePreset","useSearchQuery","dataService.searchConversations","useUpdateTokenCountMutation","dataService.updateTokenCount","useLoginUserMutation","dataService.login","useRegisterUserMutation","dataService.register","useLogoutUserMutation","dataService.logout","useRefreshTokenMutation","dataService.refreshToken","useRequestPasswordResetMutation","dataService.requestPasswordReset","useResetPasswordMutation","dataService.resetPassword","setTokenHeader","AuthContext","createContext","AuthContextProvider","children","setUser","useState","setToken","setError","isLoading","setIsLoading","isAuthenticated","setIsAuthenticated","navigate","useNavigate","loginUser","logoutUser","userQuery","useLocation","setUserContext","userContext","redirect","getCookieValue","keyValue","c","useEffect","tokenFromCookie","memoedValue","useMemo","useAuthContext","context","useContext","MessageHandler","useRecoilValue","setIsSubmitting","refreshConversations","messageHandler","initialResponse","isRegenerate","cancelHandler","requestMessage","responseMessage","createdHandler","finalHandler","errorHandler","errorResponse","abortConversation","response","events","isCancelled","NewChat","newConversation","clickHandler","jsxs","jsx","cn","inputs","twMerge","clsx","Panel","open","className","openPanel","closePanel","Spinner","Pages","pages","nextPage","previousPage","func","RenameIcon","CheckMark","RenameButton","renaming","renameHandler","onRename","twcss","handler","classProp","TrashIcon","CrossIcon","DeleteButton","retainView","currentConversation","deleteConvoMutation","ConvoIcon","Conversation","setCurrentConversation","updateConvoMutation","setRenaming","inputRef","useRef","title","titleInput","setTitleInput","handleKeyDown","aProps","Conversations","moveToTop","Fragment","convo","SearchBar","forwardRef","props","ref","clearSearch","setSearchQuery","handleKeyUp","onChange","Search","NavLink","svg","defaultProps","buttonVariants","cva","Button","React.forwardRef","variant","size","Dialog","DialogPrimitive.Root","DialogTrigger","DialogPrimitive.Trigger","DialogPortal","DialogPrimitive.Portal","DialogOverlay","DialogPrimitive.Overlay","DialogContent","DialogPrimitive.Content","DialogPrimitive.Close","X","DialogHeader","DialogFooter","DialogTitle","DialogPrimitive.Title","DialogDescription","DialogPrimitive.Description","DialogClose","DialogButton","DialogTemplate","description","main","buttons","leftButtons","selection","selectHandler","selectClasses","selectText","defaultSelect","Input","Label","LabelPrimitive.Root","Checkbox","CheckboxPrimitive.Root","CheckboxPrimitive.Indicator","Check","Dropdown","containerClassName","currentOption","Listbox","item","i","ScreenshotContext","useScreenshot","takeScreenShot","node","html2canvas","canvas","croppedCanvas","croppedCanvasContext","cropPositionTop","cropPositionLeft","cropWidth","cropHeight","ScreenshotProvider","cleanupPreset","_preset","ExportModel","onOpenChange","captureScreenshot","filename","setFileName","setType","includeOptions","setIncludeOptions","exportBranches","setExportBranches","recursive","setRecursive","getSiblingIdx","messageId","typeOptions","filenamify","_setType","newType","exportBranchesSupport","exportOptionsSupport","buildMessageTree","branches","siblingIdx","ret","_message","child","exportScreenshot","download","exportCSV","exportFromJSON","entries","exportMarkdown","exportText","exportJSON","exportConversation","defaultTextProps","ClearConvos","clearConvosMutation","DarkModeIcon","LightModeIcon","getInitialTheme","storedPrefs","ThemeContext","ThemeProvider","initialTheme","theme","setTheme","rawSetTheme","rawTheme","root","isDark","DarkMode","mode","LogOutIcon","Logout","handleLogout","DotsIcon","NavLinks","showExports","setShowExports","showClearConvos","setShowClearConvos","exportable","Menu","Transition","Download","useDebounce","delay","debouncedValue","setDebouncedValue","Nav","navVisible","setNavVisible","isHovering","setIsHovering","containerRef","scrollPositionRef","setConversations","setPageNumber","setPages","getConversationsQuery","searchPlaceholderConversation","setSearchResultMessages","isFetching","setIsFetching","debouncedSearchTerm","searchQueryFn","onSearchSuccess","expectedPage","container","a","b","toggleNavVisible","isMobile","userAgent","containerClasses","MobileNav","Root","setIsSearchEnabled","setEndpointsConfig","setPresets","searchEnabledQuery","endpointsQuery","presetsQuery","Outlet","useDocumentTitle","prevailOnUnmount","SunIcon","LightningIcon","CautionIcon","Landing","setText","innerText","quote","ScrollToBottom","scrollHandler","SubRow","classes","subclasses","onClick","Clipboard","CodeBlock","lang","codeChildren","codeRef","CodeBar","React","isCopied","setIsCopied","codeString","langSubset","Content","content","rehypePlugins","rehypeKatex","rehypeHighlight","rehypeRaw","ReactMarkdown","remarkGfm","remarkMath","code","p","inline","match","EditIcon","Regenerate","HoverButtons","isEditting","enterEdit","copyToClipboard","regenerate","branchingSupported","editEnabled","regenerateEnabled","RegenerateIcon","SiblingSwitch","siblingCount","setSiblingIdx","previous","next","GPTIcon","button","menu","unit","height","width","BingIcon","getIcon","isCreatedByUser","model","icon","bg","name","chatGptLabel","modelLabel","jailbreak","useMessageHandler","ask","parentMessageId","responseSender","_g","_i","_h","_j","currentMessages","fakeMessageId","v4","currentMsg","isJson","str","Message","scrollToBottom","currentEditId","setCurrentEditId","searchResult","submitting","unfinished","setLatestMessage","abortScroll","setAbort","textEditor","last","edit","blinker","getConversationQuery","cancel","handleWheel","getError","errorMessage","json","resubmitMessage","regenerateMessage","copy","clickSearchResult","MultiMessage","isSearchView","setSiblingIdxRev","SaveAsPresetDialog","setTitle","createPresetMutation","submitPreset","SelectDropDown","disabled","setValue","availableValues","showAbove","showLabel","option","Slider","doubleClickHandler","SliderPrimitive.Root","SliderPrimitive.Track","SliderPrimitive.Range","SliderPrimitive.Thumb","useDoubleClick","InputNumber","RCInputNumber","HoverCard","HoverCardPrimitive.Root","HoverCardTrigger","HoverCardPrimitive.Trigger","HoverCardPortal","HoverCardPrimitive.Portal","HoverCardContent","align","sideOffset","HoverCardPrimitive.Content","types","OptionHover","side","optionText","Settings","readonly","promptPrefix","temperature","topP","freqP","presP","setOption","setModel","setChatGptLabel","setPromptPrefix","setTemperature","setTopP","setFreqP","setPresP","models","TextareaAutosize","systemMessage","toneStyle","tokenCount","setTokenCount","showSystemMessage","setContext","setSystemMessage","setJailbreak","setToneStyle","debouncedContext","updateTokenCountMutation","topK","maxOutputTokens","maxHeight","setModelLabel","setTopK","setMaxOutputTokens","OpenAISettings","BingAISettings","GoogleSettings","EndpointOptionsDialog","setPreset","endpointName","setEndpointName","saveAsDialogShow","setSaveAsDialogShow","param","newValue","update","saveAsPreset","exportPreset","MessageHeader","getConversationTitle","_title","Messages","showScrollButton","setShowScrollButton","scrollableRef","messagesEndRef","_messagesTree","screenshotTargetRef","timeoutId","scrollTop","scrollHeight","clientHeight","diff","percent","hasScrollbar","handleScroll","useCallback","throttle","debouncedHandleScroll","CSSTransition","StopGeneratingIcon","FileUpload","onFileSelected","successText","invalidText","validator","statusColor","setStatusColor","status","setStatus","handleFileChange","file","reader","jsonData","FileUp","InputWithLabel","label","SetTokenDialog","showPanel","setShowPanel","submit","oldToken","helpText","getAzure","setAzure","newToken","credentials","Checkbox.Root","Checkbox.Indicator","CheckIcon","SubmitButton","submitMessage","handleStopGenerating","setTokenDialogOpen","setSetTokenDialogOpen","isTokenProvided","EndpointOptionsPopover","visible","switchToSimpleMode","additionalButton","cardStyle","Save","OpenAIOptions","advancedMode","setAdvancedMode","top_p","presence_penalty","frequency_penalty","triggerAdvancedMode","Settings2","ChatGPTOptions","Tabs","TabsPrimitive.Root","TabsList","TabsPrimitive.List","TabsTrigger","TabsPrimitive.Trigger","TabsContent","TabsPrimitive.Content","BingAIOptions","show","defaultClasses","defaultSelected","selectedClass","val","MessagesSquared","Examples","examples","setExample","addExample","removeExample","example","Minus","Plus","GoogleOptions","showExamples","setShowExamples","triggerExamples","current","currentExample","EditPresetDialog","fileName","DropdownMenu","DropdownMenuPrimitive.Root","DropdownMenuTrigger","DropdownMenuPrimitive.Trigger","DropdownMenuRadioGroup","DropdownMenuPrimitive.RadioGroup","DropdownMenuSubTrigger","inset","DropdownMenuPrimitive.SubTrigger","ChevronRight","DropdownMenuSubContent","DropdownMenuPrimitive.SubContent","DropdownMenuContent","DropdownMenuPrimitive.Portal","DropdownMenuPrimitive.Content","DropdownMenuItem","DropdownMenuPrimitive.Item","DropdownMenuCheckboxItem","checked","DropdownMenuPrimitive.CheckboxItem","DropdownMenuPrimitive.ItemIndicator","DropdownMenuRadioItem","DropdownMenuPrimitive.RadioItem","Circle","DropdownMenuLabel","DropdownMenuPrimitive.Label","DropdownMenuSeparator","DropdownMenuPrimitive.Separator","alternateName","ModelItem","isUserProvided","EndpointItems","onSelect","EndpointItem","PresetItem","onChangePreset","onDeletePreset","getPresetTitle","PresetItems","NewConversationMenu","menuOpen","setMenuOpen","showPresets","setShowPresets","showEndpoints","setShowEndpoints","presetModelVisible","setPresetModelVisible","deletePresetsMutation","importPreset","jsonPreset","isInvalidConversation","onSelectEndpoint","newEndpoint","onSelectPreset","newPreset","clearAllPresets","Trash2","AdjustButton","Footer","aJson","act","selectedAct","prompt","userInput","TextChat","isComposing","stopGenerating","showBingToneSetting","setShowBingToneSetting","isNotAppendable","handleCompositionStart","handleCompositionEnd","changeHandler","getPlaceholderText","handleBingToneSetting","AdjustToneButton","Chat","useParams","messagesQuery","getConversationMutation","query","Login","handleSubmit","errors","useForm","showGoogleLogin","Registration","watch","setErrorMessage","registerUser","password","onRegisterUserFormSubmit","RequestPasswordReset","success","setSuccess","requestError","setRequestError","resetLink","setResetLink","onSubmit","ResetPassword","resetError","setResetError","params","useSearchParams","ApiErrorBoundaryContext","ApiErrorBoundaryProvider","useApiErrorBoundary","ApiErrorWatcher","AuthLayout","router","createBrowserRouter","Navigate","App","QueryClient","QueryCache","QueryClientProvider","RecoilRoot","RouterProvider","ReactQueryDevtools","App$1","createRoot"],"mappings":"ykDAKA,IAAIA,GAAM,SAAUC,EAAKC,EAAS,CAChC,GAAI,EAAE,gBAAgBF,IACpB,OAAO,IAAIA,GAAIC,EAAKC,CAAO,EAG7B,KAAK,aAAe,GACpB,KAAK,WAAa,EAClB,KAAK,KAAO,EACZ,KAAK,OAAS,EAEd,KAAK,IAAMD,EAEXC,EAAUA,GAAW,GACrB,KAAK,QAAUA,EAAQ,SAAW,CAAA,EAClC,KAAK,QAAUA,EAAQ,UAAY,OAAYA,EAAQ,QAAU,GACjE,KAAK,OAASA,EAAQ,QAAW,KAAK,SAAW,QAAU,MAC3D,KAAK,gBAAkB,CAAC,CAACA,EAAQ,gBAEjC,KAAK,gBAAkB,IACvB,KAAK,UAAY,GAEjB,KAAK,IAAM,KACX,KAAK,WAAa,KAAK,aACvB,KAAK,SAAW,EAChB,KAAK,MAAQ,GAEb,KAAK,iBAAmB,SAASC,EAAMC,EAAU,CAC3C,KAAK,UAAUD,CAAI,IAAM,SAC3B,KAAK,UAAUA,CAAI,EAAI,IAGrB,KAAK,UAAUA,CAAI,EAAE,QAAQC,CAAQ,IAAM,IAC7C,KAAK,UAAUD,CAAI,EAAE,KAAKC,CAAQ,CAExC,EAEE,KAAK,oBAAsB,SAASD,EAAMC,EAAU,CAClD,GAAI,KAAK,UAAUD,CAAI,IAAM,OAI7B,KAAIE,EAAW,CAAA,EACf,KAAK,UAAUF,CAAI,EAAE,QAAQ,SAASG,EAAS,CACzCA,IAAYF,GACdC,EAAS,KAAKC,CAAO,CAE7B,CAAK,EACGD,EAAS,SAAW,EACtB,OAAO,KAAK,UAAUF,CAAI,EAE1B,KAAK,UAAUA,CAAI,EAAIE,EAE7B,EAEE,KAAK,cAAgB,SAASE,EAAG,CAC/B,GAAI,CAACA,EACH,MAAO,GAGTA,EAAE,OAAS,KAEX,IAAIC,EAAY,KAAOD,EAAE,KACzB,OAAI,KAAK,eAAeC,CAAS,IAC/B,KAAKA,CAAS,EAAE,KAAK,KAAMD,CAAC,EACxBA,EAAE,kBACG,GAIP,KAAK,UAAUA,EAAE,IAAI,EAChB,KAAK,UAAUA,EAAE,IAAI,EAAE,MAAM,SAASE,EAAU,CACrD,OAAAA,EAASF,CAAC,EACH,CAACA,EAAE,gBAClB,CAAO,EAGI,EACX,EAEE,KAAK,eAAiB,SAASG,EAAO,CACpC,IAAIC,EAAQ,IAAI,YAAY,kBAAkB,EAC9CA,EAAM,WAAaD,EACnB,KAAK,WAAaA,EAClB,KAAK,cAAcC,CAAK,CAC5B,EAEE,KAAK,iBAAmB,SAASJ,EAAG,CAClC,IAAII,EAAQ,IAAI,YAAY,OAAO,EACnCA,EAAM,KAAOJ,EAAE,cAAc,SAC7B,KAAK,cAAcI,CAAK,EACxB,KAAK,MAAK,CACX,EAED,KAAK,eAAiB,SAASJ,EAAG,CAChC,KAAK,cAAc,IAAI,YAAY,OAAO,CAAC,EAC3C,KAAK,MAAK,CACX,EAED,KAAK,kBAAoB,SAASA,EAAG,CACnC,GAAK,KAAK,IAIV,IAAI,KAAK,IAAI,SAAW,IAAK,CAC3B,KAAK,iBAAiBA,CAAC,EACvB,OAGE,KAAK,YAAc,KAAK,aAC1B,KAAK,cAAc,IAAI,YAAY,MAAM,CAAC,EAC1C,KAAK,eAAe,KAAK,IAAI,GAG/B,IAAIK,EAAO,KAAK,IAAI,aAAa,UAAU,KAAK,QAAQ,EACxD,KAAK,UAAYA,EAAK,OACtBA,EAAK,MAAM,kBAAkB,EAAE,QAAQ,SAASC,EAAM,CAChDA,EAAK,OAAO,SAAW,GACzB,KAAK,cAAc,KAAK,iBAAiB,KAAK,MAAM,KAAM,CAAA,CAAC,EAC3D,KAAK,MAAQ,IAEb,KAAK,OAASA,CAEtB,EAAM,KAAK,IAAI,CAAC,EAChB,EAEE,KAAK,gBAAkB,SAASN,EAAG,CACjC,KAAK,kBAAkBA,CAAC,EAGxB,KAAK,cAAc,KAAK,iBAAiB,KAAK,KAAK,CAAC,EACpD,KAAK,MAAQ,EACjB,EAKE,KAAK,iBAAmB,SAASO,EAAO,CACtC,GAAI,CAACA,GAASA,EAAM,SAAW,EAC7B,OAAO,KAGT,IAAIP,EAAI,CAAC,GAAM,KAAM,MAAS,KAAM,KAAQ,GAAI,MAAS,SAAS,EAClEO,EAAM,MAAM,YAAY,EAAE,QAAQ,SAASC,EAAM,CAC/CA,EAAOA,EAAK,YACZ,IAAIC,EAAQD,EAAK,QAAQ,KAAK,eAAe,EAC7C,GAAI,EAAAC,GAAS,GAMb,KAAIC,EAAQF,EAAK,UAAU,EAAGC,CAAK,EACnC,GAAMC,KAASV,EAIf,KAAIW,EAAQH,EAAK,UAAUC,EAAQ,CAAC,EAAE,WAClCC,IAAU,OACZV,EAAEU,CAAK,GAAKC,EAEZX,EAAEU,CAAK,EAAIC,GAEnB,EAAM,KAAK,IAAI,CAAC,EAEZ,IAAIP,EAAQ,IAAI,YAAYJ,EAAE,KAAK,EACnC,OAAAI,EAAM,KAAOJ,EAAE,KACfI,EAAM,GAAKJ,EAAE,GACNI,CACX,EAEE,KAAK,mBAAqB,UAAW,CAC9B,KAAK,KAIN,KAAK,IAAI,aAAe,eAAe,MACzC,KAAK,eAAe,KAAK,MAAM,CAErC,EAEE,KAAK,OAAS,UAAW,CACvB,KAAK,eAAe,KAAK,UAAU,EAEnC,KAAK,IAAM,IAAI,eACf,KAAK,IAAI,iBAAiB,WAAY,KAAK,kBAAkB,KAAK,IAAI,CAAC,EACvE,KAAK,IAAI,iBAAiB,OAAQ,KAAK,gBAAgB,KAAK,IAAI,CAAC,EACjE,KAAK,IAAI,iBAAiB,mBAAoB,KAAK,mBAAmB,KAAK,IAAI,CAAC,EAChF,KAAK,IAAI,iBAAiB,QAAS,KAAK,iBAAiB,KAAK,IAAI,CAAC,EACnE,KAAK,IAAI,iBAAiB,QAAS,KAAK,eAAe,KAAK,IAAI,CAAC,EACjE,KAAK,IAAI,KAAK,KAAK,OAAQ,KAAK,GAAG,EACnC,QAASQ,KAAU,KAAK,QACtB,KAAK,IAAI,iBAAiBA,EAAQ,KAAK,QAAQA,CAAM,CAAC,EAExD,KAAK,IAAI,gBAAkB,KAAK,gBAChC,KAAK,IAAI,KAAK,KAAK,OAAO,CAC9B,EAEE,KAAK,MAAQ,UAAW,CAClB,KAAK,aAAe,KAAK,SAI7B,KAAK,IAAI,QACT,KAAK,IAAM,KACX,KAAK,eAAe,KAAK,MAAM,EACnC,CACA,ECjNA,SAAwBC,GAAcC,EAAyB,CAC7D,KAAM,CAAE,aAAAC,EAAc,QAAAC,EAAS,eAAAC,CAAA,EAAmBH,EAC5C,CAAE,eAAAI,CAAmB,EAAAH,EACrB,CAAE,SAAAI,CAAa,EAAAF,EAUfG,EARiB,CACrB,YAAa,uBACb,OAAQ,kBACR,OAAQ,kBACR,OAAQ,kBACR,eAAgB,yBAAA,EAGYD,CAAQ,EAEtC,IAAIE,EAAU,CACZ,GAAGL,EACH,GAAGC,EACH,eAAAC,CAAA,EAGK,MAAA,CAAE,OAAAE,EAAQ,QAAAC,EACnB,CCtBA,MAAMC,GAAkBC,EAAK,CAC3B,IAAK,kBACL,QAAS,CACP,YAAa,KACb,OAAQ,KACR,OAAQ,KACR,eAAgB,KAChB,OAAQ,IACT,CACH,CAAC,EAEKC,GAAkBC,GAAS,CAC/B,IAAK,kBACL,IAAK,CAAC,CAAE,IAAAC,KAAU,CAChB,MAAMC,EAASD,EAAIJ,EAAe,GAAK,CAAA,EAEvC,IAAIM,EAAS,CAAA,EACb,UAAWC,KAAO,OAAO,KAAKF,CAAM,EAAGC,EAAOC,CAAG,EAAI,CAAC,CAACF,EAAOE,CAAG,EACjE,OAAOD,CACR,CACH,CAAC,EAEKE,GAAqBL,GAAS,CAClC,IAAK,qBACL,IAAK,CAAC,CAAE,IAAAC,KAAU,CAChB,MAAMK,EAAY,CAAC,cAAe,SAAU,iBAAkB,SAAU,QAAQ,EAC1EC,EAAIN,EAAIF,EAAe,EAC7B,OAAOO,EAAU,OAAQZ,GAAaa,EAAEb,CAAQ,CAAC,CAClD,CACH,CAAC,EAGcY,GAAA,CACb,gBAAAT,GACA,gBAAAE,GACA,mBAAAM,EACF,ECtCMG,GACJ,qNACIC,GACJ,oOAEa,SAASC,GAAUC,EAAUC,EAAW,GAAO,CAC5D,GAAID,IAAa,KAAM,OAAO,KAE9B,IAAIE,EAAa,CAAA,EACbC,EAAe,CAAA,EAEnB,GAAIF,EACF,OAAOD,EAAS,IAAI,CAACI,EAAGC,KAAS,CAAE,GAAGD,EAAG,GAAIC,EAAM,IAAM,EAAIR,GAAOC,EAAG,EAAG,EAE5E,GAAI,CAACG,EAEH,OAAAD,EAAS,QAASpB,GAAY,CAC5BsB,EAAWtB,EAAQ,SAAS,EAAI,CAAE,GAAGA,EAAS,SAAU,CAAA,GAExD,MAAM0B,EAAgBJ,EAAWtB,EAAQ,eAAe,EACpD0B,EAAeA,EAAc,SAAS,KAAKJ,EAAWtB,EAAQ,SAAS,CAAC,EACvEuB,EAAa,KAAKD,EAAWtB,EAAQ,SAAS,CAAC,CAC1D,CAAK,EAEMuB,CAgCX,CCxDA,MAAMI,GAA2B,CAAC,CAChC,aAAA5B,EACA,SAAAI,EACA,gBAAAG,EAAkB,CAAE,EACpB,sBAAAsB,EAAwB,CAAE,CAC5B,IAAM,iBACJ,MAAMC,EAAoB,KAAK,MAAM,aAAa,QAAQ,mBAAmB,CAAC,GAAK,GAEnF,OAAI1B,IAAa,eAAiBA,IAAa,SAC7CJ,EAAe,CACb,GAAGA,EACH,SAAAI,EACA,OACEyB,GAAA,YAAAA,EAAuB,QACvBC,EAAkB1B,CAAQ,KAC1B2B,GAAAC,EAAAzB,EAAgBH,CAAQ,IAAxB,YAAA4B,EAA2B,kBAA3B,YAAAD,EAA6C,KAC7C,gBACF,cAAcF,GAAA,YAAAA,EAAuB,eAAgB,KACrD,cAAcA,GAAA,YAAAA,EAAuB,eAAgB,KACrD,aAAaA,GAAA,YAAAA,EAAuB,cAAe,EACnD,OAAOA,GAAA,YAAAA,EAAuB,QAAS,EACvC,kBAAkBA,GAAA,YAAAA,EAAuB,mBAAoB,EAC7D,mBAAmBA,GAAA,YAAAA,EAAuB,oBAAqB,CACrE,EACazB,IAAa,SACtBJ,EAAe,CACb,GAAGA,EACH,SAAAI,EACA,OACEyB,GAAA,YAAAA,EAAuB,QACvBC,EAAkB1B,CAAQ,KAC1B6B,GAAAC,EAAA3B,EAAgBH,CAAQ,IAAxB,YAAA8B,EAA2B,kBAA3B,YAAAD,EAA6C,KAC7C,aACF,YAAYJ,GAAA,YAAAA,EAAuB,aAAc,KACjD,cAAcA,GAAA,YAAAA,EAAuB,eAAgB,KACrD,UAAUA,GAAA,YAAAA,EAAuB,WAAY,CAC3C,CAAE,MAAO,CAAE,QAAS,EAAE,EAAI,OAAQ,CAAE,QAAS,GAAM,CACpD,EACD,aAAaA,GAAA,YAAAA,EAAuB,cAAe,GACnD,iBAAiBA,GAAA,YAAAA,EAAuB,kBAAmB,KAC3D,MAAMA,GAAA,YAAAA,EAAuB,OAAQ,IACrC,MAAMA,GAAA,YAAAA,EAAuB,OAAQ,EAC3C,EACazB,IAAa,SACtBJ,EAAe,CACb,GAAGA,EACH,SAAAI,EACA,WAAWyB,GAAA,YAAAA,EAAuB,YAAa,GAC/C,SAASA,GAAA,YAAAA,EAAuB,UAAW,KAC3C,eAAeA,GAAA,YAAAA,EAAuB,gBAAiB,KACvD,WAAWA,GAAA,YAAAA,EAAuB,YAAa,WAC/C,yBAAyBA,GAAA,YAAAA,EAAuB,0BAA2B,KAC3E,sBAAuB,KACvB,SAAU,KACV,aAAc,CACpB,EACazB,IAAa,iBACtBJ,EAAe,CACb,GAAGA,EACH,SAAAI,EACA,OACEyB,GAAA,YAAAA,EAAuB,QACvBC,EAAkB1B,CAAQ,KAC1B+B,GAAAC,EAAA7B,EAAgBH,CAAQ,IAAxB,YAAAgC,EAA2B,kBAA3B,YAAAD,EAA6C,KAC7C,6BACR,EACa/B,IAAa,KACtBJ,EAAe,CACb,GAAGA,EACH,SAAAI,CACN,GAEI,QAAQ,MAAM,oBAAoBA,GAAU,EAC5CJ,EAAe,CACb,GAAGA,EACH,SAAU,IAChB,GAGSA,CACT,EAEMqC,GAAyB,CAAC,CAAE,aAAArC,EAAc,gBAAAO,EAAiB,OAAA+B,CAAM,IAAO,CAC5E,KAAM,CAAE,SAAUC,GAAmBD,GAAU,CAAA,EAE/C,GAAIC,EAAgB,CAElB,MAAMnC,EAAWmC,EACjB,GAAIhC,GAAA,MAAAA,EAAkBH,GACpB,OAAAJ,EAAe4B,GAAyB,CACtC,aAAA5B,EACA,SAAAI,EACA,sBAAuBkC,EACvB,gBAAA/B,CACR,CAAO,EACMP,EAEP,QAAQ,IAAII,CAAQ,EACpB,QAAQ,KAAK,2BAA2BmC,KAAkBhC,GAAiB,EAkB/E,GAAI,CAEF,MAAMsB,EAAwB,KAAK,MAAM,aAAa,QAAQ,uBAAuB,CAAC,EAChF,CAAE,SAAAzB,EAAW,IAAM,EAAGyB,EAE5B,GAAItB,GAAA,MAAAA,EAAkBH,GACpB,OAAAJ,EAAe4B,GAAyB,CAAE,aAAA5B,EAAc,SAAAI,EAAU,gBAAAG,CAAiB,CAAA,EAC5EP,CAEV,OAAQwC,EAAP,CACA,QAAQ,MAAMA,CAAK,CACpB,CAID,MAAMpC,EAAW,CAAC,SAAU,cAAe,SAAU,iBAAkB,QAAQ,EAAE,KAC9EnB,GAAMsB,GAAA,YAAAA,EAAkBtB,EAC7B,EACE,OAAImB,GACFJ,EAAe4B,GAAyB,CAAE,aAAA5B,EAAc,SAAAI,EAAU,gBAAAG,CAAiB,CAAA,EAC5EP,IAEPA,EAAe4B,GAAyB,CAAE,aAAA5B,EAAc,SAAU,KAAM,gBAAAO,CAAe,CAAE,EAClFP,EAEX,ECtHMD,GAAaS,EAAK,CACtB,IAAK,aACL,QAAS,IACX,CAAC,EAEKiC,GAAejC,EAAK,CACxB,IAAK,eACL,QAAS,EACX,CAAC,EAEckC,GAAA,CACb,WAAA3C,GACA,aAAA0C,EACF,ECKMzC,GAAeQ,EAAK,CACxB,IAAK,eACL,QAAS,IACX,CAAC,EAKKa,GAAWb,EAAK,CACpB,IAAK,WACL,QAAS,CAAE,CACb,CAAC,EAEKmC,GAAejC,GAAS,CAC5B,IAAK,eACL,IAAK,CAAC,CAAE,IAAAC,KACCS,GAAUT,EAAIU,EAAQ,EAAG,EAAK,CAEzC,CAAC,EAEKuB,GAAgBpC,EAAK,CACzB,IAAK,gBACL,QAAS,IACX,CAAC,EAEKqC,GAA2BC,GAAW,CAC1C,IAAK,qBACL,QAAS,CACX,CAAC,EAEKC,GAAkB,IAAM,CAC5B,MAAMC,EAAkBC,EAAkBjD,EAAY,EAChDkD,EAAcD,EAAkB5B,EAAQ,EACxC8B,EAAgBF,EAAkBlD,GAAW,UAAU,EACvDqD,EAAqBC,GAAoBT,EAAa,EAEtDU,EAAuBC,GAC3B,CAAC,CAAE,SAAAC,CAAU,IACX,MAAOC,EAAepC,EAAW,KAAMiB,EAAS,OAAS,CACvD,MAAMoB,EAAmB,MAAMF,EAAS,WAAWxD,EAAY,EACzDO,EAAkB,MAAMiD,EAAS,WAAWxC,GAAU,eAAe,EAC3E2C,EAAsBF,EAAepC,EAAUiB,EAAQ,CACrD,gBAAA/B,EACA,iBAAAmD,CACV,CAAS,CACF,EACH,CAAE,CACN,EAEQC,EAAwB,CAC5B3D,EACAqB,EAAW,KACXiB,EAAS,KACT,CAAE,gBAAA/B,EAAkB,CAAA,EAAI,iBAAAmD,EAAmB,EAAI,IAC5C,CACH,GAAI,CAAE,SAAAtD,EAAW,IAAM,EAAGJ,EAEtBI,IAAa,OAEfJ,EAAeqC,GAAuB,CACpC,aAAArC,EACA,gBAAAO,EACA,iBAAAmD,EACA,OAAApB,CACR,CAAO,GAEHU,EAAgBhD,CAAY,EAC5BkD,EAAY7B,CAAQ,EACpB8B,EAAc,CAAE,CAAA,EAChBC,GACJ,EAwBE,MAAO,CAAE,gBAtBe,CAACQ,EAAW,CAAA,EAAItB,IAAW,CACjDgB,EACE,CACE,eAAgB,MAChB,MAAO,OACP,GAAGM,CACJ,EACD,CAAE,EACFtB,CACN,CACA,EAY4B,qBAAAgB,EAAsB,8BAVV,IAAM,CAC1CA,EACE,CACE,eAAgB,SAChB,MAAO,IACR,EACD,CAAE,CACR,CACA,EAGA,EAEeO,GAAA,CACb,aAAA7D,GACF,SAAEqB,GACA,aAAAsB,GACA,cAAAC,GACA,yBAAAC,GACA,gBAAAE,EACF,ECvIMe,GAA2BtD,EAAK,CACpC,IAAK,2BACL,QAAS,CACX,CAAC,EAEKuD,GAAmB,IAAM,CAC7B,MAAMC,EAA8Bf,EAAkBa,EAAwB,EAI9E,MAAO,CAAE,qBAFoB,IAAME,EAA6BC,GAAcA,EAAY,CAAC,CAE9D,CAC/B,EAEAC,GAAe,CAAE,yBAAAJ,GAA0B,iBAAAC,EAAkB,ECrBvDI,GAAO3D,EAAK,CAChB,IAAK,OACL,QAAS,IACX,CAAC,EAEc4D,GAAA,CACf,KAAED,EACF,ECPME,GAAO7D,EAAK,CAChB,IAAK,OACL,QAAS,EACX,CAAC,EAEc8D,GAAA,CAAE,KAAAD,EAAM,ECJjBE,GAAkB/D,EAAK,CAC3B,IAAK,kBACL,QAAS,IACX,CAAC,EAEKgE,GAAchE,EAAK,CACvB,IAAK,cACL,QAAS,EACX,CAAC,EAEKiE,GAAuBjE,EAAK,CAChC,IAAK,uBACL,QAAS,IACX,CAAC,EAEKkE,GAA2BhE,GAAS,CACxC,IAAK,2BACL,IAAK,CAAC,CAAE,IAAAC,KACCS,GAAUT,EAAI8D,EAAoB,EAAG,EAAI,CAEpD,CAAC,EAEKE,GAAcjE,GAAS,CAC3B,IAAK,cACL,IAAK,CAAC,CAAE,IAAAC,KAEC,CAAC,CADKA,EAAI6D,EAAW,CAGhC,CAAC,EAEcI,GAAA,CACb,gBAAAL,GACA,YAAAI,GACA,qBAAAF,GACA,yBAAAC,GACA,YAAAF,EACF,ECVMK,GAAUrE,EAAK,CACnB,IAAK,UACL,QAAS,CAAE,CACb,CAAC,EAEc8B,GAAA,CACf,QAAEuC,EACF,EClCMC,GAAoBtE,EAAK,CAC7B,IAAK,oBACL,QAAS,CACX,CAAC,EAEKuE,GAAY3E,GAAa,CAC7B,KAAM,CAAC4E,EAAOC,CAAQ,EAAIC,EAAeJ,EAAiB,EACpDK,EAAW,IAAM,aAAa,QAAQ,GAAG/E,SAAgB,EACzDgF,EAAaxF,GAAU,CAC3B,aAAa,QAAQ,GAAGQ,UAAkBR,CAAK,EAC/CqF,EAAUI,GAASA,EAAO,CAAC,CAC/B,EAEE,MAAO,CAAE,MAAOF,EAAU,EAAE,SAAAA,EAAU,UAAAC,CAAS,CACjD,EAEeE,GAAA,CACb,SAAAP,EACF,ECVeQ,EAAA,CACb,GAAGvF,GACH,GAAGwF,GACH,GAAGxE,GACH,GAAGmD,GACH,GAAGE,GACH,GAAGtE,GACH,GAAG0F,GACH,GAAGnD,GACH,GAAGgD,EACL,EClBA,eAAeI,GAAQ/G,EAAaC,EAA0C,CAE5E,OADiB,MAAM+G,GAAM,IAAIhH,EAAK,CAAE,GAAGC,EAAS,GACpC,IAClB,CAEA,eAAegH,GAAMjH,EAAaW,EAAY,CAI5C,OAHiB,MAAMqG,GAAM,KAAKhH,EAAK,KAAK,UAAUW,CAAI,EAAG,CAC3D,QAAS,CAAE,eAAgB,kBAAmB,CAAA,CAC/C,GACe,IAClB,CAEA,eAAeuG,GAAelH,EAAamH,EAAoBlH,EAA8B,CAK3F,OAJiB,MAAM+G,GAAM,KAAKhH,EAAKmH,EAAU,CAC/C,GAAGlH,EACH,QAAS,CAAE,eAAgB,qBAAsB,CAAA,CAClD,GACe,IAClB,CAEA,eAAemH,GAAKpH,EAAaW,EAAY,CAI3C,OAHiB,MAAMqG,GAAM,IAAIhH,EAAK,KAAK,UAAUW,CAAI,EAAG,CAC1D,QAAS,CAAE,eAAgB,kBAAmB,CAAA,CAC/C,GACe,IAClB,CAEA,eAAe0G,GAAWrH,EAAyB,CAEjD,OADiB,MAAMgH,GAAM,OAAOhH,CAAG,GACvB,IAClB,CAEA,eAAesH,GAAsBtH,EAAaC,EAA0C,CAE1F,OADiB,MAAM+G,GAAM,OAAOhH,EAAK,CAAE,GAAGC,EAAS,GACvC,IAClB,CAEA,eAAesH,GAAOvH,EAAaW,EAAY,CAI7C,OAHiB,MAAMqG,GAAM,MAAMhH,EAAK,KAAK,UAAUW,CAAI,EAAG,CAC5D,QAAS,CAAE,eAAgB,kBAAmB,CAAA,CAC/C,GACe,IAClB,CAEA,MAAe6G,EAAA,CACb,IAAKT,GACL,KAAME,GACN,cAAeC,GACf,IAAKE,GACL,OAAQC,GACR,kBAAmBC,GACnB,MAAOC,EACT,ECtDa/B,GAAO,IACX,iBAGI9C,GAAY+E,GAChB,iBAAiBA,IAObZ,GAAiBa,GACrB,0BAA0BA,IAGtBC,GAAoBF,GACxB,eAAeA,IAGXG,GAAqB,IACzB,qBAGIC,GAAqB,IACzB,oBAGIf,GAAS,CAACgB,EAAWJ,IACzB,iBAAiBI,gBAAgBJ,IAG7BK,GAAgB,IACpB,qBAGI7B,GAAU,IACd,eAGI8B,GAAe,IACnB,sBAGIC,GAAc,IAClB,iBAGIC,GAAY,IAChB,iBAGIC,GAAQ,IACZ,kBAGIC,GAAS,IACb,mBAGIC,GAAW,IACf,qBAWIC,GAAe,IACnB,oBAGIC,GAAuB,IAC3B,iCAGIC,GAAgB,IACpB,0BC7EF,SAASC,GAAiBf,EAA0D,CACzF,OAAOF,EAAQ,IAAIkB,GAAwBhB,CAAU,CAAC,CACxD,CAUO,SAASG,GAAmBlG,EAAuC,CAEjE,OAAA6F,EAAQ,KAAKmB,GAAU,EAAsB,CAAE,IAAKhH,EAAS,CACtE,CAEO,SAASiH,IAA0C,CACjD,OAAApB,EAAQ,KAAKmB,GAAU,EAAsB,CAAE,IAAK,CAAC,CAAA,CAAG,CACjE,CAEO,SAASE,GAAqBpB,EAAmC,CACtE,OAAOD,EAAQ,IAAIsB,GAAmBrB,CAAE,CAAC,CAC3C,CAEO,SAASsB,GAAoBtB,EAAsC,CACxE,OAAOD,EAAQ,IAAIwB,GAA2BvB,CAAE,CAAC,CACnD,CAEO,SAASG,GACdjG,EACwC,CACjC,OAAA6F,EAAQ,KAAKyB,GAAU,EAAsB,CAAE,IAAKtH,EAAS,CACtE,CAEO,SAASuH,IAAmC,CACjD,OAAO1B,EAAQ,IAAI2B,GAAU,CAAS,CACxC,CAEO,SAASC,GAAazH,EAA0C,CACrE,OAAO6F,EAAQ,KAAK2B,KAAqBxH,CAAO,CAClD,CAMO,SAASqG,GAAaqB,EAA2C,CACtE,OAAO7B,EAAQ,KAAK8B,KAA0BD,CAAG,CACnD,CAEO,SAASE,IAAqC,CACnD,OAAO/B,EAAQ,IAAIgC,GAAU,CAAe,CAC9C,CAEO,SAASC,IAA4B,CAC1C,OAAOjC,EAAQ,IAAIkC,GAAU,CAAM,CACrC,CAEa,MAAAC,GAAsB,MACjC7B,EACAJ,IAEOF,EAAQ,IAAIoC,GAAiB9B,EAAGJ,CAAU,CAAC,EAGvCmC,GAAiB,IACrBrC,EAAQ,IAAIsC,GAAU,CAAa,EAG/BC,GAAoBrE,GACxB8B,EAAQ,KAAKwC,GAAU,EAAa,CAAE,IAAKtE,EAAM,EAG7CyC,GAASxG,GACb6F,EAAQ,KAAKyC,KAAmBtI,CAAO,EAGnCyG,GAAS,IACbZ,EAAQ,KAAK0C,GAAU,CAAQ,EAG3B7B,GAAY1G,GAChB6F,EAAQ,KAAK2C,KAAsBxI,CAAO,EAGtC2G,GAAe,IACnBd,EAAQ,KAAK4C,GAAU,CAAc,EAOjC7B,GAAwB5G,GAC5B6F,EAAQ,KAAK6C,KAAkC1I,CAAO,EAGlD6G,GAAiB7G,GACrB6F,EAAQ,KAAK8C,KAA2B3I,CAAO,ECrE3C4I,GACXtI,GAEOuI,GAAkB,CAAC,QAAiB,IAAMC,KAAuB,CACtE,qBAAsB,GACtB,mBAAoB,GACpB,eAAgB,GAChB,MAAO,GACP,GAAGxI,CAAA,CACJ,EAGUyI,GAA0B,CACrCjD,EACAxF,IAEOuI,GACL,CAAC,YAAoB/C,CAAE,EACvB,IAAMkD,GAAiClD,CAAE,EACzC,CACE,qBAAsB,GACtB,mBAAoB,GACpB,eAAgB,GAChB,GAAGxF,CACL,CAAA,EAIS2I,GAA8B,CACzCnD,EACAxF,IAEOuI,GACL,CAAC,eAAwB/C,CAAE,EAC3B,IAAMoD,GAAgCpD,CAAE,EACxC,CACE,qBAAsB,GACtB,mBAAoB,GACpB,eAAgB,GAChB,GAAGxF,CACL,CAAA,EAMS6I,GAAkCrD,GAAmD,CAChG,MAAMsD,EAAcC,KACpB,OAAOC,EAAY,IAAMJ,GAAgCpD,CAAE,EAAG,CAC5D,UAAYyD,GAAyB,CACnCH,EAAY,kBAAkB,CAAC,eAAwBtD,CAAE,CAAC,CAC5D,CAAA,CACD,CACH,EAEa0D,GACX1D,GAMG,CACH,MAAMsD,EAAcC,KACb,OAAAC,EACJtJ,GAA0CyJ,GAA+BzJ,CAAO,EACjF,CACE,UAAW,IAAM,CACfoJ,EAAY,kBAAkB,CAAC,eAAwBtD,CAAE,CAAC,EAC9CsD,EAAA,kBAAkB,CAAC,kBAAA,CAA2B,CAC5D,CACF,CAAA,CAEJ,EAEaM,GACX5D,GAMG,CACH,MAAMsD,EAAcC,KACb,OAAAC,EACJtJ,GAA0C2J,GAA+B3J,CAAO,EACjF,CACE,UAAW,IAAM,CACfoJ,EAAY,kBAAkB,CAAC,eAAwBtD,CAAE,CAAC,EAC9CsD,EAAA,kBAAkB,CAAC,kBAAA,CAA2B,CAC5D,CACF,CAAA,CAEJ,EAEaQ,GAAgC,IAAkC,CAC7E,MAAMR,EAAcC,KACpB,OAAOC,EAAY,IAAMO,KAAqC,CAC5D,UAAW,IAAM,CACHT,EAAA,kBAAkB,CAAC,kBAAA,CAA2B,CAC5D,CAAA,CACD,CACH,EAEaU,GAA2B,CACtC/D,EACAzF,IAEOuI,GACL,CAAC,mBAA4B9C,CAAU,EACvC,IAAMgE,GAA6BhE,CAAU,EAC7C,CACE,mBAAoB,GACpB,eAAgB,GAChB,MAAO,EACP,GAAGzF,CACL,CAAA,EAIS0J,GACX1J,GAEOuI,GAAkB,CAAC,iBAA0B,IAAMoB,KAAgC,CACxF,qBAAsB,GACtB,mBAAoB,GACpB,eAAgB,GAChB,GAAG3J,CAAA,CACJ,EAGU4J,GAAuB,IAC3BrB,GAAS,CAAC,aAAsB,IAAMsB,KAA8B,CACzE,qBAAsB,GACtB,mBAAoB,GACpB,eAAgB,EAAA,CACjB,EAGUC,GAA0B,IAKlC,CACH,MAAMhB,EAAcC,KACpB,OAAOC,EAAatJ,GAAuBqK,GAAyBrK,CAAO,EAAG,CAC5E,UAAW,IAAM,CACHoJ,EAAA,kBAAkB,CAAC,SAAA,CAAkB,CACnD,CAAA,CACD,CACH,EAgBakB,GACXhK,GAEOuI,GAAsB,CAAC,WAAoB,IAAM0B,KAA0B,CAChF,qBAAsB,GACtB,mBAAoB,GACpB,eAAgB,GAChB,GAAGjK,CAAA,CACJ,EAGUkK,GAA0B,IAKlC,CACH,MAAMpB,EAAcC,KACpB,OAAOC,EAAatJ,GAA4ByK,GAAyBzK,CAAO,EAAG,CACjF,UAAW,IAAM,CACHoJ,EAAA,kBAAkB,CAAC,SAAA,CAAkB,CACnD,CAAA,CACD,CACH,EAEasB,GAAiB,CAC5BxG,EACA6B,EACAzF,IAEOuI,GACL,CAAC,gBAAyB9C,EAAY7B,CAAW,EACjD,IAAMyG,GAAgCzG,EAAa6B,CAAU,EAC7D,CACE,qBAAsB,GACtB,mBAAoB,GACpB,eAAgB,GAChB,GAAGzF,CACL,CAAA,EAISsK,GAA8B,IAKtC,CACH,MAAMxB,EAAcC,KACpB,OAAOC,EAAavF,GAAiB8G,GAA6B9G,CAAI,EAAG,CACvE,UAAW,IAAM,CACHqF,EAAA,kBAAkB,CAAC,YAAA,CAAqB,CACtD,CAAA,CACD,CACH,EAEa0B,GAAuB,IAK/B,CACH,MAAM1B,EAAcC,KACpB,OAAOC,EAAatJ,GAAiC+K,GAAkB/K,CAAO,EAAG,CAC/E,UAAW,IAAM,CACHoJ,EAAA,kBAAkB,CAAC,MAAA,CAAe,CAChD,CAAA,CACD,CACH,EAEa4B,GAA0B,IAKlC,CACH,MAAM5B,EAAcC,KACpB,OAAOC,EAAatJ,GAA6BiL,GAAqBjL,CAAO,EAAG,CAC9E,UAAW,IAAM,CACHoJ,EAAA,kBAAkB,CAAC,MAAA,CAAe,CAChD,CAAA,CACD,CACH,EAEa8B,GAAwB,IAAkC,CACrE,MAAM9B,EAAcC,KACpB,OAAOC,EAAY,IAAM6B,KAAsB,CAC7C,UAAW,IAAM,CACH/B,EAAA,kBAAkB,CAAC,MAAA,CAAe,CAChD,CAAA,CACD,CACH,EAEagC,GAA0B,IAM9B9B,EAAY,IAAM+B,GAAyB,EAAG,CAAE,CAAA,EAG5CC,GAAkC,IACtChC,EAAatJ,GAClBuL,GAAiCvL,CAAO,CAAA,EAI/BwL,GAA2B,IAC/BlC,EAAatJ,GAA8ByL,GAA0BzL,CAAO,CAAC,EChT/E,SAAS0L,GAAe1G,EAAe,CAC5CK,GAAM,SAAS,QAAQ,OAAO,cAAmB,UAAYL,CAC/D,CC8BA,MAAM2G,GAAcC,EAAAA,cAAwC,MAAS,EAE/DC,GAAsB,CAAC,CAAE,SAAAC,KAAwC,CACrE,KAAM,CAACjI,EAAMkI,CAAO,EAAIC,EAAAA,SAA4B,MAAS,EACvD,CAAChH,EAAOiH,CAAQ,EAAID,EAAAA,SAA6B,MAAS,EAC1D,CAAC9J,EAAOgK,CAAQ,EAAIF,EAAAA,SAA6B,MAAS,EAC1D,CAACG,EAAWC,CAAY,EAAIJ,WAAkB,EAAK,EACnD,CAACK,EAAiBC,CAAkB,EAAIN,WAAkB,EAAK,EAE/DO,EAAWC,KAEXC,EAAY3B,KACZ4B,EAAaxB,KACbyB,EAAY/D,GAAgB,CAAE,QAAS,CAAC,CAAC5D,EAAO,EACjCoG,GAAwB,EAE5BwB,GAAY,EAEvB,MAAAC,EAAkBC,GAA8B,CAC9C,KAAA,CAAE,MAAA9H,EAAO,gBAAAqH,EAAiB,KAAAxI,EAAM,SAAAkJ,CAAa,EAAAD,EAC/CjJ,GACFkI,EAAQlI,CAAI,EAEdoI,EAASjH,CAAK,EACd0G,GAAe1G,CAAK,EACpBsH,EAAmBD,CAAe,EAC9BU,GACFR,EAASQ,CAAQ,CACnB,EAGIC,EAAkBxM,GAAQ,CAC9B,IAAIyM,EAAW,SAAS,OAAO,MAAM,UAAYzM,EAAM,eAAe,EAC/D,OAAAyM,EAAWA,EAAS,CAAC,EAAI,IAAA,EAG5BzG,EAASxH,GAAqB,CAClCyN,EAAU,OAAOzN,EAAM,CACrB,UAAYA,GAAyB,CACnC,KAAM,CAAE,KAAA6E,EAAM,MAAAmB,GAAUhG,EACT6N,EAAA,CAAE,MAAA7H,EAAO,gBAAiB,GAAM,KAAAnB,EAAM,SAAU,WAAA,CAAa,CAC9E,EACA,QAAU3B,GAAU,CAClBgK,EAAShK,EAAM,OAAO,CACxB,CAAA,CACD,CAAA,EAGGuE,EAAS,IAAM,CACnB,SAAS,OAAO,MAAM,GAAG,EAAE,QAASyG,GAAM,CACxC,SAAS,OAASA,EACf,QAAQ,MAAO,EAAE,EACjB,QAAQ,MAAO,aAAmB,IAAA,KAAO,EAAA,YAAA,EAAgB,SAAS,CAAA,CACtE,EACDR,EAAW,OAAO,OAAW,CAC3B,UAAW,IAAM,CACAG,EAAA,CACb,MAAO,OACP,gBAAiB,GACjB,KAAM,OACN,SAAU,QAAA,CACX,CACH,EACA,QAAU3K,GAAU,CAClBgK,EAAShK,EAAM,OAAO,CACxB,CAAA,CACD,CAAA,EAGHiL,EAAAA,UAAU,IAAM,CAUV,GATAR,EAAU,KACZZ,EAAQY,EAAU,IAAI,EACbA,EAAU,UACVT,EAAAS,EAAU,MAAM,OAAO,EAChCJ,EAAS,QAAQ,GAEfrK,GAASmK,GACXH,EAAS,MAAS,EAEhB,CAAClH,GAAS,CAACqH,EAAiB,CACxB,MAAAe,EAAkBJ,EAAe,OAAO,EAC1CI,EAEaP,EAAA,CAAE,MAAOO,EAAiB,gBAAiB,GAAM,KAAMT,EAAU,KAAM,EAEtFJ,EAAS,QAAQ,EAErB,EACC,CAACvH,EAAOqH,EAAiBM,EAAU,KAAMA,EAAU,OAAO,CAAC,EAe9DQ,EAAAA,UAAU,IAAM,CACVV,EAAU,WAAaC,EAAW,UACpCN,EAAa,EAAI,EAEjBA,EAAa,EAAK,GAEnB,CAACK,EAAU,UAAWC,EAAW,SAAS,CAAC,EAQ9C,MAAMW,EAAcC,EAAA,QAClB,KAAO,CACL,KAAAzJ,EACA,MAAAmB,EACA,gBAAAqH,EACA,UAAAF,EACA,MAAAjK,EACA,MAAAsE,EACA,OAAAC,CAAA,GAGF,CAAC5C,EAAMsI,EAAWjK,EAAOmK,EAAiBrH,CAAK,CAAA,EAGjD,aAAQ2G,GAAY,SAAZ,CAAqB,MAAO0B,EAAc,SAAAvB,CAAS,CAAA,CAC7D,EAEMyB,GAAiB,IAAM,CACrB,MAAAC,EAAUC,aAAW9B,EAAW,EAEtC,GAAI6B,IAAY,OACR,MAAA,IAAI,MAAM,mDAAmD,EAG9D,OAAAA,CACT,EC7KA,SAAwBE,IAAiB,CACjC,MAAAjO,EAAakO,EAAe1I,EAAM,UAAU,EAC5C2I,EAAkBjL,EAAkBsC,EAAM,YAAY,EACtDrC,EAAcD,EAAkBsC,EAAM,QAAQ,EAC9CvC,EAAkBC,EAAkBsC,EAAM,YAAY,EACtDnC,EAAqBC,GAAoBkC,EAAM,aAAa,EAC5D,CAAE,MAAAD,GAAUuI,KAEZ,CAAE,qBAAAM,CAAA,EAAyB5I,EAAM,iBAAiB,EAElD6I,EAAiB,CAAC9O,EAAMS,IAAe,CAC3C,KAAM,CAAE,SAAAsB,EAAU,QAAApB,EAAS,gBAAAoO,EAAiB,aAAAC,EAAe,EAAUvO,EAAAA,EAGvDmD,EADVoL,EACU,CACV,GAAGjN,EACH,CACE,GAAGgN,EACH,KAAM/O,EACN,gBAAiBW,GAAA,YAAAA,EAAS,wBAC1B,WAAWA,GAAA,YAAAA,EAAS,yBAA0B,IAC9C,WAAY,EAEd,CAAA,EAGU,CACV,GAAGoB,EACHpB,EACA,CACE,GAAGoO,EACH,KAAM/O,EACN,gBAAiBW,GAAA,YAAAA,EAAS,UAC1B,WAAWA,GAAA,YAAAA,EAAS,WAAY,IAChC,WAAY,EAEd,CAAA,CAZD,CAcH,EAGIsO,EAAgB,CAACjP,EAAMS,IAAe,CAC1C,KAAM,CAAE,SAAAsB,EAAU,aAAAiN,EAAe,EAAA,EAAUvO,EAErC,CAAE,eAAAyO,EAAgB,gBAAAC,EAAiB,aAAAzO,CAAA,EAAiBV,EAIxD4D,EADEoL,EACU,CAAC,GAAGjN,EAAUoN,CAAe,EAE7B,CAAC,GAAGpN,EAAUmN,EAAgBC,CAAe,CAFf,EAI5CP,EAAgB,EAAK,EAGjBM,EAAe,iBAAmB,yCACpC,WAAW,IAAM,CACML,KACpB,GAAI,EAGP,WAAW,IAAM,CACMA,KACpB,GAAI,GAGTnL,EAAiBiB,IAAe,CAC9B,GAAGA,EACH,GAAGjE,CACH,EAAA,CAAA,EAGE0O,EAAiB,CAACpP,EAAMS,IAAe,CAC3C,KAAM,CAAE,SAAAsB,EAAU,QAAApB,EAAS,gBAAAoO,EAAiB,aAAAC,EAAe,EAAUvO,EAAAA,EAGvDmD,EADVoL,EACU,CACV,GAAGjN,EACH,CACE,GAAGgN,EACH,gBAAiBpO,GAAA,YAAAA,EAAS,wBAC1B,WAAWA,GAAA,YAAAA,EAAS,yBAA0B,IAC9C,WAAY,EACd,CAAA,EAGU,CACV,GAAGoB,EACHpB,EACA,CACE,GAAGoO,EACH,gBAAiBpO,GAAA,YAAAA,EAAS,UAC1B,WAAWA,GAAA,YAAAA,EAAS,WAAY,IAChC,WAAY,EACd,CAAA,CAVD,EAaG,KAAA,CAAE,eAAAE,CAAmB,EAAAF,EAC3B+C,EAAiBiB,IAAe,CAC9B,GAAGA,EACH,eAAA9D,CACA,EAAA,EACiBiD,GAAA,EAGfuL,EAAe,CAACrP,EAAMS,IAAe,CACzC,KAAM,CAAE,SAAAsB,EAAU,aAAAiN,EAAe,EAAA,EAAUvO,EAErC,CAAE,eAAAyO,EAAgB,gBAAAC,EAAiB,aAAAzO,CAAA,EAAiBV,EAIxD4D,EADEoL,EACU,CAAC,GAAGjN,EAAUoN,CAAe,EAE7B,CAAC,GAAGpN,EAAUmN,EAAgBC,CAAe,CAFf,EAI5CP,EAAgB,EAAK,EAGjBM,EAAe,iBAAmB,yCACpC,WAAW,IAAM,CACML,KACpB,GAAI,EAGP,WAAW,IAAM,CACMA,KACpB,GAAI,GAGTnL,EAAiBiB,IAAe,CAC9B,GAAGA,EACH,GAAGjE,CACH,EAAA,CAAA,EAGE4O,EAAe,CAACtP,EAAMS,IAAe,CACnC,KAAA,CAAE,SAAAsB,EAAU,QAAApB,CAAYF,EAAAA,EAEtB,QAAA,IAAI,SAAUT,CAAI,EAC1B,MAAMuP,EAAgB,CACpB,GAAGvP,EACH,MAAO,GACP,gBAAiBW,GAAA,YAAAA,EAAS,SAAA,EAE5BiO,EAAgB,EAAK,EACrBhL,EAAY,CAAC,GAAG7B,EAAUpB,EAAS4O,CAAa,CAAC,CACjD,EAGIC,EAAqB3O,GAAmB,CAC5C,QAAQ,IAAIJ,CAAU,EACtB,KAAM,CAAE,SAAAK,CAAa,GAAAL,GAAA,YAAAA,EAAY,eAAgB,CAAA,EAEjD,MAAM,YAAYK,UAAkB,CAClC,OAAQ,OACR,QAAS,CACP,eAAgB,mBAChB,cAAe,UAAUkF,GAC3B,EACA,KAAM,KAAK,UAAU,CACnB,SAAUnF,CAAA,CACX,CAAA,CACF,EACE,KAAM4O,GAAaA,EAAS,MAAM,EAClC,KAAMzP,GAAS,CACN,QAAA,IAAI,UAAWA,CAAI,EAC3BiP,EAAcjP,EAAMS,CAAU,CAAA,CAC/B,EACA,MAAOyC,GAAU,CAChB,QAAQ,MAAM,wBAAwB,EACtC,QAAQ,MAAMA,CAAK,CAAA,CAEpB,CACH,EAGFiL,OAAAA,EAAAA,UAAU,IAAM,CAEd,GADI1N,IAAe,MACf,OAAO,KAAKA,CAAU,EAAE,SAAW,EAAG,OAEtC,GAAA,CAAE,QAAAE,CAAY,EAAAF,EAElB,KAAM,CAAE,OAAAM,EAAQ,QAAAC,CAAQ,EAAIR,GAAcC,CAAU,EAE9CiP,EAAS,IAAItQ,GAAI2B,EAAQ,CAC7B,QAAS,KAAK,UAAUC,CAAO,EAC/B,QAAS,CAAE,eAAgB,mBAAoB,cAAe,UAAUgF,GAAQ,CAAA,CACjF,EAEM,OAAA0J,EAAA,UAAa/P,GAAM,CACxB,MAAMK,EAAO,KAAK,MAAML,EAAE,IAAI,EAM9B,GAJIK,EAAK,QACPqP,EAAarP,EAAM,CAAE,GAAGS,EAAY,QAAAE,CAAS,CAAA,EACrC,QAAA,IAAI,QAASX,CAAI,GAEvBA,EAAK,QACGW,EAAA,CACR,GAAGX,EAAK,QACR,wBAAyBW,GAAA,YAAAA,EAAS,uBAAA,EAEpCyO,EAAepP,EAAM,CAAE,GAAGS,EAAY,QAAAE,CAAS,CAAA,EACvC,QAAA,IAAI,UAAWA,CAAO,MACzB,CACD,IAAAoE,EAAO/E,EAAK,MAAQA,EAAK,SACzBA,EAAK,SAAS,QAAQ,IAAIA,CAAI,EAE9BA,EAAK,SACP8O,EAAe/J,EAAM,CAAE,GAAGtE,EAAY,QAAAE,CAAS,CAAA,EAEnD,EAGF+O,EAAO,OAAS,IAAM,QAAQ,IAAI,sBAAsB,EAExDA,EAAO,SAAW,IAChBF,GAAkB7O,GAAA,YAAAA,EAAS,kBAAkBF,GAAA,YAAAA,EAAY,eAAc,EAElEiP,EAAA,QAAU,SAAU/P,EAAG,CAC5B,QAAQ,IAAI,wBAAwB,EACpC+P,EAAO,MAAM,EAEb,MAAM1P,EAAO,KAAK,MAAML,EAAE,IAAI,EAE9B2P,EAAatP,EAAM,CAAE,GAAGS,EAAY,QAAAE,CAAS,CAAA,CAAA,EAG/CiO,EAAgB,EAAI,EACpBc,EAAO,OAAO,EAEP,IAAM,CACL,MAAAC,EAAcD,EAAO,YAAc,EAGzC,GAFAA,EAAO,MAAM,EAETC,EAAa,CACT,MAAAhQ,EAAI,IAAI,MAAM,QAAQ,EAC5B+P,EAAO,cAAc/P,CAAC,EAExBiP,EAAgB,EAAK,CAAA,CACvB,EACC,CAACnO,CAAU,CAAC,EAER,IACT,CCxPA,SAAwBmP,IAAU,CAChC,KAAM,CAAE,gBAAAC,CAAA,EAAoB5J,EAAM,gBAAgB,EAE5C6J,EAAe,IAAM,CAGTD,GAAA,EAIhB,OAAAE,EAAA,KAAC,IAAA,CACC,QAASD,EACT,UAAU,+KAEV,SAAA,CAAAC,EAAA,KAAC,MAAA,CACC,OAAO,eACP,KAAK,OACL,YAAY,IACZ,QAAQ,YACR,cAAc,QACd,eAAe,QACf,UAAU,UACV,OAAO,MACP,MAAM,MACN,MAAM,6BAEN,SAAA,CAACC,EAAAA,IAAA,OAAA,CAAK,GAAG,KAAK,GAAG,IAAI,GAAG,KAAK,GAAG,IAAK,CAAA,EACrCA,EAAAA,IAAC,QAAK,GAAG,IAAI,GAAG,KAAK,GAAG,KAAK,GAAG,IAAK,CAAA,CAAA,CAAA,CACvC,EAAM,MAAA,CAAA,CAAA,CAIZ,CChCO,SAASC,KAAMC,EAAQ,CACrB,OAAAC,GAAQC,GAAKF,CAAM,CAAC,CAC7B,CCHA,SAAwBG,GAAM,CAAE,KAAAC,EAAO,GAAO,UAAAC,GAAa,CACzD,MAAMC,EACJT,EAAA,KAAC,MAAA,CACC,MAAM,6BACN,MAAM,KACN,OAAO,KACP,QAAQ,YACR,KAAK,OACL,OAAO,eACP,YAAY,MACZ,cAAc,QACd,eAAe,QACf,UAAWE,EAAG,kCAAmCM,CAAS,EAE1D,SAAA,CAAAP,EAAA,IAAC,OAAK,CAAA,MAAM,KAAK,OAAO,KAAK,EAAE,IAAI,EAAE,IAAI,GAAG,IAAI,GAAG,IAAI,EACvDA,EAAAA,IAAC,QAAK,GAAG,KAAK,GAAG,KAAK,GAAG,IAAI,GAAG,IAAK,CAAA,EACrCA,EAAAA,IAAC,OAAK,CAAA,EAAE,cAAe,CAAA,CAAA,CAAA,CAAA,EAIrBS,EACJV,EAAA,KAAC,MAAA,CACC,MAAM,6BACN,MAAM,KACN,OAAO,KACP,QAAQ,YACR,KAAK,OACL,OAAO,eACP,YAAY,MACZ,cAAc,QACd,eAAe,QACf,UAAWE,EAAG,iCAAkCM,CAAS,EAEzD,SAAA,CAAAP,EAAA,IAAC,OAAK,CAAA,MAAM,KAAK,OAAO,KAAK,EAAE,IAAI,EAAE,IAAI,GAAG,IAAI,GAAG,IAAI,EACvDA,EAAAA,IAAC,OAAK,CAAA,EAAE,SAAU,CAAA,EAClBA,EAAAA,IAAC,OAAK,CAAA,EAAE,gBAAiB,CAAA,CAAA,CAAA,CAAA,EAI7B,OAAIM,EACKE,EAEAC,CAEX,CC5CA,SAAwBC,IAAU,CAE9B,OAAAX,EAAA,KAAC,MAAA,CACC,OAAO,eACP,KAAK,OACL,YAAY,IACZ,QAAQ,YACR,cAAc,QACd,eAAe,QACf,UAAU,kCACV,OAAO,MACP,MAAM,MACN,MAAM,6BAEN,SAAA,CAACC,EAAAA,IAAA,OAAA,CAAK,GAAG,KAAK,GAAG,IAAI,GAAG,KAAK,GAAG,GAAI,CAAA,EACpCA,EAAAA,IAAC,QAAK,GAAG,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG,IAAK,CAAA,EACtCA,EAAAA,IAAC,QAAK,GAAG,OAAO,GAAG,OAAO,GAAG,OAAO,GAAG,MAAO,CAAA,EAC9CA,EAAAA,IAAC,QAAK,GAAG,QAAQ,GAAG,QAAQ,GAAG,QAAQ,GAAG,OAAQ,CAAA,EAClDA,EAAAA,IAAC,QAAK,GAAG,IAAI,GAAG,KAAK,GAAG,IAAI,GAAG,IAAK,CAAA,EACpCA,EAAAA,IAAC,QAAK,GAAG,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG,IAAK,CAAA,EACtCA,EAAAA,IAAC,QAAK,GAAG,OAAO,GAAG,QAAQ,GAAG,OAAO,GAAG,OAAQ,CAAA,EAChDA,EAAAA,IAAC,QAAK,GAAG,QAAQ,GAAG,OAAO,GAAG,QAAQ,GAAG,MAAO,CAAA,CAAA,CAAA,CAAA,CAGtD,CCxBA,SAAwBW,GAAM,CAAE,WAAA5J,EAAY,MAAA6J,EAAO,SAAAC,EAAU,aAAAC,GAAgB,CAC3E,MAAMhB,EAAgBiB,GAAS,MAAOpR,GAAM,CAC1CA,EAAE,eAAe,EACjB,MAAMoR,EAAK,CAAA,EAGN,OAAAhK,GAAc,GAAK6J,GAAS,EAAI,KACpCb,EAAA,KAAA,MAAA,CAAI,UAAU,0DACb,SAAA,CAAAC,EAAA,IAAC,SAAA,CACC,QAASF,EAAagB,CAAY,EAClC,UACE,iJACC/J,GAAc,EAAI,qBAAuB,IAE5C,SAAUA,GAAc,EACzB,SAAA,IAAA,CAED,EACAgJ,EAAAA,KAAC,OAAK,CAAA,UAAU,0BACb,SAAA,CAAAhJ,EAAW,MAAI6J,CAAA,EAClB,EACAZ,EAAA,IAAC,SAAA,CACC,QAASF,EAAae,CAAQ,EAC9B,UACE,iJACC9J,GAAc6J,EAAQ,qBAAuB,IAEhD,SAAU7J,GAAc6J,EACzB,SAAA,IAAA,CAED,CACF,CAAA,CAAA,CAEJ,CCjCA,SAAwBI,IAAa,CAEjC,OAAAjB,EAAA,KAAC,MAAA,CACC,OAAO,eACP,KAAK,OACL,YAAY,IACZ,QAAQ,YACR,cAAc,QACd,eAAe,QACf,UAAU,UACV,OAAO,MACP,MAAM,MACN,MAAM,6BAEN,SAAA,CAACC,EAAAA,IAAA,OAAA,CAAK,EAAE,UAAW,CAAA,EACnBA,EAAAA,IAAC,OAAK,CAAA,EAAE,yDAA0D,CAAA,CAAA,CAAA,CAAA,CAGxE,CClBA,SAAwBiB,IAAY,CAEhC,OAAAjB,EAAA,IAAC,MAAA,CACC,OAAO,eACP,KAAK,OACL,YAAY,IACZ,QAAQ,YACR,cAAc,QACd,eAAe,QACf,UAAU,UACV,OAAO,MACP,MAAM,MACN,MAAM,6BAEN,SAAAA,EAAAA,IAAC,WAAS,CAAA,OAAO,gBAAiB,CAAA,CAAA,CAAA,CAGxC,CCfA,SAAwBkB,GAAa,CAAE,SAAAC,EAAU,cAAAC,EAAe,SAAAC,EAAU,MAAAC,GAAS,CAC3E,MAAAC,EAAUJ,EAAWE,EAAWD,EAChCI,EAAY,CAAE,UAAW,wBAC/B,OAAIF,IACFE,EAAU,UAAYF,GAGrBtB,EAAAA,IAAA,SAAA,CAAQ,GAAGwB,EAAW,QAASD,EAC7B,SAAWJ,EAAAnB,EAAAA,IAACiB,GAAU,CAAA,CAAA,EAAMjB,EAAAA,IAAAgB,GAAA,CAAA,CAAW,CAC1C,CAAA,CAEJ,CCbA,SAAwBS,IAAY,CAEhC,OAAA1B,EAAA,KAAC,MAAA,CACC,OAAO,eACP,KAAK,OACL,YAAY,IACZ,QAAQ,YACR,cAAc,QACd,eAAe,QACf,UAAU,UACV,OAAO,MACP,MAAM,MACN,MAAM,6BAEN,SAAA,CAACC,EAAAA,IAAA,WAAA,CAAS,OAAO,cAAe,CAAA,EAChCA,EAAAA,IAAC,OAAK,CAAA,EAAE,gFAAiF,CAAA,EACzFA,EAAAA,IAAC,QAAK,GAAG,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG,IAAK,CAAA,EACtCA,EAAAA,IAAC,QAAK,GAAG,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG,IAAK,CAAA,CAAA,CAAA,CAAA,CAG5C,CCpBA,SAAwB0B,IAAY,CAEhC,OAAA3B,EAAA,KAAC,MAAA,CACC,OAAO,eACP,KAAK,OACL,YAAY,IACZ,QAAQ,YACR,cAAc,QACd,eAAe,QACf,UAAU,UACV,OAAO,MACP,MAAM,MACN,MAAM,6BAEN,SAAA,CAACC,EAAAA,IAAA,OAAA,CAAK,GAAG,KAAK,GAAG,IAAI,GAAG,IAAI,GAAG,IAAK,CAAA,EACpCA,EAAAA,IAAC,QAAK,GAAG,IAAI,GAAG,IAAI,GAAG,KAAK,GAAG,IAAK,CAAA,CAAA,CAAA,CAAA,CAG1C,CCZA,SAAwB2B,GAAa,CAAE,eAAA9Q,EAAgB,SAAAsQ,EAAU,cAAAlC,EAAe,WAAA2C,GAAc,CAC5F,MAAMC,EAAsBlD,EAAe1I,EAAM,YAAY,GAAK,CAAA,EAC5D,CAAE,gBAAA4J,CAAA,EAAoB5J,EAAM,gBAAgB,EAC5C,CAAE,qBAAA4I,CAAA,EAAyB5I,EAAM,iBAAiB,EAElD6L,EAAsBpH,GAA8B7J,CAAc,EAExEsN,EAAAA,UAAU,IAAM,CACV2D,EAAoB,aAClBD,GAAA,YAAAA,EAAqB,iBAAkBhR,GAAgCgP,IAEtDhB,IACV+C,IACb,EACC,CAACE,EAAoB,SAAS,CAAC,EAM5B,MAAAP,EAAUJ,EAAWlC,EAJN,IAAM,CACzB6C,EAAoB,OAAO,CAAE,eAAAjR,EAAgB,OAAQ,QAAU,CAAA,CAAA,EAKjE,OACGmP,EAAAA,IAAA,SAAA,CAAO,UAAU,uBAAuB,QAASuB,EAC/C,SAAWJ,EAAAnB,EAAA,IAAC0B,GAAU,EAAA,EAAM1B,EAAA,IAAAyB,GAAA,CAAA,CAAU,CACzC,CAAA,CAEJ,CCjCA,SAAwBM,IAAY,CAEhC,OAAA/B,EAAA,IAAC,MAAA,CACC,OAAO,eACP,KAAK,OACL,YAAY,IACZ,QAAQ,YACR,cAAc,QACd,eAAe,QACf,UAAU,UACV,OAAO,MACP,MAAM,MACN,MAAM,6BAEN,SAAAA,EAAAA,IAAC,OAAK,CAAA,EAAE,+DAAgE,CAAA,CAAA,CAAA,CAG9E,CCVA,SAAwBgC,GAAa,CAAE,aAAAtR,EAAc,WAAAkR,GAAc,CACjE,KAAM,CAACC,EAAqBI,CAAsB,EAAIrM,EAAeK,EAAM,YAAY,EACjFpC,EAAgBF,EAAkBsC,EAAM,UAAU,EAElD,CAAE,qBAAA4I,CAAA,EAAyB5I,EAAM,iBAAiB,EAClD,CAAE,qBAAAjC,CAAA,EAAyBiC,EAAM,gBAAgB,EAEjDiM,EAAsB1H,GAA8BqH,GAAA,YAAAA,EAAqB,cAAc,EAEvF,CAACV,EAAUgB,CAAW,EAAInF,WAAS,EAAK,EACxCoF,EAAWC,SAAO,IAAI,EAEtB,CAAE,eAAAxR,EAAgB,MAAAyR,CAAU,EAAA5R,EAE5B,CAAC6R,EAAYC,CAAa,EAAIxF,WAASsF,CAAK,EAE5CxC,EAAe,SAAY,EAC3B+B,GAAA,YAAAA,EAAqB,kBAAmBhR,IAK5CgD,EAAc,IAAI,EAGlB,SAAS,MAAQyO,EAGjBtO,EAAqBtD,CAAY,EAAA,EAG7B0Q,EAAiBzR,GAAM,CAC3BA,EAAE,eAAe,EACjB6S,EAAcF,CAAK,EACnBH,EAAY,EAAI,EAChB,WAAW,IAAM,CACfC,EAAS,QAAQ,SAChB,EAAE,CAAA,EAGDnD,EAAiBtP,GAAM,CAC3BA,EAAE,eAAe,EACjBwS,EAAY,EAAK,CAAA,EAGbd,EAAY1R,GAAM,CACtBA,EAAE,eAAe,EACjBwS,EAAY,EAAK,EACbI,IAAeD,GAGnBJ,EAAoB,OAAO,CAAE,eAAArR,EAAgB,MAAO0R,CAAY,CAAA,CAAA,EAGlEpE,EAAAA,UAAU,IAAM,CACV+D,EAAoB,YACDrD,IACjBhO,IAAkBgR,GAAA,YAAAA,EAAqB,iBACzCI,EAAwBtN,IAAe,CACrC,GAAGA,EACH,MAAO4N,CACP,EAAA,EAEN,EACC,CAACL,EAAoB,SAAS,CAAC,EAE5B,MAAAO,EAAiB9S,GAAM,CACvBA,EAAE,MAAQ,SACZ0R,EAAS1R,CAAC,CACZ,EAGI+S,EAAS,CACb,UACE,wIAAA,EAGA,OAAAb,GAAA,YAAAA,EAAqB,kBAAmBhR,IAC1C6R,EAAO,UACL,6HAID,IAAE,CAAA,QAAS,IAAM5C,IAAiB,GAAG4C,EACpC,SAAA,CAAA1C,EAAA,IAAC+B,GAAU,EAAA,EACV/B,EAAA,IAAA,MAAA,CAAI,UAAU,kEACZ,aAAa,GACZA,EAAA,IAAC,QAAA,CACC,IAAKoC,EACL,KAAK,OACL,UAAU,+FACV,MAAOG,EACP,SAAW5S,GAAM6S,EAAc7S,EAAE,OAAO,KAAK,EAC7C,OAAQ0R,EACR,UAAWoB,CAAA,GAGbH,CAEJ,CAAA,GACCT,GAAA,YAAAA,EAAqB,kBAAmBhR,EACtCkP,EAAA,KAAA,MAAA,CAAI,UAAU,mDACb,SAAA,CAAAC,EAAA,IAACkB,GAAA,CACC,eAAArQ,EACA,SAAAsQ,EACA,cAAAC,EACA,SAAAC,CAAA,CACF,EACArB,EAAA,IAAC2B,GAAA,CACC,eAAA9Q,EACA,SAAAsQ,EACA,cAAAlC,EACA,WAAA2C,CAAA,CACF,CAAA,CACF,CAAA,EAEA5B,EAAAA,IAAC,MAAI,CAAA,UAAU,4GAA6G,CAAA,CAEhI,CAAA,CAAA,CAEJ,CC9HA,SAAwB2C,GAAc,CAAE,cAAAzM,EAAe,eAAArF,EAAgB,UAAA+R,GAAa,CAEhF,OAAA5C,MAAA6C,EAAAA,SAAA,CACG,YACC3M,EAAc,OAAS,GACvBA,EAAc,IAAK4M,SAEdd,GAAwC,CAAA,aAAcc,EAAO,WAAYF,CAAA,EAAvDE,EAAM,cAA4D,CAExF,CACL,CAAA,CAEJ,CCVA,MAAMC,GAAYC,EAAA,WAAW,CAACC,EAAOC,IAAQ,CACrC,KAAA,CAAE,YAAAC,CAAgB,EAAAF,EAClB,CAAC/N,EAAakO,CAAc,EAAIxN,EAAeK,EAAM,WAAW,EAEhEoN,EAAe1T,GAAM,CACnB,KAAA,CAAE,MAAAW,CAAM,EAAIX,EAAE,OAChBA,EAAE,UAAY,GAAKW,IAAU,KAC/B8S,EAAe,EAAE,EACLD,IACd,EAGIG,EAAY3T,GAAM,CAChB,KAAA,CAAE,MAAAW,CAAM,EAAIX,EAAE,OACpByT,EAAe9S,CAAK,CAAA,EAIpB,OAAAyP,EAAA,KAAC,MAAA,CACC,IAAAmD,EACA,UAAU,8HAET,SAAA,CAAClD,EAAAA,IAAAuD,GAAA,CAAO,UAAU,SAAU,CAAA,EAC7BvD,EAAA,IAAC,QAAA,CACC,KAAK,OACL,UAAU,oFACV,MAAO9K,EACP,SAAAoO,EACA,UAAY3T,GAAM,CAChBA,EAAE,OAAS,SAAUA,EAAE,gBAAA,CACzB,EACA,YAAY,KACZ,QAAS0T,CAAA,CACX,CAAA,CAAA,CAAA,CAGN,CAAC,ECtCKG,GAAUR,EAAA,WAAW,CAACC,EAAOC,IAAQ,CACzC,KAAM,CAAE,IAAAO,EAAK,KAAA1O,EAAM,aAAA+K,EAAc,UAAAS,EAAY,EAAO,EAAA0C,EAC9CS,EAAe,CAAA,EAErB,OAAAA,EAAa,UAAYzD,EACvB,qIACAM,CAAA,EAGET,IACF4D,EAAa,QAAU5D,GAItBC,EAAAA,KAAA,IAAA,CAAG,GAAG2D,EAAc,IAAAR,EAClB,SAAA,CAAIO,EAAA,EACJ1O,CACH,CAAA,CAAA,CAEJ,CAAC,ECjBK4O,GAAiBC,GACrB,qYACA,CACE,SAAU,CACR,QAAS,CACP,QAAS,iFACT,YAAa,+DACb,QACE,sGACF,OACE,sFACF,MACE,iLACF,KAAM,qIACR,EACA,KAAM,CACJ,QAAS,iBACT,GAAI,sBACJ,GAAI,sBACN,CACF,EACA,gBAAiB,CACf,QAAS,UACT,KAAM,SACR,CACF,CACF,EAMMC,EAASC,EAAM,WACnB,CAAC,CAAE,UAAAvD,EAAW,QAAAwD,EAAS,KAAAC,EAAM,GAAGf,GAASC,IAEpClD,EAAAA,IAAA,SAAA,CAAO,UAAWC,EAAG0D,GAAe,CAAE,QAAAI,EAAS,KAAAC,EAAM,UAAAzD,CAAW,CAAA,CAAC,EAAG,IAAA2C,EAAW,GAAGD,CAAO,CAAA,CAGhG,EACAY,EAAO,YAAc,SCrCrB,MAAMI,GAASC,GAETC,GAAgBC,GAEhBC,GAAe,CAAC,CAAE,UAAA9D,EAAW,SAAAzD,EAAU,GAAGmG,CAC9C,IAAAjD,MAACsE,GAAA,CAAuB,UAAWrE,EAAGM,CAAS,EAAI,GAAG0C,EACpD,eAAC,MAAI,CAAA,UAAU,wEACZ,SAAAnG,EACH,CACF,CAAA,EAEFuH,GAAa,YAAcC,GAAuB,YAElD,MAAMC,GAAgBT,EAAAA,WAGpB,CAAC,CAAE,UAAAvD,EAAW,SAAAzD,EAAU,GAAGmG,CAAM,EAAGC,IACpClD,EAAA,IAACwE,GAAA,CACC,UAAWvE,EACT,wKACAM,CACF,EACC,GAAG0C,EACJ,IAAAC,CAAA,CACF,CACD,EACDqB,GAAc,YAAcC,GAAwB,YAEpD,MAAMC,GAAgBX,EAGpB,WAAA,CAAC,CAAE,UAAAvD,EAAW,SAAAzD,EAAU,GAAGmG,CAAM,EAAGC,IACpCnD,EAAAA,KAACsE,GACC,CAAA,SAAA,CAAArE,EAAA,IAACuE,GAAc,EAAA,EACfxE,EAAA,KAAC2E,GAAA,CACC,IAAAxB,EACA,UAAWjD,EACT,kOACA,oBACAM,CACF,EACC,GAAG0C,EAEH,SAAA,CAAAnG,EACAiD,EAAAA,KAAA4E,GAAA,CAAsB,UAAU,wTAC/B,SAAA,CAAC3E,EAAAA,IAAA4E,GAAA,CAAE,UAAU,oCAAqC,CAAA,EACjD5E,EAAA,IAAA,OAAA,CAAK,UAAU,UAAU,SAAK,QAAA,CAAA,EACjC,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CACD,EACDyE,GAAc,YAAcC,GAAwB,YAEpD,MAAMG,GAAe,CAAC,CAAE,UAAAtE,EAAW,GAAG0C,CAAM,IACzCjD,EAAA,IAAA,MAAA,CAAI,UAAWC,EAAG,mDAAoDM,CAAS,EAAI,GAAG0C,CAAO,CAAA,EAEhG4B,GAAa,YAAc,eAE3B,MAAMC,GAAe,CAAC,CAAE,UAAAvE,EAAW,GAAG0C,CACpC,IAAAjD,EAAA,IAAC,MAAA,CACC,UAAWC,EAAG,oEAAqEM,CAAS,EAC3F,GAAG0C,CAAA,CACN,EAEF6B,GAAa,YAAc,eAE3B,MAAMC,GAAcjB,EAGlB,WAAA,CAAC,CAAE,UAAAvD,EAAW,GAAG0C,CAAM,EAAGC,IAC1BlD,EAAA,IAACgF,GAAA,CACC,IAAA9B,EACA,UAAWjD,EAAG,uCAAwC,qBAAsBM,CAAS,EACpF,GAAG0C,CAAA,CACN,CACD,EACD8B,GAAY,YAAcC,GAAsB,YAEhD,MAAMC,GAAoBnB,EAGxB,WAAA,CAAC,CAAE,UAAAvD,EAAW,GAAG0C,CAAM,EAAGC,IAC1BlD,EAAA,IAACkF,GAAA,CACC,IAAAhC,EACA,UAAWjD,EAAG,yBAA0B,sBAAuBM,CAAS,EACvE,GAAG0C,CAAA,CACN,CACD,EACDgC,GAAkB,YAAcC,GAA4B,YAE5D,MAAMC,GAAcrB,EAGlB,WAAA,CAAC,CAAE,UAAAvD,EAAW,GAAG0C,CAAM,EAAGC,IAC1BlD,EAAA,IAAC2E,GAAA,CACC,IAAAzB,EACA,UAAWjD,EACT,ubACAM,CACF,EACC,GAAG0C,CAAA,CACN,CACD,EACDkC,GAAY,YAAcH,GAAsB,YAEhD,MAAMI,GAAetB,EAGnB,WAAA,CAAC,CAAE,UAAAvD,EAAW,GAAG0C,CAAM,EAAGC,IAC1BlD,EAAA,IAAC6D,EAAA,CACC,IAAAX,EACA,QAAQ,UACR,UAAWjD,EACT,ubACAM,CACF,EACC,GAAG0C,CAAA,CACN,CACD,EACDmC,GAAa,YAAcJ,GAAsB,YCnHjD,MAAMK,GAAiBrC,EAAA,WAAW,CAACC,EAAOC,IAAQ,CAC1C,KAAA,CACJ,MAAAZ,EACA,YAAAgD,EACA,KAAAC,EACA,QAAAC,EACA,YAAAC,EACA,UAAAC,EACA,UAAAnF,CACE,EAAA0C,EACE,CAAE,cAAA0C,EAAe,cAAAC,EAAe,WAAAC,CAAW,EAAIH,GAAa,CAAA,EAE5DI,EACJ,ySAEA,OAAA/F,OAAC0E,IAAc,IAAAvB,EAAU,UAAWjD,EAAG,8BAA+BM,GAAa,EAAE,EACnF,SAAA,CAAAR,OAAC8E,GACC,CAAA,SAAA,CAAC7E,EAAA,IAAA+E,GAAA,CAAY,UAAU,gCAAiC,SAAMzC,EAAA,EAC7DtC,EAAA,IAAAiF,GAAA,CAAkB,UAAU,mCAC1B,SACHK,EAAA,CAAA,EACF,EACCC,GAAc,YACdT,GACC,CAAA,SAAA,CAAC9E,EAAA,IAAA,MAAA,CAAK,SAAcyF,GAAc,KAAK,EACvC1F,EAAAA,KAAC,MAAI,CAAA,UAAU,aACb,SAAA,CAACC,EAAA,IAAAmF,GAAA,CAAY,UAAU,sCAAsC,SAAM,SAAA,EAClEK,GAAoB,KACpBE,EACC1F,EAAA,IAACmF,GAAA,CACC,QAASQ,EACT,UAAW,GACTC,GAAiBE,wGAGlB,SAAAD,CAAA,CAAA,EAED,IAAA,EACN,CAAA,EACF,CACF,CAAA,CAAA,CAEJ,CAAC,EC/CKE,GAAQjC,EAA+C,WAAA,CAAC,CAAE,UAAAvD,EAAW,GAAG0C,CAAM,EAAGC,IAEnFlD,EAAA,IAAC,QAAA,CACC,UAAWC,EACT,+UACAM,CACF,EACA,IAAA2C,EACC,GAAGD,CAAA,CAAA,CAGT,EACD8C,GAAM,YAAc,QCbpB,MAAMC,EAAQlC,EAGZ,WAAA,CAAC,CAAE,UAAAvD,EAAW,GAAG0C,CAAM,EAAGC,IAC1BlD,EAAA,IAACiG,GAAA,CACC,IAAA/C,EACA,UAAWjD,EACT,gHACAM,CACF,EACC,GAAG0C,CAAA,CACN,CACD,EACD+C,EAAM,YAAcC,GAAoB,YCXxC,MAAMC,GAAWpC,EAGf,WAAA,CAAC,CAAE,UAAAvD,EAAW,GAAG0C,CAAM,EAAGC,IAC1BlD,EAAA,IAACmG,GAAA,CACC,IAAAjD,EACA,UAAWjD,EACT,wRACAM,CACF,EACC,GAAG0C,EAEJ,SAACjD,EAAAA,IAAAoG,GAAA,CAA4B,UAAWnG,EAAG,kCAAkC,EAC3E,SAACD,EAAAA,IAAAqG,GAAA,CAAM,UAAU,SAAA,CAAU,CAC7B,CAAA,CAAA,CACF,CACD,EACDH,GAAS,YAAcC,GAAuB,YCnB9C,SAASG,GAAS,CAAE,MAAAhW,EAAO,SAAAgT,EAAU,QAAAhU,EAAS,UAAAiR,EAAW,mBAAAgG,GAAsB,CACvE,MAAAC,EACJlX,EAAQ,KAAMI,GAAYA,IAAYY,IAASZ,GAAA,YAAAA,EAAS,SAAUY,CAAK,GAAKA,EAC9E,OACG0P,EAAA,IAAA,MAAA,CAAI,UAAWC,EAAG,yCAA0CsG,CAAkB,EAC7E,SAACvG,EAAA,IAAA,MAAA,CAAI,UAAU,kBACb,SAACD,EAAAA,KAAA0G,GAAA,CAAQ,MAAAnW,EAAc,SAAAgT,EACrB,SAAA,CAAAvD,EAAA,KAAC0G,GAAQ,OAAR,CACC,UAAWxG,EACT,iPACAM,GAAa,EACf,EAEA,SAAA,CAACP,EAAA,IAAA,OAAA,CAAK,UAAU,8BACd,SAACA,EAAAA,IAAA,OAAA,CAAK,UAAU,0EACb,UAAAwG,GAAA,YAAAA,EAAe,UAAWlW,CAC7B,CAAA,EACF,EACA0P,EAAAA,IAAC,OAAK,CAAA,UAAU,wEACd,SAAAA,EAAA,IAAC,MAAA,CACC,OAAO,eACP,KAAK,OACL,YAAY,IACZ,QAAQ,YACR,cAAc,QACd,eAAe,QACf,UAAU,yBACV,OAAO,MACP,MAAM,MACN,MAAM,6BAEN,SAAAA,EAAAA,IAAC,WAAS,CAAA,OAAO,gBAAiB,CAAA,CAAA,CAAA,EAEtC,CAAA,CAAA,CACF,EACAA,EAAAA,IAACyG,GAAQ,QAAR,CAAgB,UAAU,kMACxB,SAAQnX,EAAA,IAAI,CAACoX,EAAMC,IAClB3G,EAAA,IAACyG,GAAQ,OAAR,CAEC,OAAOC,GAAA,YAAAA,EAAM,QAASA,EACtB,UAAU,qOAEV,SAAA3G,EAAA,KAAC,OAAK,CAAA,UAAU,qCACd,SAAA,CAAAC,EAAA,IAAC,OAAA,CACC,UAAWC,EACT,+DACA3P,MAAWoW,GAAA,YAAAA,EAAM,QAASA,GAAQ,gBAAkB,EACtD,EAEC,2BAAM,UAAWA,CAAA,CACpB,EACCpW,MAAWoW,GAAA,YAAAA,EAAM,QAASA,IACzB1G,EAAA,IAAC,QAAK,UAAU,qFACd,SAACA,EAAAA,IAAAiB,GAAA,CAAA,CAAU,CACb,CAAA,CAAA,EAEJ,CAAA,EAlBK0F,CAoBR,CAAA,EACH,CAAA,EACF,EACF,CACF,CAAA,CAEJ,CClEA,MAAMC,GAAoBhK,EAAAA,cAAc,CAAA,CAAE,EAE7BiK,GAAgB,IAAM,CACjC,KAAM,CAAE,IAAA3D,CAAA,EAAQzE,EAAA,WAAWmI,EAAiB,EAEtCE,EAAkBC,GAAS,CAC/B,GAAI,CAACA,EACG,MAAA,IAAI,MAAM,uCAAuC,EAEzD,OAAOC,GAAYD,CAAI,EAAE,KAAME,GAAW,CAClC,MAAAC,EAAgB,SAAS,cAAc,QAAQ,EAC/CC,EAAuBD,EAAc,WAAW,IAAI,EAEpDE,EAAkB,EAClBC,EAAmB,EACnBC,EAAYL,EAAO,MACnBM,EAAaN,EAAO,OAE1B,OAAAC,EAAc,MAAQI,EACtBJ,EAAc,OAASK,EAEFJ,EAAA,UAAUF,EAAQI,EAAkBD,CAAe,EAEpDF,EAAc,UAAU,YAAa,CAAC,CAEnD,CACR,CAAA,EAOI,MAAA,CAAE,oBAAqBhE,EAAK,kBAJT,IACjB4D,EAAe5D,EAAI,OAAO,EAIrC,EAEasE,GAAqB,CAAC,CAAE,SAAA1K,KAAe,CAC5C,MAAAoG,EAAMb,SAAO,IAAI,EAEhB,OAAArC,EAAA,IAAC4G,GAAkB,SAAlB,CAA2B,MAAO,CAAE,IAAA1D,CAAA,EAAQ,SAAApG,CAAS,CAAA,CAC/D,EC3CM2K,EAAgB,CAAC,CAAE,OAAQC,EAAS,gBAAAzW,EAAkB,CAAE,CAAA,IAAO,iBACnE,KAAM,CAAE,SAAAH,CAAU,EAAG4W,EAErB,IAAI1U,EAAS,CAAA,EACb,OAAIlC,IAAa,eAAiBA,IAAa,SAC7CkC,EAAS,CACP,SAAAlC,EACA,UAAU4W,GAAA,YAAAA,EAAS,WAAY,KAC/B,OAAOA,GAAA,YAAAA,EAAS,UAASjV,GAAAC,EAAAzB,EAAgBH,CAAQ,IAAxB,YAAA4B,EAA2B,kBAA3B,YAAAD,EAA6C,KAAM,gBAC5E,cAAciV,GAAA,YAAAA,EAAS,eAAgB,KACvC,cAAcA,GAAA,YAAAA,EAAS,eAAgB,KACvC,aAAaA,GAAA,YAAAA,EAAS,cAAe,EACrC,OAAOA,GAAA,YAAAA,EAAS,QAAS,EACzB,kBAAkBA,GAAA,YAAAA,EAAS,mBAAoB,EAC/C,mBAAmBA,GAAA,YAAAA,EAAS,oBAAqB,EACjD,OAAOA,GAAA,YAAAA,EAAS,QAAS,YAC/B,EACa5W,IAAa,SACtBkC,EAAS,CACP,SAAAlC,EACA,UAAU4W,GAAA,YAAAA,EAAS,WAAY,KAC/B,OAAOA,GAAA,YAAAA,EAAS,UAAS/U,GAAAC,EAAA3B,EAAgBH,CAAQ,IAAxB,YAAA8B,EAA2B,kBAA3B,YAAAD,EAA6C,KAAM,aAC5E,YAAY+U,GAAA,YAAAA,EAAS,aAAc,KACnC,UAAUA,GAAA,YAAAA,EAAS,WAAY,CAAC,CAAE,MAAO,CAAE,QAAS,EAAE,EAAI,OAAQ,CAAE,QAAS,EAAI,CAAA,CAAE,EACnF,cAAcA,GAAA,YAAAA,EAAS,eAAgB,KACvC,aAAaA,GAAA,YAAAA,EAAS,cAAe,GACrC,iBAAiBA,GAAA,YAAAA,EAAS,kBAAmB,KAC7C,MAAMA,GAAA,YAAAA,EAAS,OAAQ,IACvB,MAAMA,GAAA,YAAAA,EAAS,OAAQ,GACvB,OAAOA,GAAA,YAAAA,EAAS,QAAS,YAC/B,EACa5W,IAAa,SACtBkC,EAAS,CACP,SAAAlC,EACA,UAAU4W,GAAA,YAAAA,EAAS,WAAY,KAC/B,WAAWA,GAAA,YAAAA,EAAS,YAAa,GACjC,SAASA,GAAA,YAAAA,EAAS,UAAW,KAC7B,eAAeA,GAAA,YAAAA,EAAS,gBAAiB,KACzC,WAAWA,GAAA,YAAAA,EAAS,YAAa,WACjC,OAAOA,GAAA,YAAAA,EAAS,QAAS,YAC/B,EACa5W,IAAa,iBACtBkC,EAAS,CACP,SAAAlC,EACA,UAAU4W,GAAA,YAAAA,EAAS,WAAY,KAC/B,OACEA,GAAA,YAAAA,EAAS,UACT7U,GAAAC,EAAA7B,EAAgBH,CAAQ,IAAxB,YAAAgC,EAA2B,kBAA3B,YAAAD,EAA6C,KAC7C,8BACF,OAAO6U,GAAA,YAAAA,EAAS,QAAS,YAC/B,EACa5W,IAAa,KACtBkC,EAAS,CACP,SAAAlC,EACA,UAAU4W,GAAA,YAAAA,EAAS,WAAY,KAC/B,OAAOA,GAAA,YAAAA,EAAS,QAAS,YAC/B,GAEI,QAAQ,MAAM,oBAAoB5W,GAAU,EAC5CkC,EAAS,CACP,SAAU,KACV,UAAU0U,GAAA,YAAAA,EAAS,WAAY,KAC/B,OAAOA,GAAA,YAAAA,EAAS,QAAS,YAC/B,GAGS1U,CACT,EClDA,SAAwB2U,GAAY,CAAE,KAAArH,EAAM,aAAAsH,GAAgB,CACpD,KAAA,CAAE,kBAAAC,GAAsBhB,KAExB,CAACiB,EAAUC,CAAW,EAAI/K,WAAS,EAAE,EACrC,CAACzN,EAAMyY,CAAO,EAAIhL,WAAS,EAAE,EAE7B,CAACiL,EAAgBC,CAAiB,EAAIlL,WAAS,EAAI,EACnD,CAACmL,EAAgBC,CAAiB,EAAIpL,WAAS,EAAK,EACpD,CAACqL,EAAWC,CAAY,EAAItL,WAAS,EAAI,EAEzCtM,EAAeiO,EAAe1I,EAAM,YAAY,GAAK,CAAA,EACrD5C,EAAesL,EAAe1I,EAAM,YAAY,GAAK,CAAA,EACrDhF,EAAkB0N,EAAe1I,EAAM,eAAe,EAEtDsS,EAAgBtU,GACpB,CAAC,CAAE,SAAAC,KACD,MAAOsU,GACL,MAAMtU,EAAS,WAAW+B,EAAM,yBAAyBuS,CAAS,CAAC,EACvE,CAAC,CAAA,EAGGC,EAAc,CAClB,CAAE,MAAO,aAAc,QAAS,mBAAoB,EACpD,CAAE,MAAO,OAAQ,QAAS,aAAc,EACxC,CAAE,MAAO,WAAY,QAAS,gBAAiB,EAC/C,CAAE,MAAO,OAAQ,QAAS,cAAe,EACzC,CAAE,MAAO,MAAO,QAAS,YAAa,CAAA,EAGxCtK,EAAAA,UAAU,IAAM,CACd4J,EAAYW,GAAW,QAAOhY,GAAA,YAAAA,EAAc,QAAS,MAAM,CAAC,CAAC,EAC7DsX,EAAQ,YAAY,EACpBE,EAAkB,EAAI,EACtBE,EAAkB,EAAK,EACvBE,EAAa,EAAI,CAAA,EAChB,CAAChI,CAAI,CAAC,EAEH,MAAAqI,EAAYC,GAAY,CAC5B,MAAMC,EAAwBD,IAAY,QAAUA,IAAY,OAASA,IAAY,UAC/EE,EAAuBF,IAAY,OAASA,IAAY,aAE9DR,EAAkBS,CAAqB,EACvCX,EAAkBY,CAAoB,EACtCd,EAAQY,CAAO,CAAA,EAGXC,EAAwBtZ,IAAS,QAAUA,IAAS,OAASA,IAAS,UACtEuZ,EAAuBvZ,IAAS,OAASA,IAAS,aAIlDwZ,EAAmB,MAAO,CAC9B,UAAAP,EACA,QAAA7X,EACA,SAAAoB,EACA,SAAAiX,EAAW,GACX,UAAAX,EAAY,EAAA,IACR,CACJ,IAAIvL,EAAW,CAAA,EACf,GAAI/K,GAAA,MAAAA,EAAU,OACR,GAAAiX,EACF,UAAWrY,KAAWoB,EACX+K,EAAA,KACP,MAAMiM,EAAiB,CACrB,UAAWpY,GAAAA,YAAAA,EAAS,UACpB,QAASA,EACT,SAAUA,GAAAA,YAAAA,EAAS,SACnB,SAAAqY,EACA,UAAAX,CAAA,CACD,CAAA,MAEF,CACC1X,IAAAA,EAAUoB,EAAS,CAAC,EACpB,IAAAA,GAAA,YAAAA,EAAU,QAAS,EAAG,CAClB,MAAAkX,EAAa,MAAMV,EAAcC,CAAS,EAChD7X,EAAUoB,EAASA,EAAS,OAASkX,EAAa,CAAC,EAG1CnM,EAAA,CACT,MAAMiM,EAAiB,CACrB,UAAWpY,GAAAA,YAAAA,EAAS,UACpB,QAASA,EACT,SAAUA,GAAAA,YAAAA,EAAS,SACnB,SAAAqY,EACA,UAAAX,CAAA,CACD,CAAA,EAIHA,GAAAA,EAAkB,MAAA,CAAE,GAAG1X,EAAS,SAAAmM,GAC/B,CACH,IAAIoM,EAAM,CAAA,EACV,GAAIvY,EAAS,CACP,IAAAwY,EAAW,CAAE,GAAGxY,GACpB,OAAOwY,EAAS,SAChBD,EAAM,CAACC,CAAQ,EAEjB,UAAWC,KAAStM,EAAgBoM,EAAAA,EAAI,OAAOE,CAAK,EAC7C,OAAAF,EACT,EAGIG,EAAmB,SAAY,CAC7B,MAAArZ,EAAO,MAAM6X,IACVyB,GAAAtZ,EAAM,GAAG8X,QAAgB,WAAW,CAAA,EAGzCyB,EAAY,SAAY,CAC5B,IAAIvZ,EAAO,CAAA,EAEL,MAAA+B,EAAW,MAAMgX,EAAiB,CACtC,UAAWrY,GAAA,YAAAA,EAAc,eACzB,QAAS,KACT,SAAU2C,EACV,SAAU8U,EACV,UAAW,EAAA,CACZ,EAED,UAAWxX,KAAWoB,EACpB/B,EAAK,KAAKW,CAAO,EAGJ6Y,EAAA,CACb,KAAAxZ,EACA,SAAU8X,EACV,UAAW,MACX,WAAY0B,EAAe,MAAM,IACjC,kBAAoBC,GAAY,CAC9B,CACE,UAAW,SACX,YAAaA,EAAQ,KAAM9Z,GAAMA,EAAE,WAAa,QAAQ,EAAE,WAC5D,EACA,CAAE,UAAW,OAAQ,YAAa8Z,EAAQ,KAAM9Z,GAAMA,EAAE,WAAa,MAAM,EAAE,WAAY,EACzF,CACE,UAAW,kBACX,YAAa8Z,EAAQ,KAAM9Z,GAAMA,EAAE,WAAa,iBAAiB,EAAE,WACrE,EACA,CACE,UAAW,QACX,YAAa8Z,EAAQ,KAAM9Z,GAAMA,EAAE,WAAa,OAAO,EAAE,WAC3D,EACA,CACE,UAAW,aACX,YAAa8Z,EAAQ,KAAM9Z,GAAMA,EAAE,WAAa,YAAY,EAAE,WAChE,EACA,CACE,UAAW,YACX,YAAa8Z,EAAQ,KAAM9Z,GAAMA,EAAE,WAAa,WAAW,EAAE,WAC/D,EACA,CACE,UAAW,YACX,YAAa8Z,EAAQ,KAAM9Z,GAAMA,EAAE,WAAa,WAAW,EAAE,WAC/D,EACA,CACE,UAAW,kBACX,YAAa8Z,EAAQ,KAAM9Z,GAAMA,EAAE,WAAa,iBAAiB,EAAE,WACrE,EACA,CACE,UAAW,YACX,YAAa8Z,EAAQ,KAAM9Z,GAAMA,EAAE,WAAa,WAAW,EAAE,WAC/D,CACF,CAAA,CACD,CAAA,EAGG+Z,EAAiB,SAAY,CACjC,IAAI1Z,EACF;AAAA,oBACqBU,GAAA,YAAAA,EAAc;AAAA,cACpBA,GAAA,YAAAA,EAAc;AAAA,WACjBA,GAAA,YAAAA,EAAc;AAAA,cACX,IAAI,KAAK,EAAE,aAAa;AAAA,EAEzC,GAAIuX,EAAgB,CACVjY,GAAA;AAAA;AAAA,EACR,MAAMV,EAAUmY,EAAc,CAAE,OAAQ/W,EAAc,gBAAAO,EAAiB,EAEvE,UAAWO,KAAO,OAAO,KAAKlC,CAAO,EAC3BU,GAAA,KAAKwB,MAAQlC,EAAQkC,CAAG;AAAA,EAI9B,MAAAO,EAAW,MAAMgX,EAAiB,CACtC,UAAWrY,GAAA,YAAAA,EAAc,eACzB,QAAS,KACT,SAAU2C,EACV,SAAU,GACV,UAAW,EAAA,CACZ,EAEOrD,GAAA;AAAA;AAAA,EACR,UAAWW,KAAWoB,EACpB/B,GAAQ,KAAKW,GAAA,YAAAA,EAAS;AAAA,EAAcA,GAAA,YAAAA,EAAS;AAAA,EACzCA,EAAQ,QAAeX,GAAA;AAAA,GACvBW,EAAQ,aAAoBX,GAAA;AAAA,GAC5BW,EAAQ,YAAmBX,GAAA;AAAA,GACvBA,GAAA;AAAA;AAAA,EAGKwZ,EAAA,CACb,KAAAxZ,EACA,SAAU8X,EACV,UAAW,KACX,WAAY0B,EAAe,MAAM,IAAA,CAClC,CAAA,EAGGG,EAAa,SAAY,CAC7B,IAAI3Z,EACF;AAAA;AAAA,kBAEmBU,GAAA,YAAAA,EAAc;AAAA,YACpBA,GAAA,YAAAA,EAAc;AAAA,SACjBA,GAAA,YAAAA,EAAc;AAAA,YACX,IAAI,KAAK,EAAE,aAAa;AAAA,EAEvC,GAAIuX,EAAgB,CACVjY,GAAA;AAAA;AAAA;AAAA,EACR,MAAMV,EAAUmY,EAAc,CAAE,OAAQ/W,EAAc,gBAAAO,EAAiB,EAEvE,UAAWO,KAAO,OAAO,KAAKlC,CAAO,EAC3BU,GAAA,GAAGwB,MAAQlC,EAAQkC,CAAG;AAAA,EAI5B,MAAAO,EAAW,MAAMgX,EAAiB,CACtC,UAAWrY,GAAA,YAAAA,EAAc,eACzB,QAAS,KACT,SAAU2C,EACV,SAAU,GACV,UAAW,EAAA,CACZ,EAEOrD,GAAA;AAAA;AAAA;AAAA,EACR,UAAWW,KAAWoB,EACpB/B,GAAQ,MAAMW,GAAA,YAAAA,EAAS;AAAA,EAAYA,GAAA,YAAAA,EAAS;AAAA,EACxCA,EAAQ,QAAeX,GAAA;AAAA,GACvBW,EAAQ,aAAoBX,GAAA;AAAA,GAC5BW,EAAQ,YAAmBX,GAAA;AAAA,GACvBA,GAAA;AAAA;AAAA,EAGKwZ,EAAA,CACb,KAAAxZ,EACA,SAAU8X,EACV,UAAW,MACX,WAAY0B,EAAe,MAAM,IAAA,CAClC,CAAA,EAGGI,EAAa,SAAY,CAC7B,IAAI5Z,EAAO,CACT,eAAgBU,GAAA,YAAAA,EAAc,eAC9B,SAAUA,GAAA,YAAAA,EAAc,SACxB,MAAOA,GAAA,YAAAA,EAAc,MACrB,SAAU,IAAI,KAAK,EAAE,aAAa,EAClC,SAAUyX,EACV,UAAAE,CAAA,EAGEJ,IAAgBjY,EAAK,QAAUyX,EAAc,CAAE,OAAQ/W,EAAc,gBAAAO,EAAiB,GAEpF,MAAAc,EAAW,MAAMgX,EAAiB,CACtC,UAAWrY,GAAA,YAAAA,EAAc,eACzB,QAAS,KACT,SAAU2C,EACV,SAAU8U,EACV,UAAAE,CAAA,CACD,EAEGA,EAAWrY,EAAK,aAAe+B,EAAS,SACvC/B,EAAK,SAAW+B,EAENyX,EAAA,CACb,KAAAxZ,EACA,SAAU8X,EACV,UAAW,OACX,WAAY0B,EAAe,MAAM,IAAA,CAClC,CAAA,EAGGK,EAAqB,IAAM,CAC3Bta,IAAS,OAAmBqa,IACvBra,GAAQ,OAAmBoa,IAC3Bpa,GAAQ,WAA2Bma,IACnCna,GAAQ,MAAiBga,IACzBha,GAAQ,cAA+B8Z,GAAA,EAG5CS,EACJ,4hBAGA,OAAA9J,EAAAA,IAACiE,GAAO,CAAA,KAAA3D,EAAY,aAAAsH,EAClB,SAAA5H,EAAA,IAACqF,GAAA,CACC,MAAM,SACN,UAAU,0BACV,KACEtF,EAAA,KAAC,MAAI,CAAA,UAAU,0CACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,mCACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,2DACb,SAAA,CAAAC,MAACgG,EAAM,CAAA,QAAQ,WAAW,UAAU,gCAAgC,SAEpE,MAAA,EACAhG,EAAA,IAAC+F,GAAA,CACC,GAAG,WACH,MAAO+B,EACP,SAAWnY,GAAMoY,EAAYW,GAAW/Y,EAAE,OAAO,OAAS,EAAE,CAAC,EAC7D,YAAY,QACZ,UAAWsQ,EACT6J,EACA,0HACF,CAAA,CACF,CAAA,EACF,EACA/J,EAAAA,KAAC,MAAI,CAAA,UAAU,2DACb,SAAA,CAAAC,MAACgG,EAAM,CAAA,QAAQ,OAAO,UAAU,gCAAgC,SAEhE,OAAA,EACAhG,EAAA,IAACsG,GAAA,CACC,GAAG,OACH,MAAO/W,EACP,SAAUoZ,EACV,QAASF,EACT,UAAWxI,EACT6J,EACA,gHACF,EACA,mBAAmB,yBAAA,CACrB,CAAA,EACF,CAAA,EACF,EACA/J,EAAAA,KAAC,MAAI,CAAA,UAAU,mCACb,SAAA,CAAAC,EAAAA,IAAC,OAAI,UAAU,2DACb,SAACD,EAAA,KAAA,MAAA,CAAI,UAAU,iCACb,SAAA,CAAAC,MAACgG,EAAM,CAAA,QAAQ,iBAAiB,UAAU,gCAAgC,SAE1E,OAAA,EACAjG,EAAAA,KAAC,MAAI,CAAA,UAAU,8CACb,SAAA,CAAAC,EAAA,IAACkG,GAAA,CACC,GAAG,iBACH,SAAU,CAAC4C,EACX,QAASb,EACT,UAAU,6JACV,gBAAiBC,CAAA,CACnB,EACAlI,EAAA,IAAC,QAAA,CACC,QAAQ,iBACR,UAAU,+GAET,WAAuB,KAAO,KAAA,CACjC,CAAA,EACF,CAAA,CAAA,CACF,CACF,CAAA,EACAD,EAAAA,KAAC,MAAI,CAAA,UAAU,iCACb,SAAA,CAAAC,MAACgG,EAAM,CAAA,QAAQ,iBAAiB,UAAU,gCAAgC,SAE1E,WAAA,EACAjG,EAAAA,KAAC,MAAI,CAAA,UAAU,8CACb,SAAA,CAAAC,EAAA,IAACkG,GAAA,CACC,GAAG,iBACH,SAAU,CAAC2C,EACX,QAASV,EACT,UAAU,6JACV,gBAAiBC,CAAA,CACnB,EACApI,EAAA,IAAC,QAAA,CACC,QAAQ,iBACR,UAAU,+GAET,WAAwB,KAAO,KAAA,CAClC,CAAA,EACF,CAAA,EACF,EACCzQ,IAAS,OACPwQ,OAAA,MAAA,CAAI,UAAU,iCACb,SAAA,CAAAC,MAACgG,EAAM,CAAA,QAAQ,YAAY,UAAU,gCAAgC,SAErE,cAAA,EACAjG,EAAAA,KAAC,MAAI,CAAA,UAAU,8CACb,SAAA,CAAAC,EAAA,IAACkG,GAAA,CACC,GAAG,YACH,QAASmC,EACT,UAAU,6JACV,gBAAiBC,CAAA,CACnB,EACAtI,EAAA,IAAC,QAAA,CACC,QAAQ,YACR,UAAU,+GACX,SAAA,IAAA,CAED,CAAA,EACF,CAAA,CAAA,CACF,EACE,IAAA,EACN,CAAA,EACF,EAEF,QAEIA,EAAA,IAAA6C,WAAA,CAAA,SAAA7C,EAAA,IAACoF,GAAA,CACC,QAASyE,EACT,UAAU,yGACX,SAAA,IAAA,CAAA,EAGH,EAEF,UAAW,IAAA,CAEf,CAAA,CAAA,CAEJ,CCxaA,MAAME,GAAc,CAAC,CAAE,KAAAzJ,EAAM,aAAAsH,KAAkB,CAC7C,KAAM,CAAE,gBAAA/H,CAAA,EAAoB5J,EAAM,gBAAgB,EAC5C,CAAE,qBAAA4I,CAAA,EAAyB5I,EAAM,iBAAiB,EAClD+T,EAAsBpP,KAEtBkF,EAAe,IAAM,CACzB,QAAQ,IAAI,2BAA2B,EACvCkK,EAAoB,OAAO,CAAA,EAG7B7L,OAAAA,EAAAA,UAAU,IAAM,CACV6L,EAAoB,YACNnK,IACKhB,IACvB,EACC,CAACmL,EAAoB,SAAS,CAAC,EAGhChK,EAAAA,IAACiE,GAAO,CAAA,KAAA3D,EAAY,aAAAsH,EAClB,SAAA5H,EAAA,IAACqF,GAAA,CACC,MAAM,SACN,YAAY,wBACZ,UAAW,CACT,cAAevF,EACf,cAAe,+DACf,WAAY,IACd,CAAA,CAEJ,CAAA,CAAA,CAEJ,EClCA,SAAwBmK,IAAe,CAEnC,OAAAjK,EAAA,IAAC,MAAA,CACC,OAAO,eACP,KAAK,OACL,YAAY,IACZ,QAAQ,YACR,cAAc,QACd,eAAe,QACf,UAAU,UACV,OAAO,MACP,MAAM,MACN,MAAM,6BAEN,SAAAA,EAAAA,IAAC,OAAK,CAAA,EAAE,iDAAkD,CAAA,CAAA,CAAA,CAGhE,CCjBA,SAAwBkK,IAAgB,CAEpC,OAAAnK,EAAA,KAAC,MAAA,CACC,OAAO,eACP,KAAK,OACL,YAAY,IACZ,QAAQ,YACR,cAAc,QACd,eAAe,QACf,UAAU,UACV,OAAO,MACP,MAAM,MACN,MAAM,6BAEN,SAAA,CAAAC,MAAC,UAAO,GAAG,KAAK,GAAG,KAAK,EAAE,IAAI,EAC9BA,EAAAA,IAAC,QAAK,GAAG,KAAK,GAAG,IAAI,GAAG,KAAK,GAAG,GAAI,CAAA,EACpCA,EAAAA,IAAC,QAAK,GAAG,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG,IAAK,CAAA,EACtCA,EAAAA,IAAC,QAAK,GAAG,OAAO,GAAG,OAAO,GAAG,OAAO,GAAG,MAAO,CAAA,EAC9CA,EAAAA,IAAC,QAAK,GAAG,QAAQ,GAAG,QAAQ,GAAG,QAAQ,GAAG,OAAQ,CAAA,EAClDA,EAAAA,IAAC,QAAK,GAAG,IAAI,GAAG,KAAK,GAAG,IAAI,GAAG,IAAK,CAAA,EACpCA,EAAAA,IAAC,QAAK,GAAG,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG,IAAK,CAAA,EACtCA,EAAAA,IAAC,QAAK,GAAG,OAAO,GAAG,QAAQ,GAAG,OAAO,GAAG,OAAQ,CAAA,EAChDA,EAAAA,IAAC,QAAK,GAAG,QAAQ,GAAG,OAAO,GAAG,QAAQ,GAAG,MAAO,CAAA,CAAA,CAAA,CAAA,CAGtD,CCtBA,MAAMmK,GAAkB,IAAM,CAC5B,GAAI,OAAO,OAAW,KAAe,OAAO,aAAc,CACxD,MAAMC,EAAc,OAAO,aAAa,QAAQ,aAAa,EACzD,GAAA,OAAOA,GAAgB,SAClB,OAAAA,EAIT,GADkB,OAAO,WAAW,8BAA8B,EACpD,QACL,MAAA,OAIJ,MAAA,OACT,EAEaC,GAAezN,EAAc,cAAA,EAE7B0N,GAAgB,CAAC,CAAE,aAAAC,EAAc,SAAAzN,KAAe,CAC3D,KAAM,CAAC0N,EAAOC,CAAQ,EAAIzN,WAASmN,EAAe,EAE5CO,EAAeC,GAAa,CAC1B,MAAAC,EAAO,OAAO,SAAS,gBACvBC,EAASF,IAAa,OAE5BC,EAAK,UAAU,OAAOC,EAAS,QAAU,MAAM,EAC1CD,EAAA,UAAU,IAAID,CAAQ,EAEd,aAAA,QAAQ,cAAeA,CAAQ,CAAA,EAG9C,OAAIJ,GACFG,EAAYH,CAAY,EAG1BpM,EAAAA,UAAU,IAAM,CACduM,EAAYF,CAAK,CAAA,EAChB,CAACA,CAAK,CAAC,EAEHxK,EAAA,IAACqK,GAAa,SAAb,CAAsB,MAAO,CAAE,MAAAG,EAAO,SAAAC,CAAS,EAAI,SAAA3N,CAAS,CAAA,CACtE,ECxCMgO,GAAW9H,aAAW,IAAM,CAChC,KAAM,CAAE,MAAAwH,EAAO,SAAAC,CAAS,EAAIhM,aAAW4L,EAAY,EAE7CvK,EAAe,IAAM2K,EAASD,IAAU,OAAS,QAAU,MAAM,EACjEO,EAAOP,IAAU,OAAS,OAAS,OAGvC,OAAAzK,EAAA,KAAC,SAAA,CACC,UAAU,8HACV,QAASD,EAER,SAAA,CAAA0K,IAAU,OAASxK,EAAAA,IAACkK,GAAc,CAAA,CAAA,QAAMD,GAAa,EAAA,EACrDc,CAAA,CAAA,CAAA,CAGP,CAAC,EClBD,SAAwBC,IAAa,CAEjC,OAAAjL,EAAA,KAAC,MAAA,CACC,OAAO,eACP,KAAK,OACL,YAAY,IACZ,QAAQ,YACR,cAAc,QACd,eAAe,QACf,UAAU,UACV,OAAO,MACP,MAAM,MACN,MAAM,6BAEN,SAAA,CAACC,EAAAA,IAAA,OAAA,CAAK,EAAE,yCAA0C,CAAA,EAClDA,EAAAA,IAAC,WAAS,CAAA,OAAO,kBAAmB,CAAA,EACpCA,EAAAA,IAAC,QAAK,GAAG,KAAK,GAAG,KAAK,GAAG,IAAI,GAAG,IAAK,CAAA,CAAA,CAAA,CAAA,CAG3C,CCjBA,MAAMiL,GAASjI,aAAW,IAAM,CAC9B,KAAM,CAAE,KAAAnO,EAAM,OAAA4C,CAAO,EAAI8G,GAAe,EAElC2M,EAAe,IAAM,CAClBzT,IACP,OAAO,SAAS,QAAO,EAIvB,OAAAsI,EAAA,KAAC,SAAA,CACC,UAAU,8HACV,QAASmL,EAET,SAAA,CAAAlL,EAAA,IAACgL,GAAW,EAAA,GACXnW,GAAA,YAAAA,EAAM,WAAY,OACnBmL,EAAAA,IAAC,SAAM,SAAE,IAAA,CAAA,CAAA,CAAA,CAAA,CAGf,CAAC,ECpBD,SAAwBmL,IAAW,CAE/B,OAAApL,EAAA,KAAC,MAAA,CACC,OAAO,eACP,KAAK,OACL,YAAY,IACZ,QAAQ,YACR,cAAc,QACd,eAAe,QACf,UAAU,sCACV,OAAO,MACP,MAAM,MACN,MAAM,6BAEN,SAAA,CAAAC,MAAC,UAAO,GAAG,KAAK,GAAG,KAAK,EAAE,IAAI,QAC7B,SAAO,CAAA,GAAG,KAAK,GAAG,KAAK,EAAE,IAAI,QAC7B,SAAO,CAAA,GAAG,IAAI,GAAG,KAAK,EAAE,IAAI,CAAA,CAAA,CAAA,CAGnC,CCJA,SAAwBoL,GAAS,CAAE,YAAAjI,EAAa,gBAAAlO,GAAmB,CACjE,KAAM,CAACoW,EAAaC,CAAc,EAAItO,WAAS,EAAK,EAC9C,CAACuO,EAAiBC,CAAkB,EAAIxO,WAAS,EAAK,EACtD,CAAE,KAAAnI,GAAS0J,KAEX7N,EAAeiO,EAAe1I,EAAM,YAAY,GAAK,CAAA,EAErDwV,GACJ/a,GAAA,YAAAA,EAAc,kBACdA,GAAA,YAAAA,EAAc,kBAAmB,QACjCA,GAAA,YAAAA,EAAc,kBAAmB,SAE7BoP,EAAe,IAAM,CACrB2L,GAAYH,EAAe,EAAI,CAAA,EAGrC,OAEIvL,EAAA,KAAA8C,WAAA,CAAA,SAAA,CAAC7C,EAAAA,IAAA0L,GAAA,CAAK,GAAG,MAAM,UAAU,iBACtB,SAAC,CAAA,CAAE,KAAApL,CAAK,IAELP,EAAA,KAAA8C,EAAA,SAAA,CAAA,SAAA,CAAA9C,EAAA,KAAC2L,GAAK,OAAL,CACC,UAAWzL,EACT,2IACAK,EAAO,cAAgB,EACzB,EAEA,SAAA,CAAAN,EAAAA,IAAC,OAAI,UAAU,gCACb,SAACA,MAAA,MAAA,CAAI,UAAU,gBACb,SAAAA,EAAA,IAAC,MAAA,CACC,UAAU,aACV,KACEnL,GAAA,YAAAA,EAAM,SAAU,6CAA6CA,GAAA,YAAAA,EAAM,WAErE,IAAI,EAAA,GAER,CACF,CAAA,QACC,MAAI,CAAA,UAAU,4EACZ,UAAAA,GAAA,YAAAA,EAAM,OAAQ,OACjB,QACCsW,GAAS,EAAA,CAAA,CAAA,CACZ,EAEAnL,EAAA,IAAC2L,GAAA,CACC,GAAI9I,EAAAA,SACJ,MAAM,mCACN,UAAU,+BACV,QAAQ,kCACR,MAAM,iCACN,UAAU,kCACV,QAAQ,+BAER,SAAC9C,EAAA,KAAA2L,GAAK,MAAL,CAAW,UAAU,qIACnB,SAAA,CAAAzW,SACEyW,GAAK,KAAL,CACC,SAAC1L,EAAA,IAAA+C,GAAA,CAAU,YAAAI,CAA0B,CAAA,EACvC,EAEDnD,EAAA,IAAA0L,GAAK,KAAL,CAAU,GAAG,MACZ,SAAA1L,EAAA,IAACwD,GAAA,CACC,UAAWvD,EACT,8HACAwL,EAAa,4BAA8B,kCAC7C,EACA,IAAK,IAAOzL,EAAAA,IAAA4L,GAAA,CAAS,KAAM,EAAI,CAAA,EAC/B,KAAK,sBACL,aAAA9L,CAAA,CAAA,EAEJ,EACCE,EAAA,IAAA,MAAA,CAAI,UAAU,0BAA0B,KAAK,OAAO,EACrDA,EAAAA,IAAC0L,GAAK,KAAL,CAAU,GAAG,MACZ,SAAA1L,MAAC8K,IAAS,CAAA,EACZ,EACC9K,EAAA,IAAA0L,GAAK,KAAL,CAAU,GAAG,MACZ,SAAA1L,EAAA,IAACwD,GAAA,CACC,UAAU,8HACV,IAAK,IAAMxD,EAAAA,IAACyB,GAAU,EAAA,EACtB,KAAK,sBACL,aAAc,IAAM+J,EAAmB,EAAI,CAAA,CAAA,EAE/C,EACCxL,EAAA,IAAA,MAAA,CAAI,UAAU,0BAA0B,KAAK,OAAO,EACrDA,EAAAA,IAAC0L,GAAK,KAAL,CAAU,GAAG,MACZ,SAAA1L,MAACiL,IAAO,CAAA,EACV,CAAA,EACF,CAAA,CACF,CAAA,CAAA,CACF,CAEJ,CAAA,EACCI,GAAgBrL,EAAA,IAAA2H,GAAA,CAAY,KAAM0D,EAAa,aAAcC,EAAgB,EAC7EC,GAAoBvL,EAAA,IAAA+J,GAAA,CAAY,KAAMwB,EAAiB,aAAcC,EAAoB,CAC5F,CAAA,CAAA,CAEJ,CC9GA,SAASK,GAAYvb,EAAOwb,EAAO,CACjC,KAAM,CAACC,EAAgBC,CAAiB,EAAIhP,EAAQ,SAAC1M,CAAK,EAE1D6N,OAAAA,EAAAA,UAAU,IAAM,CACd,MAAMoD,EAAU,WAAW,IAAM,CAC/ByK,EAAkB1b,CAAK,CACxB,EAAEwb,CAAK,EAER,MAAO,IAAM,CACX,aAAavK,CAAO,CAC1B,CACA,EAAK,CAACjR,EAAOwb,CAAK,CAAC,EAEVC,CACT,CCmBA,SAAwBE,GAAI,CAAE,WAAAC,EAAY,cAAAC,GAAiB,CACzD,KAAM,CAACC,EAAYC,CAAa,EAAIrP,WAAS,EAAK,EAC5C,CAAE,gBAAAK,GAAoBkB,KACtB,CAAE,MAAAiM,CAAA,EAAW/L,EAAA,WAAW4L,EAAY,EACpCiC,EAAejK,SAAO,IAAI,EAC1BkK,EAAoBlK,SAAO,IAAI,EAE/B,CAACnM,EAAesW,CAAgB,EAAIxP,EAAA,SAAS,CAAE,CAAA,EAE/C,CAACjG,EAAY0V,CAAa,EAAIzP,WAAS,CAAC,EAExC,CAAC4D,EAAO8L,CAAQ,EAAI1P,WAAS,CAAC,EAG9B2P,EAAwB7R,GAAyB/D,EAAY,CAAE,QAASsG,EAAiB,EAGzFnI,EAAcyJ,EAAe1I,EAAM,WAAW,EAC9ChB,EAAkB0J,EAAe1I,EAAM,eAAe,EACtDZ,EAAcsJ,EAAe1I,EAAM,WAAW,EAC9C,CAAE,gBAAA4J,EAAiB,8BAAA+M,CAA8B,EAAI3W,EAAM,gBAAgB,EAG3EvF,EAAeiO,EAAe1I,EAAM,YAAY,EAChD,CAAE,eAAApF,CAAA,EAAmBH,GAAgB,GACrCmc,EAA0BlZ,EAAkBsC,EAAM,oBAAoB,EACtEzB,EAA2BmK,EAAe1I,EAAM,wBAAwB,EACxE,CAAE,qBAAA4I,CAAA,EAAyB5I,EAAM,iBAAiB,EAElD,CAAC6W,EAAYC,CAAa,EAAI/P,WAAS,EAAK,EAE5CgQ,EAAsBnB,GAAY3W,EAAa,GAAG,EAClD+X,EAAgBvR,GAAesR,EAAqBjW,EAAY,CACpE,QACE,CAAC,CAACiW,GAAuBA,EAAoB,OAAS,GAAK/X,GAAmBI,CAAA,CACjF,EAEK6X,EAAkB,CAACld,EAAMmd,IAAiB,CAC9C,MAAM5S,EAAMvK,EACZwc,EAAiBjS,EAAI,aAAa,EAC9B4S,GACFV,EAAcU,CAAY,EAE5BT,EAASnS,EAAI,KAAK,EAClBwS,EAAc,EAAK,EACWH,IAC9BC,EAAwBtS,EAAI,QAAQ,CAAA,EAGtC4D,EAAAA,UAAU,IAAM,CAEV8O,EAAc,iBAChBF,EAAc,EAAI,EACTE,EAAc,MACvBC,EAAgBD,EAAc,IAAI,GAEnC,CAACA,EAAc,KAAMA,EAAc,gBAAgB,CAAC,EAEvD,MAAM9J,EAAc,IAAM,CACxBsJ,EAAc,CAAC,EACM5N,IACjBhO,GAAkB,UACJgP,GAClB,EAGI+C,EAAY,IAAM,CACtB,MAAMwK,EAAYd,EAAa,QAC3Bc,IACFb,EAAkB,QAAUa,EAAU,UACxC,EAGIvM,EAAW,SAAY,CACjB+B,IACV6J,EAAc1V,EAAa,CAAC,CAAA,EAGxB+J,EAAe,SAAY,CACrB8B,IACV6J,EAAc1V,EAAa,CAAC,CAAA,EAG9BoH,EAAAA,UAAU,IAAM,CACd,GAAIwO,EAAsB,KAAM,CAC9B,GAAItX,EACF,OAEF,GAAI,CAAE,cAAAa,EAAe,MAAA0K,GAAU+L,EAAsB,KACjD5V,EAAa6J,EACf6L,EAAc7L,CAAK,GAEdvL,IACHa,EAAgBA,EAAc,KAC5B,CAACmX,EAAGC,KAAM,IAAI,KAAKA,GAAE,SAAS,EAAI,IAAI,KAAKD,EAAE,SAAS,CAAA,GAG1Db,EAAiBtW,CAAa,EAC9BwW,EAAS9L,CAAK,GAElB,EACC,CAAC+L,EAAsB,UAAWA,EAAsB,KAAMtX,EAAa0B,CAAU,CAAC,EAEzFoH,EAAAA,UAAU,IAAM,CACT9I,GACHsX,EAAsB,QAAQ,CAE/B,EAAA,CAAC5V,EAAYlG,EAAgB2D,CAAwB,CAAC,EAEzD,MAAM+Y,EAAmB,IAAM,CACfpB,EAACpW,GAAS,CAACA,CAAI,CAAA,EAYzByX,EAAW,IAAM,CACrB,MAAMC,EAAY,OAAO,OAAO,UAAc,IAAc,GAAK,UAAU,UAEpE,MADa,qFACD,KAAKA,CAAS,CAAA,EAGnCtP,EAAAA,UAAU,IAAM,CACVqP,IACFrB,EAAc,EAAK,EAEnBA,EAAc,EAAI,CACpB,EACC,CAACtb,EAAgBsb,CAAa,CAAC,EAElC,MAAMuB,EACJf,EAAsB,WAAa5V,IAAe,EAC9C,+EACA,4CAEN,OAEIgJ,EAAA,KAAA8C,WAAA,CAAA,SAAA,CAAA9C,OAAC,MAAI,CAAA,UAAW,qCAAuCmM,EAAa,UAAY,IAC9E,SAAA,CAAClM,EAAA,IAAA,MAAA,CAAI,UAAU,gCACb,SAACA,EAAA,IAAA,MAAA,CAAI,UAAU,mFACb,SAAAD,OAAC,MAAI,CAAA,UAAU,qDACb,SAAA,CAAAC,EAAA,IAACJ,GAAQ,EAAA,EACTI,EAAA,IAAC,MAAA,CACC,UAAW,mCACToM,EAAa,GAAK,mDAEpB,aAAc,IAAMC,EAAc,EAAI,EACtC,aAAc,IAAMA,EAAc,EAAK,EACvC,IAAKC,EAEL,SAAAvM,EAAA,KAAC,MAAI,CAAA,UAAW2N,EACZ,SAAA,CAAAf,EAAsB,WAAa5V,IAAe,GAAM+V,EACxD9M,MAACU,IAAQ,CAAA,EAETV,EAAA,IAAC2C,GAAA,CACC,cAAAzM,EACA,eAAArF,EACA,UAAA+R,CAAA,CACF,EAEF5C,EAAA,IAACW,GAAA,CACC,WAAA5J,EACA,MAAA6J,EACA,SAAAC,EACA,aAAAC,CAAA,CACF,CAAA,EACF,CAAA,CACF,EACAd,EAAAA,IAACoL,GAAS,CAAA,YAAAjI,EAA0B,gBAAAlO,CAAkC,CAAA,CAAA,CACxE,CAAA,CACF,CAAA,EACF,EACA8K,EAAA,KAAC,SAAA,CACC,KAAK,SACL,UAAWE,EAAG,wJAAyJuK,IAAU,OAAS,oCAAsC,mCAAmC,EACnQ,QAAS+C,EAET,SAAA,CAACvN,EAAA,IAAA,OAAA,CAAK,UAAU,UAAU,SAAa,gBAAA,QACtCK,GAAK,EAAA,CAAA,CAAA,CACR,CAAA,EACF,EACC,CAAC6L,GACAnM,EAAA,KAAC,SAAA,CACC,KAAK,SACL,UAAU,2NACV,QAASwN,EAET,SAAA,CAACvN,EAAA,IAAA,OAAA,CAAK,UAAU,UAAU,SAAY,eAAA,EACtCA,EAAAA,IAACK,GAAM,CAAA,KAAM,EAAK,CAAA,CAAA,CAAA,CACpB,EAGFL,EAAAA,IAAC,OAAI,UAAW,YAAckM,EAAa,UAAY,IAAK,QAASqB,EAAkB,CACzF,CAAA,CAAA,CAEJ,CCvOwB,SAAAI,GAAU,CAAE,cAAAxB,GAAiB,CAC7C,MAAAzb,EAAeiO,EAAe1I,EAAM,YAAY,EAChD,CAAE,gBAAA4J,CAAA,EAAoB5J,EAAM,gBAAgB,EAC5C,CAAE,MAAAqM,EAAQ,QAAW5R,GAAgB,CAAA,EAGzC,OAAAqP,EAAA,KAAC,MAAI,CAAA,UAAU,mIACb,SAAA,CAAAA,EAAA,KAAC,SAAA,CACC,KAAK,SACL,UAAU,2LACV,QAAS,IAAMoM,EAAepW,GAAS,CAACA,CAAI,EAE5C,SAAA,CAACiK,EAAA,IAAA,OAAA,CAAK,UAAU,UAAU,SAAY,eAAA,EACtCD,EAAA,KAAC,MAAA,CACC,OAAO,eACP,KAAK,OACL,YAAY,MACZ,QAAQ,YACR,cAAc,QACd,eAAe,QACf,UAAU,UACV,OAAO,MACP,MAAM,MACN,MAAM,6BAEN,SAAA,CAACC,EAAAA,IAAA,OAAA,CAAK,GAAG,IAAI,GAAG,KAAK,GAAG,KAAK,GAAG,IAAK,CAAA,EACrCA,EAAAA,IAAC,QAAK,GAAG,IAAI,GAAG,IAAI,GAAG,KAAK,GAAG,GAAI,CAAA,EACnCA,EAAAA,IAAC,QAAK,GAAG,IAAI,GAAG,KAAK,GAAG,KAAK,GAAG,IAAK,CAAA,CAAA,CAAA,CACvC,CAAA,CAAA,CACF,EACCA,EAAA,IAAA,KAAA,CAAG,UAAU,2CAA4C,YAAS,OAAO,EAC1EA,EAAAA,IAAC,UAAO,KAAK,SAAS,UAAU,OAAO,QAAS,IAAMH,EACpD,EAAA,SAAAE,EAAA,KAAC,MAAA,CACC,OAAO,eACP,KAAK,OACL,YAAY,MACZ,QAAQ,YACR,cAAc,QACd,eAAe,QACf,UAAU,UACV,OAAO,MACP,MAAM,MACN,MAAM,6BAEN,SAAA,CAACC,EAAAA,IAAA,OAAA,CAAK,GAAG,KAAK,GAAG,IAAI,GAAG,KAAK,GAAG,IAAK,CAAA,EACrCA,EAAAA,IAAC,QAAK,GAAG,IAAI,GAAG,KAAK,GAAG,KAAK,GAAG,IAAK,CAAA,CAAA,CAAA,CAAA,EAEzC,CACF,CAAA,CAAA,CAEJ,CC1CA,SAAwB4N,IAAO,CAC7B,KAAM,CAAC1B,EAAYC,CAAa,EAAInP,WAAS,EAAK,EAE5C6Q,EAAqBla,EAAkBsC,EAAM,eAAe,EAC5D6X,EAAqBna,EAAkBsC,EAAM,eAAe,EAC5D8X,EAAapa,EAAkBsC,EAAM,OAAO,EAC5C,CAAE,KAAApB,GAAS0J,KAEXyP,EAAqBhT,KACrBiT,EAAiB/S,KACjBgT,EAAe5S,GAAmB,CAAE,QAAS,CAAC,CAACzG,EAAM,EAE3DsJ,OAAAA,EAAAA,UAAU,IAAM,CACV8P,EAAe,KACjBH,EAAmBG,EAAe,IAAI,EAC7BA,EAAe,SAChB,QAAA,MAAM,0BAA2BA,EAAe,KAAK,GAE9D,CAACA,EAAe,KAAMA,EAAe,OAAO,CAAC,EAEhD9P,EAAAA,UAAU,IAAM,CACV+P,EAAa,KACfH,EAAWG,EAAa,IAAI,EACnBA,EAAa,SACd,QAAA,MAAM,wBAAyBA,EAAa,KAAK,GAE1D,CAACA,EAAa,KAAMA,EAAa,OAAO,CAAC,EAE5C/P,EAAAA,UAAU,IAAM,CACV6P,EAAmB,KACrBH,EAAmBG,EAAmB,IAAI,EACjCA,EAAmB,SACpB,QAAA,MAAM,+BAAgCA,EAAmB,KAAK,GAEvE,CAACA,EAAmB,KAAMA,EAAmB,OAAO,CAAC,EAIpDjO,EAAA,KAAA8C,WAAA,CAAA,SAAA,CAAC9C,EAAAA,KAAA,MAAA,CAAI,UAAU,gBACb,SAAA,CAACC,EAAAA,IAAAiM,GAAA,CAAI,WAAAC,EAAwB,cAAAC,CAA8B,CAAA,QAC1D,MAAI,CAAA,UAAU,gDACb,SAACpM,EAAA,KAAA,MAAA,CAAI,UAAU,qIACb,SAAA,CAAAC,MAAC2N,IAAU,cAAAxB,EAA8B,QACxCgC,GAAO,EAAA,CAAA,CAAA,CACV,CACF,CAAA,CAAA,EACF,QACCzP,GAAe,EAAA,CAClB,CAAA,CAAA,CAEJ,CC5DA,SAAS0P,GAAiB9L,EAAO+L,EAAmB,GAAO,CACpChM,EAAM,OAAC,SAAS,KAAK,EAE1ClE,EAAAA,UAAU,IAAM,CACd,SAAS,MAAQmE,CACrB,EAAK,CAACA,CAAK,CAAC,CASZ,CCfA,SAAwBgM,IAAU,CAE9B,OAAAvO,EAAA,KAAC,MAAA,CACC,OAAO,eACP,KAAK,OACL,YAAY,MACZ,QAAQ,YACR,cAAc,QACd,eAAe,QACf,UAAU,UACV,OAAO,MACP,MAAM,MACN,MAAM,6BAEN,SAAA,CAAAC,MAAC,UAAO,GAAG,KAAK,GAAG,KAAK,EAAE,IAAI,EAC9BA,EAAAA,IAAC,QAAK,GAAG,KAAK,GAAG,IAAI,GAAG,KAAK,GAAG,GAAI,CAAA,EACpCA,EAAAA,IAAC,QAAK,GAAG,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG,IAAK,CAAA,EACtCA,EAAAA,IAAC,QAAK,GAAG,OAAO,GAAG,OAAO,GAAG,OAAO,GAAG,MAAO,CAAA,EAC9CA,EAAAA,IAAC,QAAK,GAAG,QAAQ,GAAG,QAAQ,GAAG,QAAQ,GAAG,OAAQ,CAAA,EAClDA,EAAAA,IAAC,QAAK,GAAG,IAAI,GAAG,KAAK,GAAG,IAAI,GAAG,IAAK,CAAA,EACpCA,EAAAA,IAAC,QAAK,GAAG,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG,IAAK,CAAA,EACtCA,EAAAA,IAAC,QAAK,GAAG,OAAO,GAAG,QAAQ,GAAG,OAAO,GAAG,OAAQ,CAAA,EAChDA,EAAAA,IAAC,QAAK,GAAG,QAAQ,GAAG,OAAO,GAAG,QAAQ,GAAG,MAAO,CAAA,CAAA,CAAA,CAAA,CAGtD,CCzBA,SAAwBuO,IAAgB,CAEpC,OAAAvO,EAAA,IAAC,MAAA,CACC,MAAM,6BACN,KAAK,OACL,QAAQ,YACR,YAAY,MACZ,OAAO,eACP,cAAY,OACZ,UAAU,UAEV,SAAAA,EAAA,IAAC,OAAA,CACC,cAAc,QACd,eAAe,QACf,EAAE,6DAAA,CACJ,CAAA,CAAA,CAGN,CClBA,SAAwBwO,IAAc,CAElC,OAAAzO,EAAA,KAAC,MAAA,CACC,OAAO,eACP,KAAK,OACL,YAAY,MACZ,QAAQ,YACR,cAAc,QACd,eAAe,QACf,UAAU,UACV,OAAO,MACP,MAAM,MACN,MAAM,6BAEN,SAAA,CAACC,EAAAA,IAAA,OAAA,CAAK,EAAE,0FAA2F,CAAA,EACnGA,EAAAA,IAAC,QAAK,GAAG,KAAK,GAAG,IAAI,GAAG,KAAK,GAAG,IAAK,CAAA,EACrCA,EAAAA,IAAC,QAAK,GAAG,KAAK,GAAG,KAAK,GAAG,QAAQ,GAAG,IAAK,CAAA,CAAA,CAAA,CAAA,CAG/C,CCVA,SAAwByO,IAAU,CACgBzR,EAAAA,SAAS,EAAK,EACxD,MAAA0R,EAAU/a,EAAkBsC,EAAM,IAAI,EACtCvF,EAAeiO,EAAe1I,EAAM,YAAY,EAChD,CAAE,MAAAqM,EAAQ,QAAW5R,GAAgB,CAAA,EAE3C0d,GAAiB9L,CAAK,EAEhB,MAAAxC,EAAgBnQ,GAAM,CAC1BA,EAAE,eAAe,EACX,KAAA,CAAE,UAAAgf,CAAU,EAAIhf,EAAE,OAClBif,EAAQD,EAAU,MAAM,GAAG,EAAE,CAAC,EAAE,OACtCD,EAAQE,CAAK,CAAA,EAQf,aACG,MAAI,CAAA,UAAU,kFACb,SAAC7O,EAAA,KAAA,MAAA,CAAI,UAAU,6FACb,SAAA,CAAAC,EAAA,IAAC,KAAA,CACC,GAAG,gBACH,UAAU,6HAET,SAAA,SAAkC,CACrC,EACAD,EAAAA,KAAC,MAAI,CAAA,UAAU,0CACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,+CACb,SAAA,CAACA,EAAAA,KAAA,KAAA,CAAG,UAAU,0EACZ,SAAA,CAAAC,EAAA,IAACsO,GAAQ,EAAA,EAAE,IAAA,EAEb,EACAvO,EAAAA,KAAC,KAAG,CAAA,UAAU,kDACZ,SAAA,CAAAC,EAAA,IAAC,SAAA,CACC,QAASF,EACT,UAAU,4FACX,SAAA,gBAAA,CAED,EACAE,EAAA,IAAC,SAAA,CACC,QAASF,EACT,UAAU,4FACX,SAAA,yBAAA,CAED,EACAE,EAAA,IAAC,SAAA,CACC,QAASF,EACT,UAAU,4FACX,SAAA,6BAAA,CAED,CAAA,EACF,CAAA,EACF,EACAC,EAAAA,KAAC,MAAI,CAAA,UAAU,+CACb,SAAA,CAACA,EAAAA,KAAA,KAAA,CAAG,UAAU,0EACZ,SAAA,CAAAC,EAAA,IAACuO,GAAc,EAAA,EAAE,cAAA,EAEnB,EACAxO,EAAAA,KAAC,KAAG,CAAA,UAAU,kDACZ,SAAA,CAACC,EAAA,IAAA,KAAA,CAAG,UAAU,mDAAmD,SAEjE,kBAAA,EACCA,EAAA,IAAA,KAAA,CAAG,UAAU,mDAAmD,SAEjE,aAAA,EACCA,EAAA,IAAA,KAAA,CAAG,UAAU,mDAAmD,SAEjE,eAAA,CAAA,EACF,CAAA,EACF,EACAD,EAAAA,KAAC,MAAI,CAAA,UAAU,+CACb,SAAA,CAACA,EAAAA,KAAA,KAAA,CAAG,UAAU,0EACZ,SAAA,CAAAC,EAAA,IAACwO,GAAY,EAAA,EAAE,IAAA,EAEjB,EACAzO,EAAAA,KAAC,KAAG,CAAA,UAAU,kDACZ,SAAA,CAACC,EAAA,IAAA,KAAA,CAAG,UAAU,mDAAmD,SAEjE,gBAAA,EACCA,EAAA,IAAA,KAAA,CAAG,UAAU,mDAAmD,SAEjE,kBAAA,EACCA,EAAA,IAAA,KAAA,CAAG,UAAU,mDAAmD,SAEjE,uBAAA,CAAA,EACF,CAAA,EACF,CAAA,EACF,EAaAA,EAAAA,IAAC,MAAI,CAAA,UAAU,kFAAmF,CAAA,CAAA,CACpG,CAAA,CACF,CAAA,CAEJ,CCpHwB,SAAA6O,GAAe,CAAE,cAAAC,GAAiB,CAEtD,OAAA9O,EAAA,IAAC,SAAA,CACC,QAAS8O,EACT,UAAU,8LAEV,SAAA/O,EAAA,KAAC,MAAA,CACC,OAAO,eACP,KAAK,OACL,YAAY,IACZ,QAAQ,YACR,cAAc,QACd,eAAe,QACf,UAAU,cACV,OAAO,MACP,MAAM,MACN,MAAM,6BAEN,SAAA,CAACC,EAAAA,IAAA,OAAA,CAAK,GAAG,KAAK,GAAG,IAAI,GAAG,KAAK,GAAG,IAAK,CAAA,EACrCA,EAAAA,IAAC,WAAS,CAAA,OAAO,kBAAmB,CAAA,CAAA,CAAA,CACtC,CAAA,CAAA,CAGN,CCvBwB,SAAA+O,GAAO,CAAE,SAAAjS,EAAU,QAAAkS,EAAU,GAAI,WAAAC,EAAa,GAAI,QAAAC,GAAW,CACnF,OACGlP,EAAA,IAAA,MAAA,CAAI,UAAW,wBAAwBgP,IAAW,QAAAE,EACjD,SAAAlP,EAAA,IAAC,MAAA,CACC,UAAW,mEAAmEiP,IAE7E,SAAAnS,CAAA,CAEL,CAAA,CAAA,CAEJ,CCVA,SAAwBqS,IAAY,CAEhC,OAAApP,EAAA,KAAC,MAAA,CACC,OAAO,eACP,KAAK,OACL,YAAY,IACZ,QAAQ,YACR,cAAc,QACd,eAAe,QACf,UAAU,UACV,OAAO,MACP,MAAM,MACN,MAAM,6BAEN,SAAA,CAACC,EAAAA,IAAA,OAAA,CAAK,EAAE,0EAA2E,CAAA,EAClFA,EAAA,IAAA,OAAA,CAAK,EAAE,IAAI,EAAE,IAAI,MAAM,IAAI,OAAO,IAAI,GAAG,IAAI,GAAG,IAAI,CAAA,CAAA,CAAA,CAG3D,CChBA,MAAMoP,GAAY,CAAC,CAAE,KAAAC,EAAM,aAAAC,KAAmB,CACtC,MAAAC,EAAUlN,SAAO,IAAI,EAGzB,OAAAtC,EAAA,KAAC,MAAI,CAAA,UAAU,sBACb,SAAA,CAACC,EAAAA,IAAAwP,GAAA,CAAQ,KAAAH,EAAY,QAAAE,CAAkB,CAAA,EACtCvP,EAAA,IAAA,MAAA,CAAI,UAAU,sBACb,SAACA,EAAAA,IAAA,OAAA,CAAK,IAAKuP,EAAS,UAAW,iCAAiCF,IAC7D,SAAAC,CACH,CAAA,EACF,CACF,CAAA,CAAA,CAEJ,EAEME,GAAUC,GAAM,KAAK,CAAC,CAAE,KAAAJ,EAAM,QAAAE,KAAc,CAChD,KAAM,CAACG,EAAUC,CAAW,EAAI3S,WAAS,EAAK,EAE5C,OAAA+C,EAAA,KAAC,MAAI,CAAA,UAAU,+GACb,SAAA,CAACC,EAAA,IAAA,OAAA,CAAK,UAAU,GAAI,SAAKqP,EAAA,EACzBrP,EAAA,IAAC,SAAA,CACC,UAAU,qBACV,QAAS,SAAY,OACb,MAAA4P,GAAald,EAAA6c,EAAQ,UAAR,YAAA7c,EAAiB,YAChCkd,GACF,UAAU,UAAU,UAAUA,CAAU,EAAE,KAAK,IAAM,CACnDD,EAAY,EAAI,EAChB,WAAW,IAAMA,EAAY,EAAK,EAAG,GAAI,CAAA,CAC1C,CACL,EAEC,WAEG5P,EAAAA,KAAA8C,EAAA,SAAA,CAAA,SAAA,CAAA7C,EAAA,IAACiB,GAAU,EAAA,EAAE,SAAA,CAAA,CAEf,EAGElB,EAAAA,KAAA8C,EAAA,SAAA,CAAA,SAAA,CAAA7C,EAAA,IAACmP,GAAU,EAAA,EAAE,WAAA,EAEf,CAAA,CAEJ,CACF,CAAA,CAAA,CAEJ,CAAC,EC4QKU,GAAa,CACjB,SACA,aACA,OACA,KACA,OACA,IACA,MACA,SACA,MACA,OACA,UACA,OACA,SACA,OACA,MACA,WACA,WACA,aACA,OACA,MACA,eACA,YACA,cACA,IACA,OACA,OACA,OACA,QACA,MACA,QACA,aACA,QACA,OACA,MACA,MACF,ECvVMC,GAAUL,GAAM,KAAK,CAAC,CAAE,QAAAM,KAAc,CAC1C,IAAIC,EAAgB,CAClB,CAACC,GAAa,CAAE,OAAQ,SAAU,EAClC,CACEC,GACA,CACE,OAAQ,GACR,cAAe,GACf,OAAQL,EACV,CACF,EACA,CAACM,EAAS,CAAA,EAIV,OAAAnQ,EAAA,IAACoQ,GAAA,CACC,cAAe,CAACC,GAAW,CAACC,GAAY,CAAE,qBAAsB,EAAM,CAAC,CAAC,EACxE,cAAAN,EACA,WAAW,OACX,WAAY,CACV,KAAAO,GACA,EAAAC,EAEF,EAEC,SAAAT,CAAA,CAAA,CAGP,CAAC,EAEKQ,GAAOd,GAAM,KAAMxM,GAAU,CACjC,KAAM,CAAE,OAAAwN,EAAQ,UAAAlQ,EAAW,SAAAzD,CAAA,EAAamG,EAClCyN,EAAQ,iBAAiB,KAAKnQ,GAAa,EAAE,EAC7C8O,EAAOqB,GAASA,EAAM,CAAC,EAE7B,OAAID,EACKzQ,EAAA,IAAC,OAAK,CAAA,UAAAO,EAAuB,SAAAzD,CAAS,CAAA,QAErCsS,GAAU,CAAA,KAAMC,GAAQ,OAAQ,aAAcvS,CAAU,CAAA,CAEpE,CAAC,EAEK0T,GAAIf,GAAM,KAAMxM,GACZjD,EAAA,IAAA,IAAA,CAAE,UAAU,2BAA4B,0BAAO,QAAS,CAAA,CACjE,ECpDD,SAAwB2Q,IAAW,CAE/B,OAAA5Q,EAAA,KAAC,MAAA,CACC,OAAO,eACP,KAAK,OACL,YAAY,IACZ,QAAQ,YACR,cAAc,QACd,eAAe,QACf,UAAU,UACV,OAAO,MACP,MAAM,MACN,MAAM,6BAEN,SAAA,CAACC,EAAAA,IAAA,OAAA,CAAK,EAAE,4DAA6D,CAAA,EACrEA,EAAAA,IAAC,OAAK,CAAA,EAAE,yDAA0D,CAAA,CAAA,CAAA,CAAA,CAGxE,CClBA,SAAwB4Q,IAAa,CAEjC,OAAA7Q,EAAA,KAAC,MAAA,CACC,OAAO,eACP,KAAK,OACL,YAAY,IACZ,QAAQ,YACR,cAAc,QACd,eAAe,QACf,UAAU,UACV,OAAO,MACP,MAAM,MACN,MAAM,6BAEN,SAAA,CAACC,EAAAA,IAAA,WAAA,CAAS,OAAO,eAAgB,CAAA,EACjCA,EAAAA,IAAC,WAAS,CAAA,OAAO,mBAAoB,CAAA,EACrCA,EAAAA,IAAC,OAAK,CAAA,EAAE,qEAAsE,CAAA,CAAA,CAAA,CAAA,CAGpF,CCdA,SAAwB6Q,GAAa,CACnC,WAAAC,EACA,UAAAC,EACA,gBAAAC,EACA,aAAAtgB,EACA,aAAAyC,EACA,QAAAxC,EACA,WAAAsgB,CACF,EAAG,CACK,KAAA,CAAE,SAAAngB,CAAa,EAAAJ,EACf,CAACgf,EAAUC,CAAW,EAAIF,GAAM,SAAS,EAAK,EAE9CyB,EAEJ,CAAC,CAAC,CAAC,cAAe,SAAU,iBAAkB,SAAU,QAAQ,EAAE,KAAMvhB,GAAMA,IAAMmB,CAAQ,EAGxFqgB,EACJ,EAACxgB,GAAA,MAAAA,EAAS,SACVA,GAAA,YAAAA,EAAS,kBACT,EAACA,GAAA,MAAAA,EAAS,eACV,CAACmgB,GACDI,EAGE,IAAAE,EAEF,EAACzgB,GAAA,MAAAA,EAAS,kBACV,EAACA,GAAA,MAAAA,EAAS,eACV,CAACmgB,GACD,CAAC3d,GACD+d,EAGA,OAAAnR,EAAA,KAAC,MAAI,CAAA,UAAU,qKACZ,SAAA,CACCoR,EAAAnR,EAAA,IAAC,SAAA,CACC,UAAU,6MACV,QAAS+Q,EACT,KAAK,SACL,MAAM,KAGN,eAACJ,GAAS,EAAA,CAAA,CAAA,EAEV,KACHS,EACCpR,EAAA,IAAC,SAAA,CACC,UAAU,oNACV,QAASiR,EACT,KAAK,SACL,MAAM,OAGN,eAACI,GAAe,EAAA,CAAA,CAAA,EAEhB,KAEJrR,EAAA,IAAC,SAAA,CACC,UAAWC,EACT,6MACAtP,GAAA,MAAAA,EAAS,gBAAkB,GAAK,QAClC,EACA,QAAS,IAAMqgB,EAAgBrB,CAAW,EAC1C,KAAK,SACL,MAAOD,EAAW,MAAQ,KAEzB,SAAWA,EAAA1P,EAAAA,IAACiB,GAAU,CAAA,CAAA,QAAMkO,GAAU,EAAA,CAAA,CACzC,CACF,CAAA,CAAA,CAEJ,CC5EA,SAAwBmC,GAAc,CAAE,WAAArI,EAAY,aAAAsI,EAAc,cAAAC,GAAiB,CACjF,MAAMC,EAAW,IAAM,CACrBD,EAAcvI,EAAa,CAAC,CAAA,EAGxByI,EAAO,IAAM,CACjBF,EAAcvI,EAAa,CAAC,CAAA,EAEvB,OAAAsI,EAAe,EAElBxR,EAAA,KAAA8C,EAAA,SAAA,CAAA,SAAA,CAAA7C,EAAA,IAAC,SAAA,CACC,UAAU,qEACV,QAASyR,EACT,SAAUxI,GAAc,EAExB,SAAAjJ,EAAA,IAAC,MAAA,CACC,OAAO,eACP,KAAK,OACL,YAAY,MACZ,QAAQ,YACR,cAAc,QACd,eAAe,QACf,UAAU,UACV,OAAO,MACP,MAAM,MACN,MAAM,6BAEN,SAAAA,EAAAA,IAAC,WAAS,CAAA,OAAO,iBAAkB,CAAA,CAAA,CACrC,CAAA,CACF,EACAD,EAAAA,KAAC,OAAK,CAAA,UAAU,0BACb,SAAA,CAAakJ,EAAA,EAAE,IAAEsI,CAAA,EACpB,EACAvR,EAAA,IAAC,SAAA,CACC,UAAU,qEACV,QAAS0R,EACT,SAAUzI,GAAcsI,EAAe,EAEvC,SAAAvR,EAAA,IAAC,MAAA,CACC,OAAO,eACP,KAAK,OACL,YAAY,MACZ,QAAQ,YACR,cAAc,QACd,eAAe,QACf,UAAU,UACV,OAAO,MACP,MAAM,MACN,MAAM,6BAEN,SAAAA,EAAAA,IAAC,WAAS,CAAA,OAAO,gBAAiB,CAAA,CAAA,CACpC,CAAA,CACF,CAAA,CACF,CAAA,EACE,IACN,CCvDwB,SAAA2R,GAAQ,CAAE,OAAAC,EAAS,GAAO,KAAAC,EAAO,GAAO,KAAA7N,EAAO,IAAM,CAC3E,IAAI8N,EAAO,KACPC,EAAS/N,EACTgO,EAAQhO,EAUV,OAAAhE,EAAA,IAAC,MAAA,CACC,MAAAgS,EACA,OAAAD,EACA,QAAS,OAAOD,KAAQA,IACxB,KAAK,OACL,MAAM,6BACN,YAAY,MAEZ,SAAA9R,EAAA,IAAC,OAAA,CACC,EAAE,ghIACF,KAAK,cAAA,CACP,CAAA,CAAA,CAGN,CC3BA,SAAwBiS,GAAS,CAAE,KAAAjO,EAAO,IAAM,CAE5C,OAAAjE,EAAA,KAAC,MAAA,CACC,MAAOiE,EACP,OAAQA,EACR,QAAQ,YACR,KAAK,OACL,MAAM,6BAEN,SAAA,CAACjE,EAAAA,KAAA,IAAA,CAAE,SAAS,sBACV,SAAA,CAAAC,EAAA,IAAC,OAAA,CACC,EAAE,ihDACF,KAAK,6BAAA,CACP,EACAA,EAAA,IAAC,OAAA,CACC,EAAE,0qCACF,KAAK,6BAAA,CACP,EACAA,EAAA,IAAC,OAAA,CACC,EAAE,yhBACF,KAAK,6BAAA,CACP,EACAA,EAAA,IAAC,OAAA,CACC,QAAQ,OACR,EAAE,0qCACF,KAAK,6BAAA,CACP,EACAA,EAAA,IAAC,OAAA,CACC,QAAQ,MACR,EAAE,yhBACF,KAAK,6BAAA,CACP,CAAA,EACF,SACC,OACC,CAAA,SAAA,CAAAD,EAAA,KAAC,iBAAA,CACC,GAAG,wBACH,GAAG,SACH,GAAG,QACH,GAAG,UACH,GAAG,UACH,cAAc,iBAEd,SAAA,CAACC,EAAAA,IAAA,OAAA,CAAK,UAAU,SAAU,CAAA,EACzBA,EAAA,IAAA,OAAA,CAAK,OAAO,SAAS,UAAU,UAAU,EACzCA,EAAA,IAAA,OAAA,CAAK,OAAO,SAAS,UAAU,UAAU,EACzCA,EAAA,IAAA,OAAA,CAAK,OAAO,QAAQ,UAAU,UAAU,EACxCA,EAAA,IAAA,OAAA,CAAK,OAAO,SAAS,UAAU,UAAU,EACzCA,EAAA,IAAA,OAAA,CAAK,OAAO,SAAS,UAAU,UAAU,EACzCA,EAAA,IAAA,OAAA,CAAK,OAAO,SAAS,UAAU,UAAU,EACzCA,EAAA,IAAA,OAAA,CAAK,OAAO,SAAS,UAAU,UAAU,EACzCA,EAAA,IAAA,OAAA,CAAK,OAAO,IAAI,UAAU,UAAU,CAAA,CAAA,CACvC,EACAD,EAAA,KAAC,iBAAA,CACC,GAAG,wBACH,GAAG,SACH,GAAG,UACH,GAAG,UACH,GAAG,UACH,cAAc,iBAEd,SAAA,CAACC,EAAAA,IAAA,OAAA,CAAK,UAAU,SAAU,CAAA,EACzBA,EAAA,IAAA,OAAA,CAAK,OAAO,SAAS,UAAU,UAAU,EACzCA,EAAA,IAAA,OAAA,CAAK,OAAO,SAAS,UAAU,UAAU,EACzCA,EAAA,IAAA,OAAA,CAAK,OAAO,SAAS,UAAU,UAAU,EACzCA,EAAA,IAAA,OAAA,CAAK,OAAO,SAAS,UAAU,UAAU,EACzCA,EAAA,IAAA,OAAA,CAAK,OAAO,SAAS,UAAU,UAAU,EACzCA,EAAA,IAAA,OAAA,CAAK,OAAO,SAAS,UAAU,UAAU,EACzCA,EAAA,IAAA,OAAA,CAAK,OAAO,QAAQ,UAAU,UAAU,EACxCA,EAAA,IAAA,OAAA,CAAK,OAAO,IAAI,UAAU,UAAU,CAAA,CAAA,CACvC,EACAD,EAAA,KAAC,iBAAA,CACC,GAAG,wBACH,GAAG,UACH,GAAG,UACH,GAAG,UACH,GAAG,UACH,cAAc,iBAEd,SAAA,CAACC,EAAAA,IAAA,OAAA,CAAK,UAAU,SAAU,CAAA,EACzBA,EAAA,IAAA,OAAA,CAAK,OAAO,SAAS,UAAU,UAAU,EACzCA,EAAA,IAAA,OAAA,CAAK,OAAO,SAAS,UAAU,UAAU,EACzCA,EAAA,IAAA,OAAA,CAAK,OAAO,SAAS,UAAU,UAAU,EACzCA,EAAA,IAAA,OAAA,CAAK,OAAO,IAAI,UAAU,UAAU,CAAA,CAAA,CACvC,EACAD,EAAA,KAAC,iBAAA,CACC,GAAG,wBACH,GAAG,UACH,GAAG,UACH,GAAG,UACH,GAAG,UACH,cAAc,iBAEd,SAAA,CAACC,EAAAA,IAAA,OAAA,CAAK,UAAU,OAAQ,CAAA,EACvBA,EAAA,IAAA,OAAA,CAAK,OAAO,SAAS,UAAU,UAAU,EACzCA,EAAA,IAAA,OAAA,CAAK,OAAO,SAAS,UAAU,UAAU,EACzCA,EAAA,IAAA,OAAA,CAAK,OAAO,SAAS,UAAU,UAAU,EACzCA,EAAA,IAAA,OAAA,CAAK,OAAO,OAAO,UAAU,UAAU,EACvCA,EAAA,IAAA,OAAA,CAAK,OAAO,SAAS,UAAU,UAAU,EACzCA,EAAA,IAAA,OAAA,CAAK,OAAO,QAAQ,UAAU,UAAU,EACxCA,EAAA,IAAA,OAAA,CAAK,OAAO,SAAS,UAAU,UAAU,EACzCA,EAAA,IAAA,OAAA,CAAK,OAAO,SAAS,UAAU,UAAU,EACzCA,EAAA,IAAA,OAAA,CAAK,OAAO,SAAS,UAAU,UAAU,EACzCA,EAAA,IAAA,OAAA,CAAK,OAAO,SAAS,UAAU,UAAU,EAC1CA,EAAAA,IAAC,OAAK,CAAA,OAAO,GAAI,CAAA,CAAA,CAAA,CACnB,EACAD,EAAA,KAAC,iBAAA,CACC,GAAG,wBACH,GAAG,UACH,GAAG,WACH,GAAG,UACH,GAAG,UACH,cAAc,iBAEd,SAAA,CAACC,EAAAA,IAAA,OAAA,CAAK,UAAU,OAAQ,CAAA,EACvBA,EAAA,IAAA,OAAA,CAAK,OAAO,SAAS,UAAU,UAAU,EACzCA,EAAA,IAAA,OAAA,CAAK,OAAO,SAAS,UAAU,UAAU,EACzCA,EAAA,IAAA,OAAA,CAAK,OAAO,SAAS,UAAU,UAAU,EACzCA,EAAA,IAAA,OAAA,CAAK,OAAO,OAAO,UAAU,UAAU,EACvCA,EAAA,IAAA,OAAA,CAAK,OAAO,SAAS,UAAU,UAAU,EACzCA,EAAA,IAAA,OAAA,CAAK,OAAO,QAAQ,UAAU,UAAU,EACxCA,EAAA,IAAA,OAAA,CAAK,OAAO,SAAS,UAAU,UAAU,EACzCA,EAAA,IAAA,OAAA,CAAK,OAAO,SAAS,UAAU,UAAU,EACzCA,EAAA,IAAA,OAAA,CAAK,OAAO,SAAS,UAAU,UAAU,EACzCA,EAAA,IAAA,OAAA,CAAK,OAAO,SAAS,UAAU,UAAU,EAC1CA,EAAAA,IAAC,OAAK,CAAA,OAAO,GAAI,CAAA,CAAA,CAAA,CACnB,EACCA,EAAA,IAAA,WAAA,CAAS,GAAG,gBACX,eAAC,OAAK,CAAA,MAAM,KAAK,OAAO,KAAK,KAAK,QAAQ,UAAU,eAAgB,CAAA,EACtE,CAAA,EACF,CAAA,CAAA,CAAA,CAGN,CClIA,MAAMkS,GAAWjP,GAAU,CAEzB,KAAM,CAAE,KAAAe,EAAO,GAAI,gBAAAmO,EAAiB,OAAAP,EAAQ,MAAAQ,CAAU,EAAAnP,EAEhD,CAAE,KAAApO,GAAS0J,KAEb,GAAA4T,EAEA,OAAAnS,EAAA,IAAC,MAAA,CACC,OAAOnL,GAAA,YAAAA,EAAM,OAAQ,OACrB,MAAO,CACL,MAAOmP,EACP,OAAQA,CACV,EACA,UAAW,6CAA8Cf,GAAA,YAAAA,EAAO,WAEhE,SAAAjD,EAAA,IAAC,MAAA,CACC,UAAU,aACV,KACEnL,GAAA,YAAAA,EAAM,SACN,mDAAkDA,GAAA,YAAAA,EAAM,OAAQ,wCAElE,IAAI,QAAA,CACN,CAAA,CAAA,EACF,GAEK,CAACsd,EAAiB,CACnB,KAAA,CAAE,SAAArhB,EAAU,MAAAoC,CAAU,EAAA+P,EAE5B,IAAIoP,EAAMC,EAAIC,EACd,GAAIzhB,IAAa,cAAe,CACxB,KAAA,CAAE,aAAA0hB,CAAiB,EAAAvP,EACzBoP,EAAQrS,EAAA,IAAA2R,GAAA,CAAQ,KAAM3N,EAAO,EAAK,CAAA,EAC7BsO,EAAA,+CACLC,EAAOC,GAAgB,kBACd1hB,IAAa,SAAU,CAC1B,KAAA,CAAE,aAAA0hB,CAAiB,EAAAvP,EACzBoP,EAAQrS,EAAA,IAAA2R,GAAA,CAAQ,KAAM3N,EAAO,EAAK,CAAA,EAClCsO,EACEF,GAASA,EAAM,YAAY,EAAE,WAAW,OAAO,EAC3C,UACAI,EACE,sBAAsBZ,EAAS,IAAO,KACtC,sBAAsBA,EAAS,IAAO,KAC9CW,EAAOC,GAAgB,kBACd1hB,IAAa,SAAU,CAC1B,KAAA,CAAE,WAAA2hB,CAAe,EAAAxP,EAChBoP,EAAArS,EAAA,IAAC,MAAI,CAAA,IAAI,kBAAmB,CAAA,EACnCuS,EAAOE,GAAc,gBACZ3hB,IAAa,SAAU,CAC1B,KAAA,CAAE,UAAA4hB,CAAc,EAAAzP,EACtBoP,EAAQrS,EAAA,IAAAiS,GAAA,CAAS,KAAMjO,EAAO,EAAK,CAAA,EACnCsO,EAAKI,EAAY,wDAA0D,cAC3EH,EAAOG,EAAY,SAAW,cACrB5hB,IAAa,kBACtBuhB,EAAQrS,EAAA,IAAA2R,GAAA,CAAQ,KAAM3N,EAAO,EAAK,CAAA,EAEhCsO,EAAAF,GAASA,EAAM,YAAc,EAAA,WAAW,OAAO,EAC3C,UACA,qBAAqBR,EAAS,IAAO,KACpCW,EAAA,WACEzhB,IAAa,MACtBuhB,EAAQrS,EAAA,IAAA2R,GAAA,CAAQ,KAAM3N,EAAO,EAAK,CAAA,EAC7BsO,EAAA,OACEC,EAAA,QAEPF,EAAQrS,EAAA,IAAA2R,GAAA,CAAQ,KAAM3N,EAAO,EAAK,CAAA,EAC7BsO,EAAA,OACEC,EAAA,WAIP,OAAAxS,EAAA,KAAC,MAAA,CACC,MAAOwS,EACP,MAAO,CACL,WAAYD,GAAM,cAClB,MAAOtO,EACP,OAAQA,CACV,EACA,UACE,oEAAqEf,GAAA,YAAAA,EAAO,WAG7E,SAAA,CAAAoP,EACAnf,GACC8M,EAAA,IAAC,OAAK,CAAA,UAAU,gJAAgJ,SAEhK,IAAA,CAAA,CAAA,CAAA,EAKV,EC3FM2S,GAAoB,IAAM,CAC9B,MAAM9Q,EAAsBlD,EAAe1I,EAAM,YAAY,GAAK,CAAA,EAC5DpC,EAAgBF,EAAkBsC,EAAM,UAAU,EAClD9C,EAAewL,EAAe1I,EAAM,YAAY,EAChDhF,EAAkB0N,EAAe1I,EAAM,eAAe,EAEtD,CAAE,SAAAJ,CAAQ,EAAKI,EAAM,SAAS4L,GAAA,YAAAA,EAAqB,QAAQ,EAE3DvO,EAAgBqL,EAAe1I,EAAM,aAAa,EAElD,CAAClE,EAAU6B,CAAW,EAAIgC,EAAeK,EAAM,QAAQ,EAEvD2c,EAAM,CACV,CAAE,KAAA7d,EAAM,gBAAA8d,EAAkB,KAAM,eAAAhiB,EAAiB,KAAM,UAAA2X,EAAY,IAAM,EACzE,CAAE,aAAAxJ,EAAe,EAAK,EAAK,CAAE,IAC1B,yBACH,GAAM7L,GAAgB4B,IAAS,GAC7B,OAIF,KAAM,CAAE,SAAAjE,CAAU,EAAG+Q,EACrB,IAAIjR,EAAiB,CAAA,EACjBkiB,EAAiB,GACrB,GAAIhiB,IAAa,eAAiBA,IAAa,SAC7CF,EAAiB,CACf,SAAAE,EACA,OACE+Q,GAAA,YAAAA,EAAqB,UACrBpP,GAAAC,EAAAzB,EAAgBH,CAAQ,IAAxB,YAAA4B,EAA2B,kBAA3B,YAAAD,EAA6C,KAC7C,gBACF,cAAcoP,GAAA,YAAAA,EAAqB,eAAgB,KACnD,cAAcA,GAAA,YAAAA,EAAqB,eAAgB,KACnD,aAAaA,GAAA,YAAAA,EAAqB,cAAe,EACjD,OAAOA,GAAA,YAAAA,EAAqB,QAAS,EACrC,kBAAkBA,GAAA,YAAAA,EAAqB,mBAAoB,EAC3D,mBAAmBA,GAAA,YAAAA,EAAqB,oBAAqB,EAC7D,OAAOjP,EAAA3B,EAAgBH,CAAQ,IAAxB,MAAA8B,EAA2B,YAAciD,EAAU,EAAG,IACrE,EACMid,EAAiBliB,EAAe,cAAgB,kBACvCE,IAAa,SACtBF,EAAiB,CACf,SAAAE,EACA,OACE+Q,GAAA,YAAAA,EAAqB,UACrB/O,GAAAH,EAAA1B,EAAgBH,CAAQ,IAAxB,YAAA6B,EAA2B,kBAA3B,YAAAG,EAA6C,KAC7C,aACF,YAAY+O,GAAA,YAAAA,EAAqB,aAAc,KAC/C,cAAcA,GAAA,YAAAA,EAAqB,eAAgB,KACnD,UAAUA,GAAA,YAAAA,EAAqB,WAAY,CACzC,CAAE,MAAO,CAAE,QAAS,EAAE,EAAI,OAAQ,CAAE,QAAS,GAAM,CACpD,EACD,aAAaA,GAAA,YAAAA,EAAqB,cAAe,GACjD,iBAAiBA,GAAA,YAAAA,EAAqB,kBAAmB,KACzD,MAAMA,GAAA,YAAAA,EAAqB,OAAQ,IACnC,MAAMA,GAAA,YAAAA,EAAqB,OAAQ,GACnC,OAAOhP,EAAA5B,EAAgBH,CAAQ,IAAxB,MAAA+B,EAA2B,YAAcgD,EAAU,EAAG,IACrE,EACMid,EAAiBliB,EAAe,cAAgB,kBACvCE,IAAa,SACtBF,EAAiB,CACf,SAAAE,EACA,WAAW+Q,GAAA,YAAAA,EAAqB,YAAa,GAC7C,eAAeA,GAAA,YAAAA,EAAqB,gBAAiB,KACrD,SAASA,GAAA,YAAAA,EAAqB,UAAW,KACzC,WAAWA,GAAA,YAAAA,EAAqB,YAAa,WAC7C,yBAAyBA,GAAA,YAAAA,EAAqB,0BAA2B,KACzE,uBAAuBA,GAAA,YAAAA,EAAqB,wBAAyB,KACrE,UAAUA,GAAA,YAAAA,EAAqB,WAAY,KAC3C,cAAcA,GAAA,YAAAA,EAAqB,eAAgB,EACnD,OAAOkR,EAAA9hB,EAAgBH,CAAQ,IAAxB,MAAAiiB,EAA2B,YAAcld,EAAU,EAAG,IACrE,EACMid,EAAiBliB,EAAe,UAAY,SAAW,iBAC9CE,IAAa,iBACtBF,EAAiB,CACf,SAAAE,EACA,OACE+Q,GAAA,YAAAA,EAAqB,UACrBmR,GAAAC,EAAAhiB,EAAgBH,CAAQ,IAAxB,YAAAmiB,EAA2B,kBAA3B,YAAAD,EAA6C,KAC7C,8BACF,OAAOE,EAAAjiB,EAAgBH,CAAQ,IAAxB,MAAAoiB,EAA2B,YAAcrd,EAAU,EAAG,IACrE,EACMid,EAAiB,kBACRhiB,IAAa,KAAM,CAC5B,QAAQ,MAAM,uBAAuB,EACrC,WACK,CACL,QAAQ,MAAM,oBAAoBA,GAAU,EAC5C,OAGF,IAAIqiB,EAAkBphB,EAItBgD,EAAOA,EAAK,OACZ,MAAMqe,EAAgBC,KAItB,GAHAR,EACEA,IAAmBvf,GAAA,YAAAA,EAAe,YAAa,uCACjDzC,EAAiBA,IAAkBgR,GAAA,YAAAA,EAAqB,gBACpDhR,GAAkB,SAAU,CAC9B,QAAQ,MAAM,4CAA4C,EAC1D,OAEEA,GAAkB,QACpBgiB,EAAkB,uCAClBM,EAAkB,CAAA,EAClBtiB,EAAiB,MAEnB,MAAMyiB,EAAa,CACjB,OAAQ,OACR,KAAAve,EACA,QAAS,GACT,gBAAiB,GACjB,gBAAA8d,EACA,eAAAhiB,EACA,UAAWuiB,CACjB,EAGUrU,EAAkB,CACtB,OAAQ+T,EACR,KAAM,8CACN,gBAAiB9T,EAAewJ,EAAY4K,EAC5C,WAAYpU,EAAewJ,EAAY4K,GAAiB,IACxD,eAAAviB,EACA,WAAY,EAAAC,IAAa,eAAiBA,IAAa,UACvD,WAAY,EAClB,EAEUL,EAAa,CACjB,aAAc,CACZ,GAAGoR,EACH,eAAAhR,CACD,EACD,eAAAD,EACA,QAAS,CACP,GAAG0iB,EACH,wBAAyBtU,EAAewJ,EAAY,IACrD,EACD,SAAU2K,EACV,aAAAnU,EACA,gBAAAD,CACN,EAEI,QAAQ,IAAI,cAAehK,EAAMtE,CAAU,EAGzCmD,EADEoL,EACU,CAAC,GAAGmU,EAAiBpU,CAAe,EAEpC,CAAC,GAAGoU,EAAiBG,EAAYvU,CAAe,CAFX,EAInDlL,EAAcpD,CAAU,CAC5B,EAiBE,MAAO,CAAE,IAAAmiB,EAAK,WAfK,CAAC,CAAE,gBAAAC,KAAsB,CAC1C,MAAMxgB,EAAgBN,GAAA,YAAAA,EAAU,KAAMrC,GAAYA,EAAQ,WAAamjB,GAEnExgB,GAAiBA,EAAc,gBACjCugB,EAAI,CAAE,GAAGvgB,CAAa,EAAI,CAAE,aAAc,EAAI,CAAE,EAEhD,QAAQ,MACN,mFACR,CACA,EAM4B,eAJH,IAAM,CAC3BwB,EAAc,IAAI,CACtB,EAGA,EClKA,SAAS0f,GAAOC,EAAK,CACf,GAAA,CACF,KAAK,MAAMA,CAAG,QAEP,MAAA,EACT,CACO,MAAA,EACT,CAEA,SAAwBC,GAAQ,CAC9B,aAAA/iB,EACA,QAAAC,EACA,eAAA+iB,EACA,cAAAC,EACA,iBAAAC,EACA,WAAA3K,EACA,aAAAsI,EACA,cAAAC,CACF,EAAG,OACD,KAAM,CAAE,KAAAzc,EAAM,aAAA8e,EAAc,gBAAA1B,EAAiB,MAAAjf,EAAO,WAAA4gB,EAAY,WAAAC,CAAe,EAAApjB,EACzEwC,EAAewL,EAAe1I,EAAM,YAAY,EAChD+d,EAAmBrgB,EAAkBsC,EAAM,aAAa,EACxD,CAACge,EAAaC,CAAQ,EAAIlX,WAAS,EAAK,EACxCmX,EAAa9R,SAAO,IAAI,EACxB+R,EAAO,GAAC1hB,EAAA/B,GAAA,YAAAA,EAAS,WAAT,MAAA+B,EAAmB,QAC3B2hB,EAAO1jB,EAAQ,WAAagjB,EAC5B,CAAE,IAAAf,EAAK,WAAA3B,CAAW,EAAI0B,GAAkB,EACxC,CAAE,qBAAA3e,CAAA,EAAyBiC,EAAM,gBAAgB,EACjDqe,EAAUR,GAAc3gB,EACxBohB,EAAuBta,GAA4BtJ,EAAQ,eAAgB,CAC/E,QAAS,EAAA,CACV,EAQDwN,EAAAA,UAAU,IAAM,CACVmW,GAAW,CAACL,GACCP,KAEhB,CAACvgB,EAAcmhB,EAASvf,EAAM2e,CAAc,CAAC,EAEhDvV,EAAAA,UAAU,IAAM,CACViW,GACeJ,EAAA,CAAE,GAAGrjB,CAAA,CAAS,CACjC,EACC,CAACyjB,EAAMzjB,CAAO,CAAC,EAElB,MAAMogB,EAAayD,GAAWZ,EAAiBY,EAAS,GAAK7jB,EAAQ,SAAS,EAExE8jB,EAAc,IAAM,CAEtBP,EADE,EAAAI,CACW,CAGf,EAGII,EAAY3f,GAAS,CACnB,MAAA4f,EAAe5f,EAAK,OAAS,IAAMA,EAAK,MAAM,EAAG,GAAG,EAAI,MAAQA,EAChE2b,EAAQ3b,EAAK,MAAM,YAAY,EACrC,IAAI6f,EAAOlE,EAAQA,EAAM,CAAC,EAAI,GAC1B,OAAA6C,GAAOqB,CAAI,GACNA,EAAA,KAAK,MAAMA,CAAI,EAClBA,EAAK,OAAS,kBACT,6JACEA,EAAK,OAAS,qBAChB,mNAEA,oHAAoHD,KAGtH,oHAAoHA,GAC7H,EAGI1R,EAAQ,CACZ,UACE,0HAAA,EAGEoP,EAAOH,GAAQ,CACnB,GAAGxhB,EACH,GAAGC,CAAA,CACJ,EAEIwhB,IACHlP,EAAM,UACJ,2IAEAtS,EAAQ,IAAMkjB,IAChB5Q,EAAM,UAAYtS,EAAQ,GAAG,MAAM,OAAO,EAAE,CAAC,EACvCsS,EAAA,WAAatS,EAAQ,GAAG,MAAMsS,EAAM,SAAS,EAAE,CAAC,EAAI,mBAG5D,MAAM4R,EAAkB,IAAM,CACtB9f,MAAAA,EAAOof,EAAW,QAAQ,UAE5BvB,EAAA,CACF,KAAA7d,EACA,gBAAiBpE,GAAA,YAAAA,EAAS,gBAC1B,eAAgBA,GAAA,YAAAA,EAAS,cAAA,CAC1B,EAED6gB,EAAcD,EAAe,CAAC,EAC9BR,EAAU,EAAI,CAAA,EAGV+D,EAAoB,IAAM,CAC1B,CAAC3hB,GAAgB,EAACxC,GAAA,MAAAA,EAAS,kBAAiBsgB,EAAWtgB,CAAO,CAAA,EAG9DqgB,EAAmBrB,GAAgB,CACvCA,EAAY,EAAI,EAChBoF,GAAKpkB,GAAA,YAAAA,EAAS,IAAI,EAElB,WAAW,IAAM,CACfgf,EAAY,EAAK,GAChB,GAAI,CAAA,EAGHqF,EAAoB,SAAY,CAC/BnB,GACLU,EAAqB,QAAQ5jB,EAAQ,cAAc,EAAE,KAAM8O,GAAa,CACtEzL,EAAqByL,EAAS,IAAI,CAAA,CACnC,CAAA,EAGH,OAEIM,EAAA,KAAA8C,WAAA,CAAA,SAAA,CAAC7C,EAAAA,IAAA,MAAA,CAAK,GAAGiD,EAAO,QAASwR,EACvB,SAAC1U,EAAAA,KAAA,MAAA,CAAI,UAAU,2GACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,mFACZ,SAAA,CAAO,OAAAsS,GAAS,UAAYA,EAAK,MAAM,iBAAiB,EACvDrS,EAAAA,IAAC,OAAK,CAAA,UAAU,wCAAyC,SAAAqS,CAAA,CAAK,EAE9DA,EAEFrS,EAAAA,IAAC,MAAI,CAAA,UAAU,4IACb,SAAAA,EAAA,IAACsR,GAAA,CACC,WAAArI,EACA,aAAAsI,EACA,cAAAC,CAAA,CAAA,EAEJ,CAAA,EACF,EACAzR,EAAAA,KAAC,MAAI,CAAA,UAAU,qFACZ,SAAA,CACC8T,GAAA7T,EAAA,IAAC+O,GAAA,CACC,QAAS9L,EAAM,WAAa,WAC5B,WAAW,0BACX,QAAS+R,EAET,eAAC,SAAQ,CAAA,SAAA,GAAGrkB,EAAQ,WAAWA,EAAQ,QAAS,CAAA,CAAA,CAClD,EAEFqP,EAAAA,IAAC,OAAI,UAAU,gCACZ,WACEA,MAAA,MAAA,CAAI,UAAU,kFACb,SAACA,EAAA,IAAA,MAAA,CAAI,UAAU,oGACb,SAAA0U,EAAS3f,CAAI,CACf,CAAA,CACF,CAAA,EACEsf,EACFtU,EAAA,KAAC,MAAI,CAAA,UAAU,0DAEb,SAAA,CAAAC,EAAA,IAAC,MAAA,CACC,UAAU,+GACV,gBAAiB,GACjB,IAAKmU,EACL,+BAAgC,GAE/B,SAAApf,CAAA,CACH,EACAgL,EAAAA,KAAC,MAAI,CAAA,UAAU,8CACb,SAAA,CAAAC,EAAA,IAAC,SAAA,CACC,UAAU,gCACV,SAAU7M,EACV,QAAS0hB,EACV,SAAA,OAAA,CAED,EACA7U,EAAAA,IAAC,UAAO,UAAU,2BAA2B,QAAS,IAAM+Q,EAAU,EAAI,EAAG,SAE7E,IAAA,CAAA,CAAA,EACF,CAAA,CAAA,CACF,EAGEhR,EAAAA,KAAA8C,EAAA,SAAA,CAAA,SAAA,CAAA7C,EAAA,IAAC,MAAA,CACC,UAAWC,EACT,0DACAkS,EAAkB,sBAAwB,EAC5C,EAGA,SAACnS,EAAA,IAAA,MAAA,CAAI,UAAU,4DACZ,SAACmS,EAKAnS,MAAA6C,EAAAA,SAAA,CAAG,WAAK,EAJR7C,MAAA6C,EAAAA,SAAA,CACE,SAAC7C,MAAA8P,GAAA,CAAQ,QAAS/a,CAAM,CAAA,CAAA,CAC1B,CAIJ,CAAA,CAAA,CACF,EAQC,CAAC5B,GAAgB4gB,EAChB/T,EAAA,IAAC,MAAI,CAAA,UAAU,kFACb,SAAAA,EAAAA,IAAC,MAAI,CAAA,UAAU,sGACZ,SAAA,iDACH,CAAA,CACF,CAAA,EACE,IAAA,CAAA,CACN,CAEJ,CAAA,EACAA,EAAA,IAAC6Q,GAAA,CACC,WAAYwD,EACZ,aAAAlhB,EACA,QAAAxC,EACA,aAAAD,EACA,UAAW,IAAMqgB,EAAU,EAC3B,WAAY,IAAM+D,EAAkB,EAAA,gBACpC9D,CAAA,CACF,EACAhR,EAAAA,IAAC+O,GAAO,CAAA,WAAW,mBACjB,SAAA/O,EAAA,IAACsR,GAAA,CACC,WAAArI,EACA,aAAAsI,EACA,cAAAC,CAAA,CAAA,EAEJ,CAAA,EACF,CAAA,CAAA,CACF,CACF,CAAA,EACAxR,EAAA,IAACiV,GAAA,CACC,UAAWtkB,EAAQ,UACnB,aAAAD,EACA,aAAcC,EAAQ,SACtB,eAAA+iB,EACA,cAAAC,EACA,iBAAAC,CAAA,CACF,CACF,CAAA,CAAA,CAEJ,CCvQA,SAAwBqB,GAAa,CACnC,UAAAzM,EACA,aAAA9X,EACA,aAAA2C,EACA,eAAAqgB,EACA,cAAAC,EACA,iBAAAC,EACA,aAAAsB,CACF,EAAG,CAGK,KAAA,CAACjM,EAAYuI,CAAa,EAAI5b,EAAeK,EAAM,yBAAyBuS,CAAS,CAAC,EAEtF2M,EAAoB7kB,GAAU,CACpBkhB,GAAAne,GAAA,YAAAA,EAAc,QAAS/C,EAAQ,CAAC,CAAA,EAS5C,GANJ6N,EAAAA,UAAU,IAAM,CAEdqT,EAAc,CAAC,CAAA,EACd,CAACne,GAAA,YAAAA,EAAc,MAAM,CAAC,EAGrB,EAAEA,GAAgBA,EAAa,QAC1B,OAAA,KAGL,GAAA4V,IAAc5V,GAAA,YAAAA,EAAc,QAC9B,OAAAme,EAAc,CAAC,EACR,KAGT,MAAM7gB,EAAU0C,EAAaA,EAAa,OAAS4V,EAAa,CAAC,EAC7D,OAAAiM,EAGGlV,EAAA,IAAA6C,EAAA,SAAA,CAAA,SAAAxP,EACGA,EAAa,IAAK1C,GAClBqP,EAAA,IAACyT,GAAA,CAEC,aAAA/iB,EACA,QAASC,EACT,eAAA+iB,EACA,cAAAC,EACA,iBAAkB,KAClB,WAAY,EACZ,aAAc,EACd,cAAe,IAAA,EARVhjB,EAAQ,SAAA,CAUhB,EACC,IACN,CAAA,EAGFqP,EAAA,IAACyT,GAAA,CAEC,aAAA/iB,EACA,QAAAC,EACA,eAAA+iB,EACA,cAAAC,EACA,iBAAAC,EACA,WAAYvgB,EAAa,OAAS4V,EAAa,EAC/C,aAAc5V,EAAa,OAC3B,cAAe8hB,CAAA,EARVxkB,EAAQ,SAAA,CAWnB,CC7DA,MAAMykB,GAAqB,CAAC,CAAE,KAAA9U,EAAM,aAAAsH,EAAc,OAAA5U,KAAa,CAC7D,KAAM,CAACsP,EAAO+S,CAAQ,EAAIrY,EAAS,UAAAhK,GAAA,YAAAA,EAAQ,QAAS,WAAW,EACzD/B,EAAkB0N,EAAe1I,EAAM,eAAe,EACtDqf,EAAuBla,KAEvB0O,EACJ,6dAEIyL,EAAe,IAAM,CACzB,MAAM7N,EAAUD,EAAc,CAC5B,OAAQ,CACN,GAAGzU,EACH,MAAAsP,CACF,EACA,gBAAArR,CAAA,CACD,EACDqkB,EAAqB,OAAO5N,CAAO,CAAA,EAGrCvJ,OAAAA,EAAAA,UAAU,IAAM,CACLkX,GAAAriB,GAAA,YAAAA,EAAQ,QAAS,WAAW,CAAA,EACpC,CAACsN,CAAI,CAAC,EAGPN,EAAAA,IAACiE,GAAO,CAAA,KAAA3D,EAAY,aAAAsH,EAClB,SAAA5H,EAAA,IAACqF,GAAA,CACC,MAAM,OACN,KACEtF,EAAA,KAAC,MAAI,CAAA,UAAU,iCACb,SAAA,CAAAC,MAACgG,EAAM,CAAA,QAAQ,eAAe,UAAU,gCAAgC,SAExE,OAAA,EACAhG,EAAA,IAAC+F,GAAA,CACC,GAAG,eACH,MAAOzD,GAAS,GAChB,SAAW3S,GAAM0lB,EAAS1lB,EAAE,OAAO,OAAS,EAAE,EAC9C,YAAY,YACZ,UAAWsQ,EACT6J,EACA,0HACF,CAAA,CACF,CAAA,EACF,EAEF,UAAW,CACT,cAAeyL,EACf,cAAe,qEACf,WAAY,IACd,CAAA,CAEJ,CAAA,CAAA,CAEJ,EC1DA,SAASC,GAAe,CACtB,MAAAlT,EAAQ,QACR,MAAAhS,EACA,SAAAmlB,EACA,SAAAC,EACA,gBAAAC,EACA,UAAAC,EAAY,GACZ,UAAAC,EAAY,GACZ,mBAAAtP,EACA,UAAAhG,CACF,EAAG,CAEC,OAAAP,EAAA,IAAC,OAAI,UAAWC,EAAG,yCAA0CsG,CAAkB,EAC7E,eAAC,MAAI,CAAA,UAAU,kBACb,SAACvG,EAAA,IAAAyG,GAAA,CAAQ,MAAAnW,EAAc,SAAUolB,EAAU,SAAAD,EACxC,SAAC,CAAA,CAAE,KAAAnV,CAAK,IAELP,EAAA,KAAA8C,EAAA,SAAA,CAAA,SAAA,CAAA9C,EAAA,KAAC0G,GAAQ,OAAR,CACC,UAAWxG,EACT,iPACAM,CACF,EAEC,SAAA,CAAA,IACAsV,GACC7V,EAAA,IAACyG,GAAQ,MAAR,CACC,UAAU,iDACV,GAAG,gCACH,wBAAsB,GAErB,SAAAnE,CAAA,CACH,EAEFtC,EAAAA,IAAC,OAAK,CAAA,UAAU,8BACd,SAAAD,EAAA,KAAC,OAAA,CACC,UAAWE,EACT,6EACC4V,EAAwB,GAAZ,SACf,EAEC,SAAA,CAAA,CAACA,GACA9V,EAAAA,KAAC,OAAK,CAAA,UAAU,2CAA4C,SAAA,CAAAuC,EAAM,GAAA,EAAC,EAEpEhS,CAAA,CAAA,CAAA,EAEL,EACA0P,EAAAA,IAAC,OAAK,CAAA,UAAU,wEACd,SAAAA,EAAA,IAAC,MAAA,CACC,OAAO,eACP,KAAK,OACL,YAAY,IACZ,QAAQ,YACR,cAAc,QACd,eAAe,QACf,UAAU,yBACV,OAAO,MACP,MAAM,MACN,MAAM,6BACN,MAAO4V,EAAY,CAAE,UAAW,cAAiB,CAAC,EAElD,SAAA5V,EAAAA,IAAC,WAAS,CAAA,OAAO,gBAAiB,CAAA,CAAA,CAAA,EAEtC,CAAA,CAAA,CACF,EACAA,EAAA,IAAC2L,GAAA,CACC,KAAMrL,EACN,GAAImP,GAAM,SACV,MAAM,kCACN,UAAU,cACV,QAAQ,YACR,UAAWmG,EAAY,mBAAqB,gBAE5C,SAAA5V,EAAAA,IAACyG,GAAQ,QAAR,CAAgB,UAAU,iMACxB,SAAgBkP,EAAA,IAAI,CAACG,EAAQnP,IAC5B3G,EAAA,IAACyG,GAAQ,OAAR,CAEC,MAAOqP,EACP,UAAU,qOAEV,SAAA/V,EAAA,KAAC,OAAK,CAAA,UAAU,qCACd,SAAA,CAAAC,EAAA,IAAC,OAAA,CACC,UAAWC,EACT,+DACA6V,IAAWxlB,EAAQ,gBAAkB,EACvC,EAEC,SAAAwlB,CAAA,CACH,EACCA,IAAWxlB,GACT0P,MAAA,OAAA,CAAK,UAAU,qFACd,SAAAA,EAAA,IAACiB,KAAU,CACb,CAAA,CAAA,EAEJ,CAAA,EAlBK0F,CAoBR,CAAA,EACH,CAAA,CACF,CACF,CAAA,CAAA,CAEJ,CAAA,EACF,CACF,CAAA,CAEJ,CChGA,MAAMoP,GAASjS,EAAM,WACnB,CAAC,CAAE,UAAAvD,EAAW,mBAAAyV,EAAoB,GAAG/S,GAASC,IAC5CnD,EAAA,KAACkW,GAAA,CACC,IAAA/S,EACA,UAAWjD,EAAG,2DAA4DM,CAAS,EAClF,GAAG0C,EAEJ,SAAA,CAACjD,EAAAA,IAAAkW,GAAA,CAAsB,UAAU,qFAC/B,SAAClW,MAAAmW,GAAA,CAAsB,UAAU,+CAAA,CAAgD,CACnF,CAAA,EACAnW,EAAA,IAACoW,GAAA,CACC,QAASC,GAAeL,CAAkB,IAAM,IAAM,CAAA,GACtD,UAAU,wSAAA,CACZ,CAAA,CAAA,CACF,CAEJ,EACAD,GAAO,YAAcE,GAAqB,YCf1C,MAAMK,GAAcxS,EAGlB,WAAA,CAAC,CAAE,UAAAvD,EAAW,GAAG0C,CAAM,EAAGC,IAExBlD,EAAA,IAACuW,GAAA,CACC,UAAWtW,EACT,+UACAM,CACF,EACA,IAAA2C,EACC,GAAGD,CAAA,CAAA,CAGT,EACDqT,GAAY,YAAc,QCvB1B,MAAME,GAAYC,GAEZC,GAAmBC,GAEnBC,GAAkBC,GAElBC,GAAmBhT,EAGvB,WAAA,CAAC,CAAE,UAAAvD,EAAW,MAAAwW,EAAQ,SAAU,WAAAC,EAAa,EAAG,GAAG/T,GAASC,IAC5DlD,EAAA,IAACiX,GAAA,CACC,IAAA/T,EACA,MAAA6T,EACA,WAAAC,EACA,UAAW/W,EACT,6IACAM,CACF,EACC,GAAG0C,CAAA,CACN,CACD,EACD6T,GAAiB,YAAcG,GAA2B,YCzB1D,MAAMC,GAAQ,CACZ,KAAM,sIACN,IAAK,8HACL,KAAM,sSACN,KAAM,6LACN,KAAM,+KACR,EAEA,SAASC,GAAY,CAAE,KAAA5nB,EAAM,KAAA6nB,GAAQ,CAMnC,aACGR,GACC,CAAA,SAAA5W,EAAA,IAAC8W,GAAA,CACC,KAAAM,EACA,UAAU,QAGV,SAAApX,EAAA,IAAC,MAAI,CAAA,UAAU,YACb,SAAAA,EAAA,IAAC,IAAE,CAAA,UAAU,2CAA4C,SAAAkX,GAAM3nB,CAAI,CAAE,CAAA,EACvE,CAAA,CAEJ,CAAA,CAAA,CAEJ,CCpBA,MAAMua,GACJ,4hBAEIuN,GACJ,mOAIF,SAASC,GAASrU,EAAO,OACjB,KAAA,CACJ,SAAAsU,EACA,MAAAnF,EACA,aAAAI,EACA,aAAAgF,EACA,YAAAC,EACA,KAAAC,EACA,MAAAC,EACA,MAAAC,EACA,UAAAC,CACE,EAAA5U,EAEEhS,EAAkB0N,EAAe1I,EAAM,eAAe,EAEtD6hB,EAAWD,EAAU,OAAO,EAC5BE,EAAkBF,EAAU,cAAc,EAC1CG,EAAkBH,EAAU,cAAc,EAC1CI,EAAiBJ,EAAU,aAAa,EACxCK,EAAUL,EAAU,OAAO,EAC3BM,EAAWN,EAAU,kBAAkB,EACvCO,EAAWP,EAAU,mBAAmB,EAExCQ,IAAS3lB,EAAAzB,GAAA,YAAAA,EAAkB,SAAlB,YAAAyB,EAA8B,kBAAsB,CAAA,EAEnE,aACG,MAAI,CAAA,UAAU,gCACb,SAACqN,EAAA,KAAA,MAAA,CAAI,UAAU,4BACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,4DACb,SAAA,CAACC,EAAAA,IAAA,MAAA,CAAI,UAAU,iCACb,SAAAA,EAAA,IAACwV,GAAA,CACC,MAAOpD,EACP,SAAU0F,EACV,gBAAiBO,EACjB,SAAUd,EACV,UAAWtX,EACT6J,GACA,kGACF,EACA,mBAAmB,yBAAA,CAAA,EAEvB,EACA/J,EAAAA,KAAC,MAAI,CAAA,UAAU,iCACb,SAAA,CAAAA,EAAA,KAACiG,EAAM,CAAA,QAAQ,eAAe,UAAU,gCAAgC,SAAA,CAAA,eACzDhG,EAAA,IAAA,QAAA,CAAM,UAAU,aAAa,SAAgB,mBAAA,CAAA,EAC5D,EACAA,EAAA,IAAC+F,GAAA,CACC,GAAG,eACH,SAAUwR,EACV,MAAO/E,GAAgB,GACvB,SAAW7iB,GAAMooB,EAAgBpoB,EAAE,OAAO,OAAS,IAAI,EACvD,YAAY,gCACZ,UAAWsQ,EACT6J,GACA,0HACF,CAAA,CACF,CAAA,EACF,EACA/J,EAAAA,KAAC,MAAI,CAAA,UAAU,iCACb,SAAA,CAAAA,EAAA,KAACiG,EAAM,CAAA,QAAQ,eAAe,UAAU,gCAAgC,SAAA,CAAA,iBACvDhG,EAAA,IAAA,QAAA,CAAM,UAAU,aAAa,SAAgB,mBAAA,CAAA,EAC9D,EACAA,EAAA,IAACsY,GAAA,CACC,GAAG,eACH,SAAUf,EACV,MAAOC,GAAgB,GACvB,SAAW7nB,GAAMqoB,EAAgBroB,EAAE,OAAO,OAAS,IAAI,EACvD,YAAY,qGACZ,UAAWsQ,EACT6J,GACA,gEACF,CAAA,CACF,CAAA,EACF,CAAA,EACF,EACA/J,EAAAA,KAAC,MAAI,CAAA,UAAU,4DACb,SAAA,CAACA,EAAAA,KAAAyW,GAAA,CAAU,UAAW,IACpB,SAAA,CAACzW,EAAAA,KAAA2W,GAAA,CAAiB,UAAU,iCAC1B,SAAA,CAAC3W,EAAAA,KAAA,MAAA,CAAI,UAAU,uBACb,SAAA,CAAAA,EAAA,KAACiG,EAAM,CAAA,QAAQ,WAAW,UAAU,gCAAgC,SAAA,CAAA,eACrDhG,EAAA,IAAA,QAAA,CAAM,UAAU,aAAa,SAAY,eAAA,CAAA,EACxD,EACAA,EAAA,IAACsW,GAAA,CACC,GAAG,WACH,SAAUiB,EACV,MAAOE,EACP,SAAWnnB,GAAU2nB,EAAe3nB,CAAK,EACzC,IAAK,EACL,IAAK,EACL,KAAM,IACN,SAAU,GACV,UAAW2P,EACT6J,GACA7J,EACEoX,GACA,8GACF,CACF,CAAA,CACF,CAAA,EACF,EACArX,EAAA,IAAC+V,GAAA,CACC,SAAUwB,EACV,MAAO,CAACE,CAAW,EACnB,cAAgBnnB,GAAU2nB,EAAe3nB,EAAM,CAAC,CAAC,EACjD,mBAAoB,IAAM2nB,EAAe,CAAC,EAC1C,IAAK,EACL,IAAK,EACL,KAAM,IACN,UAAU,iBAAA,CACZ,CAAA,EACF,EACCjY,EAAA,IAAAmX,GAAA,CAAY,KAAK,OAAO,KAAK,OAAO,CAAA,EACvC,EACApX,EAAAA,KAACyW,GAAU,CAAA,UAAW,IACpB,SAAA,CAACzW,EAAAA,KAAA2W,GAAA,CAAiB,UAAU,iCAC1B,SAAA,CAAC3W,EAAAA,KAAA,MAAA,CAAI,UAAU,uBACb,SAAA,CAAAA,EAAA,KAACiG,EAAM,CAAA,QAAQ,YAAY,UAAU,gCAAgC,SAAA,CAAA,SAC5DhG,EAAA,IAAA,QAAA,CAAM,UAAU,aAAa,SAAY,eAAA,CAAA,EAClD,EACAA,EAAA,IAACsW,GAAA,CACC,GAAG,YACH,SAAUiB,EACV,MAAOG,EACP,SAAWpnB,GAAU4nB,EAAQ5nB,CAAK,EAClC,IAAK,EACL,IAAK,EACL,KAAM,IACN,SAAU,GACV,UAAW2P,EACT6J,GACA7J,EACEoX,GACA,8GACF,CACF,CAAA,CACF,CAAA,EACF,EACArX,EAAA,IAAC+V,GAAA,CACC,SAAUwB,EACV,MAAO,CAACG,CAAI,EACZ,cAAgBpnB,GAAU4nB,EAAQ5nB,EAAM,CAAC,CAAC,EAC1C,mBAAoB,IAAM4nB,EAAQ,CAAC,EACnC,IAAK,EACL,IAAK,EACL,KAAM,IACN,UAAU,iBAAA,CACZ,CAAA,EACF,EACClY,EAAA,IAAAmX,GAAA,CAAY,KAAK,OAAO,KAAK,OAAO,CAAA,EACvC,EAEApX,EAAAA,KAACyW,GAAU,CAAA,UAAW,IACpB,SAAA,CAACzW,EAAAA,KAAA2W,GAAA,CAAiB,UAAU,iCAC1B,SAAA,CAAC3W,EAAAA,KAAA,MAAA,CAAI,UAAU,uBACb,SAAA,CAAAA,EAAA,KAACiG,EAAM,CAAA,QAAQ,mBAAmB,UAAU,gCAAgC,SAAA,CAAA,qBACvDhG,EAAA,IAAA,QAAA,CAAM,UAAU,aAAa,SAAY,eAAA,CAAA,EAC9D,EACAA,EAAA,IAACsW,GAAA,CACC,GAAG,mBACH,SAAUiB,EACV,MAAOI,EACP,SAAWrnB,GAAU6nB,EAAS7nB,CAAK,EACnC,IAAK,EACL,IAAK,GACL,KAAM,IACN,SAAU,GACV,UAAW2P,EACT6J,GACA7J,EACEoX,GACA,8GACF,CACF,CAAA,CACF,CAAA,EACF,EACArX,EAAA,IAAC+V,GAAA,CACC,SAAUwB,EACV,MAAO,CAACI,CAAK,EACb,cAAgBrnB,GAAU6nB,EAAS7nB,EAAM,CAAC,CAAC,EAC3C,mBAAoB,IAAM6nB,EAAS,CAAC,EACpC,IAAK,EACL,IAAK,GACL,KAAM,IACN,UAAU,iBAAA,CACZ,CAAA,EACF,EACCnY,EAAA,IAAAmX,GAAA,CAAY,KAAK,OAAO,KAAK,OAAO,CAAA,EACvC,EAEApX,EAAAA,KAACyW,GAAU,CAAA,UAAW,IACpB,SAAA,CAACzW,EAAAA,KAAA2W,GAAA,CAAiB,UAAU,iCAC1B,SAAA,CAAC3W,EAAAA,KAAA,MAAA,CAAI,UAAU,uBACb,SAAA,CAAAA,EAAA,KAACiG,EAAM,CAAA,QAAQ,mBAAmB,UAAU,gCAAgC,SAAA,CAAA,oBACxDhG,EAAA,IAAA,QAAA,CAAM,UAAU,aAAa,SAAY,eAAA,CAAA,EAC7D,EACAA,EAAA,IAACsW,GAAA,CACC,GAAG,mBACH,SAAUiB,EACV,MAAOK,EACP,SAAWtnB,GAAU8nB,EAAS9nB,CAAK,EACnC,IAAK,EACL,IAAK,GACL,KAAM,IACN,SAAU,GACV,UAAW2P,EACT6J,GACA7J,EACEoX,GACA,8GACF,CACF,CAAA,CACF,CAAA,EACF,EACArX,EAAA,IAAC+V,GAAA,CACC,SAAUwB,EACV,MAAO,CAACK,CAAK,EACb,cAAgBtnB,GAAU8nB,EAAS9nB,EAAM,CAAC,CAAC,EAC3C,mBAAoB,IAAM8nB,EAAS,CAAC,EACpC,IAAK,EACL,IAAK,GACL,KAAM,IACN,UAAU,iBAAA,CACZ,CAAA,EACF,EACCpY,EAAA,IAAAmX,GAAA,CAAY,KAAK,OAAO,KAAK,OAAO,CAAA,EACvC,CAAA,EACF,CAAA,CACF,CAAA,CACF,CAAA,CAEJ,CC/OA,MAAMrN,GACJ,4hBAEF,SAASwN,GAASrU,EAAO,CACvB,KAAM,CAAE,SAAAsU,EAAU,QAAA/Y,EAAS,cAAA+Z,EAAe,UAAA7F,EAAW,UAAA8F,EAAW,UAAAX,CAAc,EAAA5U,EACxE,CAACwV,EAAYC,CAAa,EAAI1b,WAAS,CAAC,EACxC2b,EAAoBjG,EACpBkG,EAAaf,EAAU,SAAS,EAChCgB,EAAmBhB,EAAU,eAAe,EAC5CiB,EAAejB,EAAU,WAAW,EACpCkB,EAAgBzoB,GAAUunB,EAAU,WAAW,EAAEvnB,EAAM,aAAa,EACpE0oB,EAAmBnN,GAAYrN,EAAS,GAAG,EAC3Cya,EAA2Brd,KAEjCuC,OAAAA,EAAAA,UAAU,IAAM,CACd,GAAI,CAAC6a,GAAoBA,EAAiB,KAAA,IAAW,GAAI,CACvDN,EAAc,CAAC,EACf,QAGwBla,GAAY,CACXya,EAAA,OACvB,CAAE,KAAMza,CAAQ,EAChB,CACE,UAAYxO,GAAS,CACnB0oB,EAAc1oB,EAAK,KAAK,CAC1B,CACF,CAAA,CACF,GAGegpB,CAAgB,CAAA,EAChC,CAACA,CAAgB,CAAC,QAGnB,MAAI,CAAA,UAAU,gCACZ,SAACjZ,EAAA,KAAA,MAAA,CAAI,UAAU,4BACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,4DACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,iCACd,SAAA,CAAAA,EAAA,KAACiG,EAAM,CAAA,QAAQ,qBAAqB,UAAU,gCAAgC,SAAA,CAAA,QACrEhG,EAAA,IAAA,QAAA,CAAM,UAAU,aAAa,SAAQ,WAAA,CAAA,EAC7C,EACAA,EAAA,IAACwV,GAAA,CACC,GAAG,qBACH,MAAO,KACP,MAAO,GAAGgD,EAAU,OAAO,CAAC,EAAE,YAAY,IAAIA,EAAU,MAAM,CAAC,IAC/D,SAAUO,EACV,gBAAiB,CAAC,WAAY,OAAQ,WAAY,SAAS,EAC3D,SAAUxB,EACV,UAAWtX,EACT6J,GACA,kGACF,EACA,mBAAmB,yBAAA,CACrB,CAAA,EACF,EACA/J,EAAAA,KAAC,MAAI,CAAA,UAAU,iCACb,SAAA,CAAAA,EAAA,KAACiG,EAAM,CAAA,QAAQ,UAAU,UAAU,gCAAgC,SAAA,CAAA,OAC5DhG,EAAA,IAAA,QAAA,CAAM,UAAU,aAAa,SAAQ,WAAA,CAAA,EAC5C,EACAA,EAAA,IAACsY,GAAA,CACC,GAAG,UACH,SAAUf,EACV,MAAO/Y,GAAW,GAClB,SAAW7O,GAAMipB,EAAWjpB,EAAE,OAAO,OAAS,IAAI,EAClD,YAAY,iEACZ,UAAWsQ,EACT6J,GACA,+DACF,CAAA,CACF,EACC9J,MAAA,QAAA,CAAM,UAAU,kCAAmC,yBAAgByY,IAAa,CAAA,EACnF,CAAA,EACF,EACA1Y,EAAAA,KAAC,MAAI,CAAA,UAAU,4DACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,iCACb,SAAA,CAAAA,EAAA,KAACiG,EAAM,CAAA,QAAQ,YAAY,UAAU,gCAAgC,SAAA,CAAA,aACxDhG,EAAA,IAAA,QAAA,CAAM,UAAU,aAAa,SAAQ,WAAA,CAAA,EAClD,EACAD,EAAAA,KAAC,MAAI,CAAA,UAAU,8CACb,SAAA,CAAAC,EAAA,IAACkG,GAAA,CACC,GAAG,YACH,SAAUqR,EACV,QAAS7E,EACT,UAAU,6JACV,gBAAiBoG,CAAA,CACnB,EACA/Y,EAAA,KAAC,QAAA,CACC,QAAQ,YACR,UAAU,+GACX,SAAA,CAAA,MACIC,EAAAA,IAAC,SAAM,SAAS,WAAA,CAAA,CAAA,CAAA,CACrB,CAAA,EACF,CAAA,EACF,EACC2Y,GACC5Y,EAAA,KAAC,MAAI,CAAA,UAAU,iCACb,SAAA,CAAAA,EAAA,KAACiG,EAAA,CACC,QAAQ,gBACR,UAAU,gCACV,MAAO,CAAE,QAAS2S,EAAoB,IAAM,GAAI,EAEhD,SAAA,CAAA3Y,EAAA,IAAC,IAAA,CACC,KAAK,iEACL,OAAO,SACP,UAAU,+GAA+G,IAAI,aAC9H,SAAA,QAAA,CAED,EAAK,IACJA,EAAA,IAAA,QAAA,CAAM,UAAU,+BAA+B,SAAQ,WAAA,CAAA,CAAA,CAC1D,EAEAA,EAAA,IAACsY,GAAA,CACC,GAAG,gBACH,SAAUf,EACV,MAAOgB,GAAiB,GACxB,SAAW5oB,GAAMkpB,EAAiBlpB,EAAE,OAAO,OAAS,IAAI,EACxD,YAAY,kDACZ,UAAWsQ,EACT6J,GACA,wFACF,CAAA,CACF,CAAA,EACF,CAAA,EAEJ,CAAA,CACF,CAAA,CACF,CAAA,CAEJ,CCvIA,MAAMoN,GAAQ,CACZ,KAAM,sIACN,KAAM,6LACN,KAAM,kTACN,gBACE,wJACJ,EAEA,SAASC,GAAY,CAAE,KAAA5nB,EAAM,KAAA6nB,GAAQ,CAMnC,aACGR,GACC,CAAA,SAAA5W,EAAA,IAAC8W,GAAA,CACC,KAAAM,EACA,UAAU,QAGV,SAAApX,EAAA,IAAC,MAAI,CAAA,UAAU,YACb,SAAAA,EAAA,IAAC,IAAE,CAAA,UAAU,2CAA4C,SAAAkX,GAAM3nB,CAAI,CAAE,CAAA,EACvE,CAAA,CAEJ,CAAA,CAAA,CAEJ,CCnBA,MAAMua,GACJ,4hBAEIuN,GACJ,mOAIF,SAASC,GAASrU,EAAO,OACjB,KAAA,CACJ,SAAAsU,EACA,MAAAnF,EACA,WAAAK,EACA,aAAA+E,EACA,YAAAC,EACA,KAAAC,EACA,KAAAwB,EACA,gBAAAC,EACA,UAAAtB,EACA,KAAAxD,EAAO,EACL,EAAApR,EACEmW,EAAY/E,EAAO,gBAAkB,gBACrCpjB,EAAkB0N,EAAe1I,EAAM,eAAe,EAEtD6hB,EAAWD,EAAU,OAAO,EAC5BwB,EAAgBxB,EAAU,YAAY,EACtCG,EAAkBH,EAAU,cAAc,EAC1CI,EAAiBJ,EAAU,aAAa,EACxCK,EAAUL,EAAU,MAAM,EAC1ByB,EAAUzB,EAAU,MAAM,EAC1B0B,EAAqB1B,EAAU,iBAAiB,EAEhDQ,IAAS3lB,EAAAzB,GAAA,YAAAA,EAAkB,SAAlB,YAAAyB,EAA8B,kBAAsB,CAAA,EAGjE,OAAAsN,EAAA,IAAC,OAAI,UAAW,GAAGoZ,oBACjB,SAACrZ,EAAA,KAAA,MAAA,CAAI,UAAU,4BACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,4DACb,SAAA,CAACC,EAAAA,IAAA,MAAA,CAAI,UAAU,iCACb,SAAAA,EAAA,IAACwV,GAAA,CACC,MAAOpD,EACP,SAAU0F,EACV,gBAAiBO,EACjB,SAAUd,EACV,UAAWtX,EACT6J,GACA,kGACF,EACA,mBAAmB,yBAAA,CAAA,EAEvB,EACA/J,EAAAA,KAAC,MAAI,CAAA,UAAU,iCACb,SAAA,CAAAA,EAAA,KAACiG,EAAM,CAAA,QAAQ,aAAa,UAAU,gCAAgC,SAAA,CAAA,eACvDhG,EAAA,IAAA,QAAA,CAAM,UAAU,aAAa,SAAgB,mBAAA,CAAA,EAC5D,EACAA,EAAA,IAAC+F,GAAA,CACC,GAAG,aACH,SAAUwR,EACV,MAAO9E,GAAc,GACrB,SAAW9iB,GAAM0pB,EAAc1pB,EAAE,OAAO,OAAS,IAAI,EACrD,YAAY,8BACZ,UAAWsQ,EACT6J,GACA,0HACF,CAAA,CACF,CAAA,EACF,EACA/J,EAAAA,KAAC,MAAI,CAAA,UAAU,iCACb,SAAA,CAAAA,EAAA,KAACiG,EAAM,CAAA,QAAQ,eAAe,UAAU,gCAAgC,SAAA,CAAA,iBACvDhG,EAAA,IAAA,QAAA,CAAM,UAAU,aAAa,SAAgB,mBAAA,CAAA,EAC9D,EACAA,EAAA,IAACsY,GAAA,CACC,GAAG,eACH,SAAUf,EACV,MAAOC,GAAgB,GACvB,SAAW7nB,GAAMqoB,EAAgBroB,EAAE,OAAO,OAAS,IAAI,EACvD,YAAY,wDACZ,UAAWsQ,EACT6J,GACA,gEACF,CAAA,CACF,CAAA,EACF,CAAA,EACF,EACA/J,EAAAA,KAAC,MAAI,CAAA,UAAU,4DACb,SAAA,CAACA,EAAAA,KAAAyW,GAAA,CAAU,UAAW,IACpB,SAAA,CAACzW,EAAAA,KAAA2W,GAAA,CAAiB,UAAU,iCAC1B,SAAA,CAAC3W,EAAAA,KAAA,MAAA,CAAI,UAAU,uBACb,SAAA,CAAAA,EAAA,KAACiG,EAAM,CAAA,QAAQ,WAAW,UAAU,gCAAgC,SAAA,CAAA,eACrDhG,EAAA,IAAA,QAAA,CAAM,UAAU,aAAa,SAAc,iBAAA,CAAA,EAC1D,EACAA,EAAA,IAACsW,GAAA,CACC,GAAG,WACH,SAAUiB,EACV,MAAOE,EACP,SAAWnnB,GAAU2nB,EAAe3nB,CAAK,EACzC,IAAK,EACL,IAAK,EACL,KAAM,IACN,SAAU,GACV,UAAW2P,EACT6J,GACA7J,EACEoX,GACA,8GACF,CACF,CAAA,CACF,CAAA,EACF,EACArX,EAAA,IAAC+V,GAAA,CACC,SAAUwB,EACV,MAAO,CAACE,CAAW,EACnB,cAAgBnnB,GAAU2nB,EAAe3nB,EAAM,CAAC,CAAC,EACjD,mBAAoB,IAAM2nB,EAAe,CAAC,EAC1C,IAAK,EACL,IAAK,EACL,KAAM,IACN,UAAU,iBAAA,CACZ,CAAA,EACF,EACCjY,EAAA,IAAAmX,GAAA,CAAY,KAAK,OAAO,KAAK,OAAO,CAAA,EACvC,EACApX,EAAAA,KAACyW,GAAU,CAAA,UAAW,IACpB,SAAA,CAACzW,EAAAA,KAAA2W,GAAA,CAAiB,UAAU,iCAC1B,SAAA,CAAC3W,EAAAA,KAAA,MAAA,CAAI,UAAU,uBACb,SAAA,CAAAA,EAAA,KAACiG,EAAM,CAAA,QAAQ,YAAY,UAAU,gCAAgC,SAAA,CAAA,SAC5DhG,EAAA,IAAA,QAAA,CAAM,UAAU,aAAa,SAAe,kBAAA,CAAA,EACrD,EACAA,EAAA,IAACsW,GAAA,CACC,GAAG,YACH,SAAUiB,EACV,MAAOG,EACP,SAAWpnB,GAAU4nB,EAAQ5nB,CAAK,EAClC,IAAK,EACL,IAAK,EACL,KAAM,IACN,SAAU,GACV,UAAW2P,EACT6J,GACA7J,EACEoX,GACA,8GACF,CACF,CAAA,CACF,CAAA,EACF,EACArX,EAAA,IAAC+V,GAAA,CACC,SAAUwB,EACV,MAAO,CAACG,CAAI,EACZ,cAAgBpnB,GAAU4nB,EAAQ5nB,EAAM,CAAC,CAAC,EAC1C,mBAAoB,IAAM4nB,EAAQ,CAAC,EACnC,IAAK,EACL,IAAK,EACL,KAAM,IACN,UAAU,iBAAA,CACZ,CAAA,EACF,EACClY,EAAA,IAAAmX,GAAA,CAAY,KAAK,OAAO,KAAK,OAAO,CAAA,EACvC,EAEApX,EAAAA,KAACyW,GAAU,CAAA,UAAW,IACpB,SAAA,CAACzW,EAAAA,KAAA2W,GAAA,CAAiB,UAAU,iCAC1B,SAAA,CAAC3W,EAAAA,KAAA,MAAA,CAAI,UAAU,uBACb,SAAA,CAAAA,EAAA,KAACiG,EAAM,CAAA,QAAQ,YAAY,UAAU,gCAAgC,SAAA,CAAA,SAC5DhG,EAAA,IAAA,QAAA,CAAM,UAAU,aAAa,SAAa,gBAAA,CAAA,EACnD,EACAA,EAAA,IAACsW,GAAA,CACC,GAAG,YACH,SAAUiB,EACV,MAAO2B,EACP,SAAW5oB,GAAUgpB,EAAQhpB,CAAK,EAClC,IAAK,GACL,IAAK,EACL,KAAM,IACN,SAAU,GACV,UAAW2P,EACT6J,GACA7J,EACEoX,GACA,8GACF,CACF,CAAA,CACF,CAAA,EACF,EACArX,EAAA,IAAC+V,GAAA,CACC,SAAUwB,EACV,MAAO,CAAC2B,CAAI,EACZ,cAAgB5oB,GAAUgpB,EAAQhpB,EAAM,CAAC,CAAC,EAC1C,mBAAoB,IAAMgpB,EAAQ,CAAC,EACnC,IAAK,GACL,IAAK,EACL,KAAM,IACN,UAAU,iBAAA,CACZ,CAAA,EACF,EACCtZ,EAAA,IAAAmX,GAAA,CAAY,KAAK,OAAO,KAAK,OAAO,CAAA,EACvC,EAEApX,EAAAA,KAACyW,GAAU,CAAA,UAAW,IACpB,SAAA,CAACzW,EAAAA,KAAA2W,GAAA,CAAiB,UAAU,iCAC1B,SAAA,CAAC3W,EAAAA,KAAA,MAAA,CAAI,UAAU,uBACb,SAAA,CAAAA,EAAA,KAACiG,EAAM,CAAA,QAAQ,iBAAiB,UAAU,gCAAgC,SAAA,CAAA,qBACrDhG,EAAA,IAAA,QAAA,CAAM,UAAU,aAAa,SAAe,kBAAA,CAAA,EACjE,EACAA,EAAA,IAACsW,GAAA,CACC,GAAG,iBACH,SAAUiB,EACV,MAAO4B,EACP,SAAW7oB,GAAUipB,EAAmBjpB,CAAK,EAC7C,IAAK,KACL,IAAK,EACL,KAAM,EACN,SAAU,GACV,UAAW2P,EACT6J,GACA7J,EACEoX,GACA,8GACF,CACF,CAAA,CACF,CAAA,EACF,EACArX,EAAA,IAAC+V,GAAA,CACC,SAAUwB,EACV,MAAO,CAAC4B,CAAe,EACvB,cAAgB7oB,GAAUipB,EAAmBjpB,EAAM,CAAC,CAAC,EACrD,mBAAoB,IAAMipB,EAAmB,CAAC,EAC9C,IAAK,KACL,IAAK,EACL,KAAM,EACN,UAAU,iBAAA,CACZ,CAAA,EACF,EACCvZ,EAAA,IAAAmX,GAAA,CAAY,KAAK,kBAAkB,KAAK,OAAO,CAAA,EAClD,CAAA,EACF,CAAA,CACF,CAAA,CACF,CAAA,CAEJ,CCnPA,MAAMG,GAAW,CAAC,CAAE,OAAAtkB,EAAQ,GAAGiQ,MACN,IAAM,CAC3B,KAAM,CAAE,SAAAnS,CAAA,EAAakC,GAAU,GAG/B,OAAIlC,IAAa,SAEbkP,EAAA,IAACwZ,GAAA,CACC,MAAOxmB,GAAA,YAAAA,EAAQ,MACf,aAAcA,GAAA,YAAAA,EAAQ,aACtB,aAAcA,GAAA,YAAAA,EAAQ,aACtB,YAAaA,GAAA,YAAAA,EAAQ,YACrB,KAAMA,GAAA,YAAAA,EAAQ,MACd,MAAOA,GAAA,YAAAA,EAAQ,iBACf,MAAOA,GAAA,YAAAA,EAAQ,kBACd,GAAGiQ,CAAA,CAAA,EAGCnS,IAAa,SAEpBkP,EAAA,IAACyZ,GAAA,CACC,UAAWzmB,GAAA,YAAAA,EAAQ,UACnB,QAASA,GAAA,YAAAA,EAAQ,QACjB,cAAeA,GAAA,YAAAA,EAAQ,cACvB,UAAWA,GAAA,YAAAA,EAAQ,UAClB,GAAGiQ,CAAA,CAAA,EAGCnS,IAAa,SAEpBkP,EAAA,IAAC0Z,GAAA,CACC,MAAO1mB,GAAA,YAAAA,EAAQ,MACf,WAAYA,GAAA,YAAAA,EAAQ,WACpB,aAAcA,GAAA,YAAAA,EAAQ,aACtB,SAAUA,GAAA,YAAAA,EAAQ,SAClB,YAAaA,GAAA,YAAAA,EAAQ,YACrB,KAAMA,GAAA,YAAAA,EAAQ,KACd,KAAMA,GAAA,YAAAA,EAAQ,KACd,gBAAiBA,GAAA,YAAAA,EAAQ,gBACzB,KAAM,GACL,GAAGiQ,CAAA,CAAA,EAIAjD,EAAAA,IAAA,MAAA,CAAI,UAAU,6BAA6B,SAAe,iBAAA,CAAA,CACpE,GAGoB,EC1ClB2Z,GAAwB,CAAC,CAAE,KAAArZ,EAAM,aAAAsH,EAAc,OAAQF,EAAS,MAAApF,KAAY,CAChF,KAAM,CAACtP,EAAQ4mB,CAAS,EAAI5c,WAAS0K,CAAO,EACtC,CAACmS,EAAcC,CAAe,EAAI9c,EAAAA,SAAShK,GAAA,YAAAA,EAAQ,QAAQ,EAE3D,CAAC+mB,EAAkBC,CAAmB,EAAIhd,WAAS,EAAK,EACxD/L,EAAkB0N,EAAe1I,EAAM,eAAe,EAExD4jB,IAAiB,UACnBC,EAAgB,MAAM,EAGxB,MAAMjC,EAAaoC,GAAWC,GAAa,CACzC,IAAIC,EAAS,CAAA,EACbA,EAAOF,CAAK,EAAIC,EAChBN,EAAWjlB,IAAe,CACxB,GAAGA,EACH,GAAGwlB,CACH,EAAA,CAAA,EAGEC,EAAe,IAAM,CACzBJ,EAAoB,EAAI,CAAA,EAGpBK,EAAe,IAAM,CACV7Q,EAAA,CACb,KAAM/B,EAAc,CAAE,OAAAzU,EAAQ,gBAAA/B,EAAiB,EAC/C,SAAU,GAAG+B,GAAA,YAAAA,EAAQ,aACrB,WAAYwW,EAAe,MAAM,IAAA,CAClC,CAAA,EAGHrL,OAAAA,EAAAA,UAAU,IAAM,CACdyb,EAAUlS,CAAO,CAAA,EAChB,CAACpH,CAAI,CAAC,EAILP,EAAA,KAAA8C,WAAA,CAAA,SAAA,CAAC7C,EAAAA,IAAAiE,GAAA,CAAO,KAAA3D,EAAY,aAAAsH,EAClB,SAAA5H,EAAA,IAACqF,GAAA,CACC,MAAO,GAAG/C,GAAS,oBAAoBuX,IACvC,UAAU,0BACV,KACG7Z,EAAAA,IAAA,MAAA,CAAI,UAAU,0CACb,eAAC,MAAI,CAAA,UAAU,aACb,SAAAA,EAAAA,IAACsX,IAAS,OAAAtkB,EAAgB,SAAU,GAAM,UAAA6kB,CAAA,CAAsB,CAClE,CAAA,EACF,EAEF,QAEI7X,EAAA,IAAA6C,WAAA,CAAA,SAAA7C,EAAA,IAACoF,GAAA,CACC,QAASgV,EACT,UAAU,yGACX,SAAA,MAAA,CAAA,EAGH,EAEF,8BAEI,SAACpa,EAAAA,IAAAoF,GAAA,CAAa,QAASiV,EAAc,UAAU,sCAAsC,SAAA,QAAA,CAErF,CACF,CAAA,CAAA,CAAA,EAGN,EACAra,EAAA,IAACoV,GAAA,CACC,KAAM2E,EACN,aAAcC,EACd,OAAAhnB,CAAA,CACF,CACF,CAAA,CAAA,CAEJ,ECjFMsnB,GAAgB,CAAC,CAAE,aAAApF,EAAe,MAAY,CAClD,KAAM,CAAC6E,EAAkBC,CAAmB,EAAIhd,WAAS,EAAK,EACxDtM,EAAeiO,EAAe1I,EAAM,YAAY,EAChDf,EAAcyJ,EAAe1I,EAAM,WAAW,EAC9C,CAAE,SAAAnF,CAAa,EAAAJ,EAEf6pB,EAAuB,IAAM,CAC7B,GAAArF,EAAc,MAAO,WAAWhgB,IAC/B,CACH,IAAIslB,EAAS,GAAG1pB,IAEZ,GAAAA,IAAa,eAAiBA,IAAa,SAAU,CACjD,KAAA,CAAE,aAAA0hB,EAAc,MAAAJ,CAAU,EAAA1hB,EAC5B0hB,IAAOoI,GAAU,KAAKpI,KACtBI,IAAcgI,GAAU,OAAOhI,aAC1B1hB,IAAa,SAAU,CACvB0pB,EAAA,OACH,KAAA,CAAE,WAAA/H,EAAY,MAAAL,CAAU,EAAA1hB,EAC1B0hB,IAAOoI,GAAU,KAAKpI,KACtBK,IAAY+H,GAAU,OAAO/H,aACxB3hB,IAAa,SAAU,CAC1B,KAAA,CAAE,UAAA4hB,EAAW,UAAA8F,CAAc,EAAA9nB,EAC7B8nB,IAAWgC,GAAU,KAAKhC,KAC1B9F,IAAqB8H,GAAA,sBAChB1pB,IAAa,iBAAkB,CAClC,KAAA,CAAE,MAAAshB,CAAU,EAAA1hB,EACd0hB,IAAOoI,GAAU,KAAKpI,KAMrB,OAAAoI,EACT,EAGF,OAEIza,EAAA,KAAA8C,WAAA,CAAA,SAAA,CAAA7C,EAAA,IAAC,MAAA,CACC,UAAWC,EACT,8PACAnP,IAAa,iBAAmB,GAAK,iBACvC,EACA,QAAS,IAAOA,IAAa,iBAAmB,KAAOkpB,EAAoB,EAAI,EAE/E,SAACha,EAAAA,IAAA,MAAA,CAAI,UAAU,sDACZ,aACH,CAAA,CACF,EAEAA,EAAA,IAAC2Z,GAAA,CACC,KAAMI,EACN,aAAcC,EACd,OAAQtpB,CAAA,CACV,CACF,CAAA,CAAA,CAEJ,ECpDA,SAAwB+pB,GAAS,CAAE,aAAAvF,EAAe,IAAS,CACzD,KAAM,CAACvB,EAAeC,CAAgB,EAAI5W,EAAAA,SAAS,EAAE,EAC/C,CAAC0d,EAAkBC,CAAmB,EAAI3d,WAAS,EAAK,EACxD4d,EAAgBvY,SAAO,IAAI,EAC3BwY,EAAiBxY,SAAO,IAAI,EAE5BhP,EAAesL,EAAe1I,EAAM,YAAY,EAChDb,EAA2BuJ,EAAe1I,EAAM,wBAAwB,EAExE6kB,EAAgB5F,EAAe9f,EAA2B/B,EAE1D3C,EAAeiO,EAAe1I,EAAM,YAAY,GAAK,CAAA,EACrD,CAAE,eAAApF,CAAmB,EAAAH,EAErB,CAAE,oBAAAqqB,GAAwBlU,KAKhC1I,EAAAA,UAAU,IAAM,CACR6c,MAAAA,EAAY,WAAW,IAAM,CACjC,KAAM,CAAE,UAAAC,EAAW,aAAAC,EAAc,aAAAC,CAAA,EAAiBP,EAAc,QAC1DQ,EAAO,KAAK,IAAIF,EAAeD,CAAS,EACxCI,EAAU,KAAK,IAAIF,EAAeC,CAAI,EAAID,EAC1CG,EAAeJ,EAAeC,GAAgBE,EAAU,GAC9DV,EAAoBW,CAAY,GAC/B,GAAG,EAGC,cAAA,iBAAiB,SAAUC,CAAY,EAEvC,IAAM,CACX,aAAaP,CAAS,EACf,OAAA,oBAAoB,SAAUO,CAAY,CAAA,CACnD,EACC,CAACT,CAAa,CAAC,EAElB,MAAMpH,EAAiB8H,EAAA,YACrBC,GACE,IAAM,QACJ/oB,EAAAmoB,EAAe,UAAf,MAAAnoB,EAAwB,eAAe,CAAE,SAAU,QAAU,GAC7DioB,EAAoB,EAAK,CAC3B,EACA,IACA,CAAE,QAAS,EAAK,CAClB,EACA,CAACE,CAAc,CAAA,EAGXU,EAAe,IAAM,CACzB,KAAM,CAAE,UAAAN,EAAW,aAAAC,EAAc,aAAAC,CAAA,EAAiBP,EAAc,QAC1DQ,EAAO,KAAK,IAAIF,EAAeD,CAAS,EAC9B,KAAK,IAAIE,EAAeC,CAAI,EAAID,GACjC,GACbR,EAAoB,EAAK,EAEzBA,EAAoB,EAAI,CAC1B,EAGF,IAAIK,EAAY,KAChB,MAAMU,EAAwB,IAAM,CAClC,aAAaV,CAAS,EACVA,EAAA,WAAWO,EAAc,GAAG,CAAA,EAGpCzM,EAAiBnf,GAAM,CAC3BA,EAAE,eAAe,EACF+jB,GAAA,EAIf,OAAA1T,EAAA,IAAC,MAAA,CACC,UAAU,8BACV,IAAK4a,EACL,SAAUc,EAEV,SAAA1b,EAAAA,IAAC,OAAI,UAAU,2CAA2C,IAAK+a,EAC7D,SAAAhb,EAAA,KAAC,MAAI,CAAA,UAAU,+DACb,SAAA,CAAAC,MAACsa,IAAc,aAAApF,EAA4B,EAC1C4F,IAAkB,KAChB9a,EAAA,IAAAU,GAAA,CAAA,CAAQ,GACPoa,GAAA,YAAAA,EAAe,SAAU,GAAK5F,QAC/B,MAAI,CAAA,UAAU,iJAAiJ,SAAA,eAEhK,CAAA,EAGEnV,EAAA,KAAA8C,WAAA,CAAA,SAAA,CAAA7C,EAAA,IAACiV,GAAA,CAEC,UAAWpkB,EACX,aAAAH,EACA,aAAcoqB,EACd,eAAApH,EACA,cAAAC,EACA,iBAAAC,EACA,aAAAsB,CAAA,EAPKrkB,CAQP,EACAmP,EAAA,IAAC2b,GAAA,CACC,GAAIjB,EACJ,QAAS,IACT,WAAW,cACX,cAAe,GAGd,SAAM,IAAAA,GAAqB1a,EAAAA,IAAA6O,GAAA,CAAe,cAAAC,CAA8B,CAAA,CAAA,CAC3E,CAAA,EACF,EAEF9O,EAAA,IAAC,MAAA,CACC,UAAU,4EACV,IAAK6a,CAAA,CACP,CAAA,CAAA,CACF,CACF,CAAA,CAAA,CAAA,CAGN,CC/HA,SAAwBe,IAAqB,CAEzC,OAAA5b,EAAA,IAAC,MAAA,CACC,OAAO,eACP,KAAK,OACL,YAAY,MACZ,QAAQ,YACR,cAAc,QACd,eAAe,QACf,UAAU,UACV,OAAO,MACP,MAAM,MACN,MAAM,6BAEN,SAACA,EAAA,IAAA,OAAA,CAAK,EAAE,IAAI,EAAE,IAAI,MAAM,KAAK,OAAO,KAAK,GAAG,IAAI,GAAG,IAAI,CAAA,CAAA,CAG7D,CCfA,MAAM6b,GAAa,CAAC,CAClB,eAAAC,EACA,YAAAC,EAAc,KACd,YAAAC,EAAc,KACd,UAAAC,EAAY,KACZ,KAAAlnB,EAAO,KACP,GAAA+B,EAAK,GACP,IAAM,CACJ,KAAM,CAAColB,EAAaC,CAAc,EAAInf,WAAS,eAAe,EACxD,CAACof,EAAQC,CAAS,EAAIrf,WAAS,IAAI,EAEnCsf,EAAoBvsB,GAAU,CAClC,MAAMwsB,EAAOxsB,EAAM,OAAO,MAAM,CAAC,EACjC,GAAI,CAACwsB,EAAM,OAEL,MAAAC,EAAS,IAAI,WACZA,EAAA,OAAU7sB,GAAM,CACrB,MAAM8sB,EAAW,KAAK,MAAM9sB,EAAE,OAAO,MAAM,EAC3C,GAAIssB,GAAa,CAACA,EAAUQ,CAAQ,EAAG,CACrCJ,EAAU,SAAS,EACnBF,EAAe,cAAc,EAC7B,OAGEF,IACFI,EAAU,SAAS,EACnBF,EAAe,oCAAoC,GAGrDL,EAAeW,CAAQ,CAAA,EAEzBD,EAAO,WAAWD,CAAI,CAAA,EAItB,OAAAxc,EAAA,KAAC,QAAA,CACC,QAAS,eAAejJ,IACxB,UAAWmJ,EACT,kQACAic,CACF,EAEA,SAAA,CAAClc,EAAAA,IAAA0c,GAAA,CAAO,UAAU,0CAA2C,CAAA,EAC7D1c,EAAAA,IAAC,OAAK,CAAA,UAAU,gBACb,SAACoc,EAA4BA,IAAW,UAAYL,EAAcC,EAAxDjnB,GAAQ,QACrB,CAAA,EACAiL,EAAA,IAAC,QAAA,CACC,GAAI,eAAelJ,IACnB,MAAM,GACN,KAAK,OACL,UAAU,UACV,OAAO,QACP,SAAUwlB,CAAA,CACZ,CAAA,CAAA,CAAA,CAGN,ECvDA,SAASK,GAAe,CAAE,MAAArsB,EAAO,SAAAgT,EAAU,MAAAsZ,EAAO,GAAA9lB,GAAM,CACtD,MAAMgT,EACJ,6dAEF,OAEI/J,EAAA,KAAA8C,WAAA,CAAA,SAAA,CAAA9C,EAAA,KAACiG,EAAM,CAAA,QAASlP,EAAI,UAAU,gCAC3B,SAAA,CAAA8lB,QACA,KAAG,EAAA,CAAA,EACN,EAEA5c,EAAA,IAAC+F,GAAA,CACC,GAAAjP,EACA,MAAOxG,GAAS,GAChB,SAAAgT,EACA,YAAa,SAASsZ,IACtB,UAAW3c,EACT6J,EACA,0HACF,CAAA,CACF,CACF,CAAA,CAAA,CAEJ,CCnBA,SAASyJ,GAAOC,EAAK,CACf,GAAA,CACF,KAAK,MAAMA,CAAG,QAEP,MAAA,EACT,CACO,MAAA,EACT,CAEA,MAAMqJ,GAAiB,CAAC,CAAE,KAAAvc,EAAM,aAAAsH,EAAc,SAAA9W,KAAe,CAC3D,KAAM,CAACkF,EAAOiH,CAAQ,EAAID,WAAS,EAAE,EAC/B,CAAC8f,EAAWC,CAAY,EAAI/f,WAAS,EAAK,EAC1C,CAAE,SAAAnH,EAAU,UAAAC,CAAA,EAAcG,EAAM,SAASnF,CAAQ,EAEjDksB,EAAS,IAAM,CACnBlnB,EAAUE,CAAK,EACf4R,EAAa,EAAK,CAAA,EAGpBzJ,EAAAA,UAAU,IAAM,CACd,IAAI8e,EAAWpnB,IACX0d,GAAOvd,CAAK,GACd+mB,EAAa,EAAI,EAEnB9f,EAASggB,GAAY,EAAE,CAAA,EACtB,CAAC3c,CAAI,CAAC,EAETnC,EAAAA,UAAU,IAAM,CACV,CAAC2e,GAAavJ,GAAOvd,CAAK,GAC5BiH,EAAS,EAAE,CACb,EACC,CAAC6f,CAAS,CAAC,EAEd,MAAMI,EAAW,CACf,OACEnd,EAAA,KAAC,QAAM,CAAA,UAAU,0BACd,SAAA,CAAA;AAAA,qHAEDC,EAAA,IAAC,IAAA,CACC,OAAO,SACP,KAAK,yFACL,IAAI,aACJ,UAAU,0BACX,SAAA,cAAA,CAED,CAAA,EACF,EAEF,eACED,EAAA,KAAC,QAAM,CAAA,UAAU,0BACd,SAAA,CAAA,iEACDC,EAAA,IAAC,IAAA,CACC,OAAO,SACP,KAAK,0BACL,IAAI,aACJ,UAAU,0BACX,SAAA,yBAAA,CAED,EAAI,eACS,IACbA,EAAA,IAAC,IAAA,CACC,OAAO,SACP,KAAK,2CACL,IAAI,aACJ,UAAU,0BACX,SAAA,0CAAA,CAED,EAAI,sBAAA,EAEN,EAEF,OACED,EAAA,KAAC,QAAM,CAAA,UAAU,0BAA0B,SAAA,CAAA,cAC7B,IACZC,EAAA,IAAC,IAAA,CACC,OAAO,SACP,KAAK,6CACL,IAAI,aACJ,UAAU,0BACX,SAAA,kBAAA,CAED,EAAK,IAAI,4BACiB,IAC1BA,EAAA,IAAC,IAAA,CACC,OAAO,SACP,KAAK,4IACL,IAAI,aACJ,UAAU,0BACX,SAAA,0BAAA,CAED,EACC;AAAA,kDAAA,EAEH,CAAA,EAIJ,SAASmd,EAAS5K,EAAM,CAClB,OAAAgB,GAAOvd,CAAK,EACC,KAAK,MAAMA,CAAK,EACfuc,CAAI,EAEb,EAEX,CAES,SAAA6K,EAAS7K,EAAMjiB,EAAO,CAC7B,IAAI+sB,EAAW,CAAA,EACX9J,GAAOvd,CAAK,IACHqnB,EAAA,KAAK,MAAMrnB,CAAK,GAE7BqnB,EAAS9K,CAAI,EAAIjiB,EAER2M,EAAA,KAAK,UAAUogB,CAAQ,CAAC,CACnC,CAGE,OAAArd,EAAAA,IAACiE,GAAO,CAAA,KAAA3D,EAAY,aAAAsH,EAClB,SAAA5H,EAAA,IAACqF,GAAA,CACC,MAAO,gBAAgBvU,IACvB,KACEiP,EAAA,KAAC,MAAI,CAAA,UAAU,iCACZ,SAAA,CAAAjP,IAAa,SACZkP,EAAA,IAAC6b,GAAA,CACC,GAAG,YACH,UAAU,SACV,KAAK,kCACL,YAAY,iDACZ,YAAY,qEACZ,UAAYyB,GACN,GAACA,GAKH,CAACA,EAAY,cACb,OAAOA,EAAY,cAAiB,UACpCA,EAAY,aAAa,QAAU,GAMnC,CAACA,EAAY,YACb,OAAOA,EAAY,YAAe,UAClCA,EAAY,WAAW,QAAU,GAMjC,CAACA,EAAY,aACb,OAAOA,EAAY,aAAgB,UACnCA,EAAY,YAAY,QAAU,KAOtC,eAAiBttB,GAAS,CACfiN,EAAA,KAAK,UAAUjN,CAAI,CAAC,CAC/B,CAAA,CACF,EACEc,IAAa,SAEZiP,EAAA,KAAA8C,EAAA,SAAA,CAAA,SAAA,CAACia,EAWE/c,EAAAA,KAAA8C,EAAA,SAAA,CAAA,SAAA,CAAA7C,EAAA,IAAC2c,GAAA,CACC,GAAI,oBACJ,MAAOQ,EAAS,cAAc,GAAK,GACnC,SAAWxtB,GAAMytB,EAAS,eAAgBztB,EAAE,OAAO,OAAS,EAAE,EAC9D,MAAO,4BAAA,CACT,EAEAqQ,EAAA,IAAC2c,GAAA,CACC,GAAI,sBACJ,MAAOQ,EAAS,gBAAgB,GAAK,GACrC,SAAWxtB,GAAMytB,EAAS,iBAAkBztB,EAAE,OAAO,OAAS,EAAE,EAChE,MAAO,8BAAA,CACT,EAEAqQ,EAAA,IAAC2c,GAAA,CACC,GAAI,eACJ,MAAOQ,EAAS,SAAS,GAAK,GAC9B,SAAWxtB,GAAMytB,EAAS,UAAWztB,EAAE,OAAO,OAAS,EAAE,EACzD,MAAO,0BAAA,CACT,EAEAqQ,EAAA,IAAC2c,GAAA,CACC,GAAI,cACJ,MAAOQ,EAAS,QAAQ,GAAK,GAC7B,SAAWxtB,GAAMytB,EAAS,SAAUztB,EAAE,OAAO,OAAS,EAAE,EACxD,MAAO,sBAAA,CACT,CAAA,EACF,EApCEqQ,EAAA,IAAA6C,WAAA,CAAA,SAAA7C,EAAA,IAAC2c,GAAA,CACC,GAAI,eACJ,MAAO3mB,GAAS,GAChB,SAAWrG,GAAMsN,EAAStN,EAAE,OAAO,OAAS,EAAE,EAC9C,MAAO,gBAAA,CACT,CAAA,CACF,EAgCFoQ,EAAAA,KAAC,MAAI,CAAA,UAAU,oBACb,SAAA,CAAAC,EAAA,IAACud,GAAA,CACC,UAAU,iLACV,GAAG,cACH,QAAST,EACT,gBAAiB,IAAMC,EAAa,CAACD,CAAS,EAE9C,SAAA9c,EAAA,IAACwd,GAAA,CAAmB,UAAU,kFAC5B,SAAAxd,MAACyd,IAAU,CAAA,EACb,CAAA,CACF,EAEAzd,EAAA,IAAC,QAAA,CACC,UAAU,oDACV,QAAQ,cACT,SAAA,mBAAA,CAED,CAAA,EACF,CAAA,CAAA,CACF,EAGEA,EAAA,IAAA6C,WAAA,CAAA,SAAA7C,EAAA,IAAC2c,GAAA,CACC,GAAI,eACJ,MAAO3mB,GAAS,GAChB,SAAWrG,GAAMsN,EAAStN,EAAE,OAAO,OAAS,EAAE,EAC9C,MAAO,YAAA,CAAA,EAEX,EAEDqQ,EAAA,IAAA,QAAA,CAAM,UAAU,eAAe,SAEhC,wDAAA,EACCkd,GAAA,YAAAA,EAAWpsB,EAAQ,EACtB,EAEF,UAAW,CACT,cAAeksB,EACf,cAAe,qEACf,WAAY,QACd,CAAA,CAEJ,CAAA,CAAA,CAEJ,EC7PA,SAAwBU,GAAa,CACnC,SAAA5sB,EACA,cAAA6sB,EACA,qBAAAC,EACA,SAAAnI,EACA,aAAAtiB,EACA,gBAAAlC,CACF,EAAG,OACD,KAAM,CAAC4sB,EAAoBC,CAAqB,EAAI9gB,WAAS,EAAK,EAC5D,CAAE,SAAAnH,CAAa,EAAAI,EAAM,SAASnF,CAAQ,EAEtCitB,GAAkBrrB,EAAAzB,GAAA,YAAAA,EAAkBH,KAAlB,MAAA4B,EAA6B,YAAc,CAAC,CAACmD,EAAa,EAAA,GAE5EiK,EAAgBnQ,GAAM,CAC1BA,EAAE,eAAe,EACHguB,GAAA,EAGV1gB,EAAW,IAAM,CACrB6gB,EAAsB,EAAI,CAAA,EAGxB,OAAA3qB,EAEA6M,EAAA,IAAC,SAAA,CACC,QAAS4d,EACT,KAAK,SACL,UAAU,sHAEV,eAAC,MAAI,CAAA,UAAU,+MACb,SAAA5d,MAAC4b,IAAmB,CAAA,EACtB,CAAA,CAAA,EA0BG,CAACmC,GAAmBjtB,IAAa,SAGpCiP,EAAA,KAAA8C,WAAA,CAAA,SAAA,CAAA7C,EAAA,IAAC,SAAA,CACC,QAAS/C,EACT,KAAK,SACL,UAAU,oHAEV,SAAA8C,EAAA,KAAC,MAAI,CAAA,UAAU,oOACb,SAAA,CAACC,EAAAA,IAAAsX,GAAA,CAAS,UAAU,4BAA6B,CAAA,EAAE,iBAAA,EAErD,CAAA,CACF,EACAtX,EAAA,IAAC6c,GAAA,CACC,KAAMgB,EACN,aAAcC,EACd,SAAAhtB,CAAA,CACF,CACF,CAAA,CAAA,EAIAkP,EAAA,IAAC,SAAA,CACC,QAASF,EACT,SAAA2V,EACA,UAAU,sHAEV,SAAAzV,EAAA,IAAC,MAAI,CAAA,UAAU,+MACb,SAAAD,EAAA,KAAC,MAAA,CACC,OAAO,eACP,KAAK,OACL,YAAY,IACZ,QAAQ,YACR,cAAc,QACd,eAAe,QACf,UAAU,gBACV,OAAO,MACP,MAAM,MACN,MAAM,6BAEN,SAAA,CAACC,EAAAA,IAAA,OAAA,CAAK,GAAG,KAAK,GAAG,IAAI,GAAG,KAAK,GAAG,IAAK,CAAA,EACrCA,EAAAA,IAAC,UAAQ,CAAA,OAAO,2BAA4B,CAAA,CAAA,CAAA,CAAA,EAEhD,CAAA,CAAA,CAGR,CCvGA,SAASge,GAAuB,CAC9B,QAAAjO,EACA,QAAAkO,EACA,aAAA7D,EACA,mBAAA8D,EACA,iBAAAC,EAAmB,IACrB,EAAG,CACD,MAAMC,EACJ,4HAEF,OAEIpe,MAAA6C,EAAAA,SAAA,CAAA,SAAA7C,EAAA,IAAC,MAAA,CACC,UACE,uGACCie,EAAU,QAAU,IAGvB,SAAAle,EAAA,KAAC,MAAA,CACC,UACEqe,EACA,0KAGF,SAAA,CAACre,EAAAA,KAAA,MAAA,CAAI,UAAU,sEAEb,SAAA,CAAAA,EAAA,KAAC8D,EAAA,CACC,KAAK,SACL,UAAU,8QACV,QAASuW,EAET,SAAA,CAACpa,EAAAA,IAAAqe,GAAA,CAAK,UAAU,eAAgB,CAAA,EAAE,QAAA,CAAA,CAEpC,EACCF,GACCpe,EAAA,KAAC8D,EAAA,CACC,KAAK,SACL,UAAU,uSACV,QAASsa,EAAiB,QAEzB,SAAA,CAAiBA,EAAA,KACjBA,EAAiB,KAAA,CAAA,CACpB,EAEFne,EAAA,IAAC6D,EAAA,CACC,KAAK,SACL,UAAU,8NACV,QAASqa,EAET,SAAAle,EAAAA,IAAC0B,GAAU,CAAA,UAAU,MAAO,CAAA,CAAA,CAE9B,CAAA,EACF,EACA1B,EAAAA,IAAC,OAAK,SAAQ+P,CAAA,CAAA,CAAA,CAAA,CAChB,CAAA,CAEJ,CAAA,CAAA,CAEJ,CCpDA,SAASuO,IAAgB,OACvB,KAAM,CAACC,EAAcC,CAAe,EAAIxhB,WAAS,EAAK,EAChD,CAAC+c,EAAkBC,CAAmB,EAAIhd,WAAS,EAAK,EAExD,CAACtM,EAAcgD,CAAe,EAAIkC,EAAeK,EAAM,YAAY,GAAK,GACxE,CAAE,SAAAnF,EAAU,eAAAD,CAAmB,EAAAH,EAC/B,CACJ,MAAA0hB,EACA,aAAAI,EACA,aAAAgF,EACA,YAAAC,EACA,MAAAgH,EACA,iBAAAC,EACA,kBAAAC,CACE,EAAAjuB,EAEEO,EAAkB0N,EAAe1I,EAAM,eAAe,EAG5D,GADInF,IAAa,UACbD,IAAmB,MAAc,OAAA,KAErC,MAAMwnB,IAAS3lB,EAAAzB,GAAA,YAAAA,EAAkB,SAAlB,YAAAyB,EAA8B,kBAAsB,CAAA,EAE7DksB,EAAsB,IAAMJ,EAAiBzoB,GAAS,CAACA,CAAI,EAE3DmoB,EAAqB,IAAM,CAC/BM,EAAgB,EAAK,CAAA,EAGjBpE,EAAe,IAAM,CACzBJ,EAAoB,EAAI,CAAA,EAGpBnC,EAAaoC,GAAWC,GAAa,CACzC,IAAIC,EAAS,CAAA,EACbA,EAAOF,CAAK,EAAIC,EAChBxmB,EAAiBiB,IAAe,CAC9B,GAAGA,EACH,GAAGwlB,CACH,EAAA,CAAA,EAGEiE,EACJ,qQAEF,OAEIre,EAAA,KAAA8C,WAAA,CAAA,SAAA,CAAA9C,EAAA,KAAC,MAAA,CACC,UACE,0FACEwe,EAAyB,GAAV,SAGnB,SAAA,CAAAve,EAAA,IAACwV,GAAA,CACC,MAAOpD,EACP,SAAUyF,EAAU,OAAO,EAC3B,gBAAiBQ,EACjB,UAAW,GACX,UAAW,GACX,UAAWpY,EACTme,EACA,qQACF,CAAA,CACF,EACApe,EAAA,IAAC6D,EAAA,CACC,KAAK,SACL,UAAW5D,EACTme,EACA,iJACF,EACA,QAASQ,EAET,SAAA5e,EAAAA,IAAC6e,GAAU,CAAA,UAAU,mCAAoC,CAAA,CAAA,CAC3D,CAAA,CAAA,CACF,EACA7e,EAAA,IAACge,GAAA,CACC,QACEhe,EAAA,IAAC,MAAI,CAAA,UAAU,YACb,SAAAA,EAAA,IAACsX,GAAA,CACC,MAAAlF,EACA,aAAAI,EACA,aAAAgF,EACA,YAAAC,EACA,KAAMgH,EACN,MAAOC,EACP,MAAOC,EACP,UAAA9G,CAAA,CAAA,EAEJ,EAEF,QAAS0G,EACT,aAAAnE,EACA,mBAAA8D,CAAA,CACF,EACAle,EAAA,IAACoV,GAAA,CACC,KAAM2E,EACN,aAAcC,EACd,OAAQtpB,CAAA,CACV,CACF,CAAA,CAAA,CAEJ,CC1GA,SAASouB,IAAiB,OAClB,KAAA,CAACpuB,EAAcgD,CAAe,EAAIkC,EAAeK,EAAM,YAAY,GAAK,GACxE,CAAE,SAAAnF,EAAU,eAAAD,CAAmB,EAAAH,EAC/B,CAAE,MAAA0hB,CAAU,EAAA1hB,EAEZO,EAAkB0N,EAAe1I,EAAM,eAAe,EAG5D,GADInF,IAAa,kBACbD,IAAmB,MAAc,OAAA,KAErC,MAAMwnB,IAAS3lB,EAAAzB,GAAA,YAAAA,EAAkB,iBAAlB,YAAAyB,EAAsC,kBAAsB,CAAA,EAErEmlB,EAAaoC,GAAWC,GAAa,CACzC,IAAIC,EAAS,CAAA,EACbA,EAAOF,CAAK,EAAIC,EAChBxmB,EAAiBiB,IAAe,CAC9B,GAAGA,EACH,GAAGwlB,CACH,EAAA,CAAA,EAGEiE,EACJ,qQAGA,OAAApe,EAAAA,IAAC,MAAI,CAAA,UAAU,8FACb,SAAAA,EAAA,IAACwV,GAAA,CACC,MAAOpD,EACP,SAAUyF,EAAU,OAAO,EAC3B,gBAAiBQ,EACjB,UAAW,GACX,UAAW,GACX,UAAWpY,EACTme,EACA,+QACF,CAAA,CAEJ,CAAA,CAAA,CAEJ,CCvCA,MAAMW,GAAOC,GAEPC,GAAWnb,EAGf,WAAA,CAAC,CAAE,UAAAvD,EAAW,GAAG0C,CAAM,EAAGC,IAC1BlD,EAAA,IAACkf,GAAA,CACC,IAAAhc,EACA,UAAWjD,EACT,sFACAM,CACF,EACC,GAAG0C,CAAA,CACN,CACD,EACDgc,GAAS,YAAcC,GAAmB,YAE1C,MAAMC,GAAcrb,EAGlB,WAAA,CAAC,CAAE,UAAAvD,EAAW,GAAG0C,CAAM,EAAGC,IAC1BlD,EAAA,IAACof,GAAA,CACC,UAAWnf,EACT,uXACAM,CACF,EACC,GAAG0C,EACJ,IAAAC,CAAA,CACF,CACD,EACDic,GAAY,YAAcC,GAAsB,YAEhD,MAAMC,GAAcvb,EAGlB,WAAA,CAAC,CAAE,UAAAvD,EAAW,GAAG0C,CAAM,EAAGC,IAC1BlD,EAAA,IAACsf,GAAA,CACC,UAAWrf,EAAG,kEAAmEM,CAAS,EACzF,GAAG0C,EACJ,IAAAC,CAAA,CACF,CACD,EACDmc,GAAY,YAAcC,GAAsB,YCpChD,SAASC,GAAc,CAAE,KAAAC,GAAQ,CACzB,KAAA,CAAC9uB,EAAcgD,CAAe,EAAIkC,EAAeK,EAAM,YAAY,GAAK,GACxE,CAACsoB,EAAcC,CAAe,EAAIxhB,WAAS,EAAK,EAChD,CAAC+c,EAAkBC,CAAmB,EAAIhd,WAAS,EAAK,EACxD,CAAE,SAAAlM,EAAU,eAAAD,CAAmB,EAAAH,EAC/B,CAAE,UAAA8nB,EAAW,QAAAha,EAAS,cAAA+Z,EAAe,UAAA7F,GAAchiB,EAGrD,GADAI,IAAa,UACbD,IAAmB,OAAS,CAAC2uB,EAAa,OAAA,KAE9C,MAAMZ,EAAsB,IAAMJ,EAAiBzoB,GAAS,CAACA,CAAI,EAE3DmoB,EAAqB,IAAM,CAC/BM,EAAgB,EAAK,CAAA,EAGjBpE,EAAe,IAAM,CACzBJ,EAAoB,EAAI,CAAA,EAGpBnC,EAAaoC,GAAWC,GAAa,CACzC,IAAIC,EAAS,CAAA,EACbA,EAAOF,CAAK,EAAIC,EAChBxmB,EAAiBiB,IAAe,CAC9B,GAAGA,EACH,GAAGwlB,CACH,EAAA,CAAA,EAGEiE,EACJ,qQACIqB,EACJ,6FACIC,EAAkBzf,EACtBwf,EACA,+DAAA,EAEIE,EAAiBC,GAAQA,EAAM,QAAUF,EAE/C,OAEI3f,EAAA,KAAA8C,WAAA,CAAA,SAAA,CAAA9C,EAAA,KAAC,MAAA,CACC,UACE,0FACEwe,EAAyB,GAAV,SAGnB,SAAA,CAAAve,EAAA,IAACwV,GAAA,CACC,MAAM,KACN,MAAO9C,EAAY,SAAW,SAC9B,SAAWpiB,GAAUunB,EAAU,WAAW,EAAEvnB,IAAU,QAAQ,EAC9D,gBAAiB,CAAC,SAAU,QAAQ,EACpC,UAAW,GACX,UAAW,GACX,UAAW2P,EACTme,EACA,sQACAoB,EAAO,SAAW,IACpB,CAAA,CACF,EAEAxf,EAAA,IAAC+e,GAAA,CACC,MAAOvG,EACP,UACE4F,EACA,0GAEF,cAAgB9tB,GAAUunB,EAAU,WAAW,EAAEvnB,EAAM,aAAa,EAEpE,SAAAyP,EAAA,KAACkf,GAAS,CAAA,UAAU,kCAClB,SAAA,CAAAjf,EAAA,IAACmf,GAAA,CACC,MAAM,WACN,UAAW,GAAG3G,IAAc,WAAamH,EAAc,UAAU,EAAIF,IAEpE,SAAA,IAAA,CACH,EACAzf,EAAA,IAACmf,GAAA,CACC,MAAM,OACN,UAAW,GAAG3G,IAAc,OAASmH,EAAc,MAAM,EAAIF,IAE5D,SAAA,IAAA,CACH,EACAzf,EAAA,IAACmf,GAAA,CACC,MAAM,WACN,UAAW,GAAG3G,IAAc,WAAamH,EAAc,UAAU,EAAIF,IAEpE,SAAA,IAAA,CACH,EACAzf,EAAA,IAACmf,GAAA,CACC,MAAM,UACN,UAAW,GAAG3G,IAAc,UAAYmH,EAAc,SAAS,EAAIF,IAElE,SAAA,IAAA,CACH,CAAA,EACF,CAAA,CACF,EACAzf,EAAA,IAAC6D,EAAA,CACC,KAAK,SACL,UAAW5D,EACTme,EACA,kJACAoB,EAAO,SAAW,IACpB,EACA,QAASZ,EAET,SAAA5e,EAAAA,IAAC6e,GAAU,CAAA,UAAU,mCAAoC,CAAA,CAAA,CAC3D,CAAA,CAAA,CACF,EACA7e,EAAA,IAACge,GAAA,CACC,QACEhe,EAAA,IAAC,MAAI,CAAA,UAAU,iBACb,SAAAA,EAAA,IAACsX,GAAA,CACC,QAAA9Y,EACA,cAAA+Z,EACA,UAAA7F,EACA,UAAA8F,EACA,UAAAX,CAAA,CAAA,EAEJ,EAEF,QAAS0G,EACT,aAAAnE,EACA,mBAAA8D,CAAA,CACF,EACAle,EAAA,IAACoV,GAAA,CACC,KAAM2E,EACN,aAAcC,EACd,OAAQtpB,CAAA,CACV,CACF,CAAA,CAAA,CAEJ,CC9IwB,SAAAmvB,GAAgB,CAAE,UAAAtf,GAAa,CAEnD,OAAAR,EAAA,KAAC,MAAA,CACC,MAAM,6BACN,MAAM,KACN,OAAO,KACP,QAAQ,YACR,KAAK,OACL,OAAO,eACP,YAAY,IACZ,cAAc,QACd,eAAe,QACf,UAAWE,EAAGM,EAAW,+BAA+B,EAExD,SAAA,CAACP,EAAAA,IAAA,OAAA,CAAK,EAAE,+DAAgE,CAAA,EACxEA,EAAAA,IAAC,OAAK,CAAA,EAAE,mDAAoD,CAAA,CAAA,CAAA,CAAA,CAGlE,CCdA,MAAM8J,GACJ,4hBAEF,SAASgW,GAAS,CAAE,SAAAvI,EAAU,SAAAwI,EAAU,WAAAC,EAAY,WAAAC,EAAY,cAAAC,EAAe,KAAA7L,EAAO,IAAS,CACvF,MAAA+E,EAAY/E,EAAO,gBAAkB,gBAC3C,OAEItU,EAAA,KAAA8C,WAAA,CAAA,SAAA,CAAA7C,EAAAA,IAAC,OAAI,UAAW,GAAGoZ,oBACjB,SAACpZ,EAAAA,IAAA,MAAA,CAAI,GAAG,gBAAgB,UAAU,4BAC/B,SAAA+f,EAAS,IAAI,CAACI,EAAS/tB,aACrB2N,OAAAA,OAAA0P,GAAM,SAAN,CAEC,SAAA,CAAAzP,EAAA,IAAC,MAAA,CACC,UAAW,YACT+f,EAAS,SAAW,EAAI,IAAM,sEAGhC,SAAAhgB,EAAA,KAAC,MAAI,CAAA,UAAU,iCACb,SAAA,CAAAA,OAACiG,EAAM,CAAA,QAAS,SAAS5T,IAAO,UAAU,gCAAgC,SAAA,CAAA,SACjE4N,EAAA,IAAA,QAAA,CAAM,UAAU,aAAa,SAAgB,mBAAA,CAAA,EACtD,EACAA,EAAA,IAACsY,GAAA,CACC,GAAI,SAASlmB,IACb,SAAUmlB,EACV,QAAO7kB,EAAAytB,GAAA,YAAAA,EAAS,QAAT,YAAAztB,EAAgB,UAAW,GAClC,SAAW/C,GAAMqwB,EAAW5tB,EAAK,QAASzC,EAAE,OAAO,OAAS,IAAI,EAChE,YAAY,kDACZ,UAAWsQ,EACT6J,GACA,+DACF,CAAA,CACF,CAAA,EACF,CAAA,CACF,EAGA9J,EAAA,IAAC,MAAA,CACC,UAAW,YACT+f,EAAS,SAAW,EAAI,IAAM,sEAGhC,SAAAhgB,EAAA,KAAC,MAAI,CAAA,UAAU,iCACb,SAAA,CAAAA,OAACiG,EAAM,CAAA,QAAS,UAAU5T,IAAO,UAAU,gCAAgC,SAAA,CAAA,UACjE4N,EAAA,IAAA,QAAA,CAAM,UAAU,aAAa,SAAgB,mBAAA,CAAA,EACvD,EACAA,EAAA,IAACsY,GAAA,CACC,GAAI,UAAUlmB,IACd,SAAUmlB,EACV,QAAO9kB,EAAA0tB,GAAA,YAAAA,EAAS,SAAT,YAAA1tB,EAAiB,UAAW,GACnC,SAAW9C,GAAMqwB,EAAW5tB,EAAK,SAAUzC,EAAE,OAAO,OAAS,IAAI,EACjE,YAAa,mDACb,UAAWsQ,EACT6J,GACA,+DACF,CAAA,CACF,CAAA,EACF,CAAA,CACF,CA/CmB,CAAA,EAAA1X,CAgDrB,EACD,CACH,CAAA,EACF,EACA2N,EAAAA,KAAC,MAAI,CAAA,UAAU,sBACb,SAAA,CAAAC,EAAA,IAAC6D,EAAA,CACC,KAAK,SACL,UAAU,0TACV,QAASqc,EAET,SAAAlgB,EAAAA,IAACogB,GAAM,CAAA,UAAU,UAAW,CAAA,CAAA,CAC9B,EACApgB,EAAA,IAAC6D,EAAA,CACC,KAAK,SACL,UAAU,qTACV,QAASoc,EAET,SAAAjgB,EAAAA,IAACqgB,GAAK,CAAA,UAAU,UAAW,CAAA,CAAA,CAC7B,CAAA,EACF,CACF,CAAA,CAAA,CAEJ,CCxEA,SAASC,IAAgB,OACvB,KAAM,CAAC/B,EAAcC,CAAe,EAAIxhB,WAAS,EAAK,EAChD,CAACujB,EAAcC,CAAe,EAAIxjB,WAAS,EAAK,EAChD,CAAC+c,EAAkBC,CAAmB,EAAIhd,WAAS,EAAK,EAExD,CAACtM,EAAcgD,CAAe,EAAIkC,EAAeK,EAAM,YAAY,GAAK,GACxE,CAAE,SAAAnF,EAAU,eAAAD,CAAmB,EAAAH,EAC/B,CAAE,MAAA0hB,EAAO,WAAAK,EAAY,aAAA+E,EAAc,SAAAuI,EAAU,YAAAtI,EAAa,KAAAC,EAAM,KAAAwB,EAAM,gBAAAC,CAC1E,EAAAzoB,EAEIO,EAAkB0N,EAAe1I,EAAM,eAAe,EAG5D,GADInF,IAAa,UACbD,IAAmB,MAAc,OAAA,KAErC,MAAMwnB,IAAS3lB,EAAAzB,GAAA,YAAAA,EAAkB,SAAlB,YAAAyB,EAA8B,kBAAsB,CAAA,EAE7DksB,EAAsB,IAAMJ,EAAiBzoB,GAAS,CAACA,CAAI,EAC3D0qB,EAAkB,IAAMD,EAAiBzqB,GAAS,CAACA,CAAI,EAEvDmoB,EAAqB,IAAM,CAC/BM,EAAgB,EAAK,CAAA,EAGjBpE,EAAe,IAAM,CACzBJ,EAAoB,EAAI,CAAA,EAGpBnC,EAAaoC,GAAWC,GAAa,CACzC,IAAIC,EAAS,CAAA,EACbA,EAAOF,CAAK,EAAIC,EAChBxmB,EAAiBiB,IAAe,CAC9B,GAAGA,EACH,GAAGwlB,CACH,EAAA,CAAA,EAGE6F,EAAa,CAACrZ,EAAGpX,EAAM2qB,EAAW,OAAS,CAC/C,IAAIC,EAAS,CAAA,EACTuG,GAAUhwB,GAAA,YAAAA,EAAc,SAAS,UAAW,CAAA,EAC5CiwB,EAAiB,CAAE,GAAGD,EAAQ/Z,CAAC,CAAE,EACrCga,EAAepxB,CAAI,EAAI,CAAE,QAAS2qB,CAAS,EAC3CwG,EAAQ/Z,CAAC,EAAIga,EACbxG,EAAO,SAAWuG,EAClBhtB,EAAiBiB,IAAe,CAC9B,GAAGA,EACH,GAAGwlB,CACH,EAAA,CAAA,EAGE8F,EAAa,IAAM,CACvB,IAAI9F,EAAS,CAAA,EACTuG,GAAUhwB,GAAA,YAAAA,EAAc,SAAS,UAAW,CAAA,EAChDgwB,EAAQ,KAAK,CAAE,MAAO,CAAE,QAAS,IAAM,OAAQ,CAAE,QAAS,EAAG,CAAG,CAAA,EAChEvG,EAAO,SAAWuG,EAClBhtB,EAAiBiB,IAAe,CAC9B,GAAGA,EACH,GAAGwlB,CACH,EAAA,CAAA,EAGE+F,EAAgB,IAAM,CAC1B,IAAI/F,EAAS,CAAA,EACTuG,GAAUhwB,GAAA,YAAAA,EAAc,SAAS,UAAW,CAAA,EAC5C,GAAAgwB,EAAQ,QAAU,EAAG,CACvBvG,EAAO,SAAW,CAAC,CAAE,MAAO,CAAE,QAAS,EAAG,EAAG,OAAQ,CAAE,QAAS,EAAA,CAAM,CAAA,EACtEzmB,EAAiBiB,IAAe,CAC9B,GAAGA,EACH,GAAGwlB,CACH,EAAA,EACF,OAEFuG,EAAQ,IAAI,EACZvG,EAAO,SAAWuG,EAClBhtB,EAAiBiB,IAAe,CAC9B,GAAGA,EACH,GAAGwlB,CACH,EAAA,CAAA,EAGEiE,EACJ,qQAEF,OAEIre,EAAA,KAAA8C,WAAA,CAAA,SAAA,CAAA9C,EAAA,KAAC,MAAA,CACC,UACE,0FACEwe,EAAyB,GAAV,SAGnB,SAAA,CAAAve,EAAA,IAACwV,GAAA,CACC,MAAOpD,EACP,SAAUyF,EAAU,OAAO,EAC3B,gBAAiBQ,EACjB,UAAW,GACX,UAAW,GACX,UAAWpY,EACTme,EACA,qQACF,CAAA,CACF,EACApe,EAAA,IAAC6D,EAAA,CACC,KAAK,SACL,UAAW5D,EACTme,EACA,iJACF,EACA,QAASQ,EAET,SAAA5e,EAAAA,IAAC6e,GAAU,CAAA,UAAU,mCAAoC,CAAA,CAAA,CAC3D,CAAA,CAAA,CACF,EACA7e,EAAA,IAACge,GAAA,CACC,QACEhe,EAAA,IAAC,MAAI,CAAA,UAAU,YACZ,SACCugB,EAAAvgB,EAAA,IAAC8f,GAAA,CACC,SAAAC,EACA,WAAAC,EACA,WAAAC,EACA,cAAAC,CAAA,CAAA,EAGFlgB,EAAA,IAACsX,GAAA,CACC,MAAAlF,EACA,WAAAK,EACA,aAAA+E,EACA,YAAAC,EACA,KAAAC,EACA,KAAAwB,EACA,gBAAAC,EACA,UAAAtB,CAAA,CAAA,EAGN,EAEF,QAAS0G,EACT,aAAAnE,EACA,mBAAA8D,EACA,iBAAkB,CAChB,OAAQqC,EAAe,OAAS,QAAU,YAC1C,QAASE,EACT,KAAMzgB,EAAAA,IAAC6f,GAAgB,CAAA,UAAU,eAAgB,CAAA,CACnD,CAAA,CACF,EACA7f,EAAA,IAACoV,GAAA,CACC,KAAM2E,EACN,aAAcC,EACd,OAAQtpB,CAAA,CACV,CACF,CAAA,CAAA,CAEJ,CCnJA,MAAMkwB,GAAmB,CAAC,CAAE,KAAAtgB,EAAM,aAAAsH,EAAc,OAAQF,EAAS,MAAApF,KAAY,CAE3E,KAAM,CAACtP,EAAQ4mB,CAAS,EAAI5c,WAAS0K,CAAO,EACtCqG,EAAapa,EAAkBsC,EAAM,OAAO,EAC5C,CAACsqB,EAAcC,CAAe,EAAIxjB,WAAS,EAAK,EAEhDvL,EAAqBkN,EAAe1I,EAAM,kBAAkB,EAC5DhF,EAAkB0N,EAAe1I,EAAM,eAAe,EAEtDwqB,EAAkB,IAAMD,EAAiBzqB,GAAS,CAACA,CAAI,EAEvD8hB,EAAaoC,GAAWC,GAAa,CACzC,IAAIC,EAAS,CAAA,EACbA,EAAOF,CAAK,EAAIC,EAChBN,EAAWjlB,GACT8S,EAAc,CACZ,OAAQ,CACN,GAAG9S,EACH,GAAGwlB,CACL,EACA,gBAAAlpB,CAAA,CACD,CAAA,CACH,EAGI+uB,EAAa,CAACrZ,EAAGpX,EAAM2qB,EAAW,OAAS,CAC/C,IAAIC,EAAS,CAAA,EACTuG,GAAU1tB,GAAA,YAAAA,EAAQ,SAAS,UAAW,CAAA,EACtC2tB,EAAiB,CAAE,GAAGD,EAAQ/Z,CAAC,CAAE,EACrCga,EAAepxB,CAAI,EAAI,CAAE,QAAS2qB,CAAS,EAC3CwG,EAAQ/Z,CAAC,EAAIga,EACbxG,EAAO,SAAWuG,EAClB9G,EAAWjlB,GACT8S,EAAc,CACZ,OAAQ,CACN,GAAG9S,EACH,GAAGwlB,CACL,EACA,gBAAAlpB,CAAA,CACD,CAAA,CACH,EAGIgvB,EAAa,IAAM,CACvB,IAAI9F,EAAS,CAAA,EACTuG,GAAU1tB,GAAA,YAAAA,EAAQ,SAAS,UAAW,CAAA,EAC1C0tB,EAAQ,KAAK,CAAE,MAAO,CAAE,QAAS,IAAM,OAAQ,CAAE,QAAS,EAAG,CAAG,CAAA,EAChEvG,EAAO,SAAWuG,EAClB9G,EAAWjlB,GACT8S,EAAc,CACZ,OAAQ,CACN,GAAG9S,EACH,GAAGwlB,CACL,EACA,gBAAAlpB,CAAA,CACD,CAAA,CACH,EAGIivB,EAAgB,IAAM,CAC1B,IAAI/F,EAAS,CAAA,EACTuG,GAAU1tB,GAAA,YAAAA,EAAQ,SAAS,UAAW,CAAA,EACtC,GAAA0tB,EAAQ,QAAU,EAAG,CACvBvG,EAAO,SAAW,CAAC,CAAE,MAAO,CAAE,QAAS,EAAG,EAAG,OAAQ,CAAE,QAAS,EAAA,CAAM,CAAA,EACtEP,EAAWjlB,GACT8S,EAAc,CACZ,OAAQ,CACN,GAAG9S,EACH,GAAGwlB,CACL,EACA,gBAAAlpB,CAAA,CACD,CAAA,EAEH,OAEFyvB,EAAQ,IAAI,EACZvG,EAAO,SAAWuG,EAClB9G,EAAWjlB,GACT8S,EAAc,CACZ,OAAQ,CACN,GAAG9S,EACH,GAAGwlB,CACL,EACA,gBAAAlpB,CAAA,CACD,CAAA,CACH,EAGI6Y,EACJ,4hBAEIyL,EAAe,IAAM,CACnBlf,GAAA,CACJ,OAAQ,OACR,IAAK,eACL,KAAMoR,EAAc,CAAE,OAAAzU,EAAQ,gBAAA/B,EAAiB,EAC/C,gBAAiB,EAAA,CAClB,EAAE,KAAMsJ,GAAQ,CACfwT,EAAWxT,GAAA,YAAAA,EAAK,IAAI,CAAA,CACrB,CAAA,EAGG8f,EAAe,IAAM,CACzB,MAAMwG,EAAWnY,IAAW1V,GAAA,YAAAA,EAAQ,QAAS,QAAQ,EACtCwW,EAAA,CACb,KAAM/B,EAAc,CAAE,OAAAzU,EAAQ,gBAAA/B,EAAiB,EAC/C,SAAA4vB,EACA,WAAYrX,EAAe,MAAM,IAAA,CAClC,CAAA,EAGHrL,OAAAA,EAAAA,UAAU,IAAM,CACdyb,EAAUlS,CAAO,CAAA,EAEhB,CAACpH,CAAI,CAAC,EAGPN,EAAAA,IAACiE,GAAO,CAAA,KAAA3D,EAAY,aAAAsH,EAClB,SAAA5H,EAAA,IAACqF,GAAA,CACC,MAAO,GAAG/C,GAAS,YAAYtP,GAAA,YAAAA,EAAQ,QACvC,UAAU,0BACV,KACE+M,EAAA,KAAC,MAAI,CAAA,UAAU,0CACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,mCACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,2DACb,SAAA,CAAAC,MAACgG,EAAM,CAAA,QAAQ,eAAe,UAAU,gCAAgC,SAExE,OAAA,EACAhG,EAAA,IAAC+F,GAAA,CACC,GAAG,eACH,OAAO/S,GAAA,YAAAA,EAAQ,QAAS,GACxB,SAAWrD,GAAMkoB,EAAU,OAAO,EAAEloB,EAAE,OAAO,OAAS,EAAE,EACxD,YAAY,YACZ,UAAWsQ,EACT6J,EACA,0HACF,CAAA,CACF,CAAA,EACF,EACA/J,EAAAA,KAAC,MAAI,CAAA,UAAU,2DACb,SAAA,CAAAC,MAACgG,EAAM,CAAA,QAAQ,WAAW,UAAU,gCAAgC,SAEpE,KAAA,EACAhG,EAAA,IAACsG,GAAA,CACC,GAAG,WACH,OAAOtT,GAAA,YAAAA,EAAQ,WAAY,GAC3B,SAAU6kB,EAAU,UAAU,EAC9B,QAASpmB,EACT,UAAWwO,EACT6J,EACA,gHACF,EACA,mBAAmB,yBAAA,CACrB,GACC9W,GAAA,YAAAA,EAAQ,YAAa,UACpB+M,EAAA,KAAC8D,EAAA,CACC,KAAK,SACL,UAAU,qSACV,QAAS4c,EAET,SAAA,CAACzgB,EAAAA,IAAA6f,GAAA,CAAgB,UAAU,eAAgB,CAAA,GACzCU,EAAe,OAAS,QAAU,WAAA,CAAA,CACtC,CAAA,EAEJ,CAAA,EACF,EACAvgB,EAAAA,IAAC,MAAI,CAAA,UAAU,2DAA4D,CAAA,EAC3ED,EAAAA,KAAC,MAAI,CAAA,UAAU,aACV,SAAA,GAAQ/M,GAAA,YAAAA,EAAA,YAAa,UAAY,CAACutB,IACnCvtB,GAAA,YAAAA,EAAQ,YAAa,WACrBgN,EAAAA,IAACsX,GAAS,CAAA,OAAAtkB,EAAgB,UAAA6kB,CAAsB,CAAA,GAEjD7kB,GAAA,YAAAA,EAAQ,YAAa,UAAYutB,GAChCvgB,EAAA,IAAC8f,GAAA,CACC,SAAU9sB,EAAO,SACjB,WAAAgtB,EACA,WAAAC,EACA,cAAAC,EACA,KAAM,EAAA,CACR,CAAA,EAEJ,CAAA,EACF,EAEF,QAEIlgB,EAAA,IAAA6C,WAAA,CAAA,SAAA7C,EAAA,IAACmF,GAAA,CACC,QAASoQ,EACT,UAAU,yGACX,SAAA,IAAA,CAAA,EAGH,EAEF,8BAEI,SAACvV,EAAAA,IAAAoF,GAAA,CAAa,QAASiV,EAAc,UAAU,sCAAsC,SAAA,IAAA,CAErF,CACF,CAAA,CAAA,CAGN,CAAA,CAAA,CAEJ,ECxNMyG,GAAeC,GAEfC,GAAsBC,GAQtBC,GAAyBC,GAEzBC,GAAyBtd,EAAAA,WAK7B,CAAC,CAAE,UAAAvD,EAAW,MAAA8gB,EAAO,SAAAvkB,EAAU,GAAGmG,GAASC,IAC3CnD,EAAA,KAACuhB,GAAA,CACC,IAAApe,EACA,UAAWjD,EACT,mNACAohB,GAAS,OACT9gB,CACF,EACC,GAAG0C,EAEH,SAAA,CAAAnG,EACDkD,EAAAA,IAACuhB,GAAa,CAAA,UAAU,iBAAkB,CAAA,CAAA,CAAA,CAC5C,CACD,EACDH,GAAuB,YAAcE,GAAiC,YAEtE,MAAME,GAAyB1d,EAG7B,WAAA,CAAC,CAAE,UAAAvD,EAAW,GAAG0C,CAAM,EAAGC,IAC1BlD,EAAA,IAACyhB,GAAA,CACC,IAAAve,EACA,UAAWjD,EACT,yMACAM,CACF,EACC,GAAG0C,CAAA,CACN,CACD,EACDue,GAAuB,YAAcC,GAAiC,YAEtE,MAAMC,GAAsB5d,EAAAA,WAG1B,CAAC,CAAE,UAAAvD,EAAW,WAAAyW,EAAa,EAAG,GAAG/T,GAASC,IACzClD,EAAAA,IAAA2hB,GAAA,CACC,SAAA3hB,EAAA,IAAC4hB,GAAA,CACC,IAAA1e,EACA,WAAA8T,EACA,UAAW/W,EACT,gVACAM,CACF,EACC,GAAG0C,CAAA,CACN,CAAA,CACF,CACD,EACDye,GAAoB,YAAcE,GAA8B,YAEhE,MAAMC,GAAmB/d,EAAAA,WAKvB,CAAC,CAAE,UAAAvD,EAAW,MAAA8gB,EAAO,GAAGpe,CAAM,EAAGC,IACjClD,EAAA,IAAC8hB,GAAA,CACC,IAAA5e,EACA,UAAWjD,EACT,yNACAohB,GAAS,OACT9gB,CACF,EACC,GAAG0C,CAAA,CACN,CACD,EACD4e,GAAiB,YAAcC,GAA2B,YAE1D,MAAMC,GAA2Bje,EAAAA,WAG/B,CAAC,CAAE,UAAAvD,EAAW,SAAAzD,EAAU,QAAAklB,EAAS,GAAG/e,GAASC,IAC7CnD,EAAA,KAACkiB,GAAA,CACC,IAAA/e,EACA,UAAWjD,EACT,8NACAM,CACF,EACA,QAAAyhB,EACC,GAAG/e,EAEJ,SAAA,CAAAjD,EAAA,IAAC,OAAK,CAAA,UAAU,+DACd,SAAAA,EAAAA,IAACkiB,GAAA,CACC,SAAAliB,EAAAA,IAACqG,GAAM,CAAA,UAAU,SAAU,CAAA,CAC7B,CAAA,EACF,EACCvJ,CAAA,CAAA,CACH,CACD,EACDilB,GAAyB,YAAcE,GAAmC,YAE1E,MAAME,GAAwBre,EAAAA,WAG5B,CAAC,CAAE,UAAAvD,EAAW,SAAAzD,EAAU,GAAGmG,CAAM,EAAGC,IACpCnD,EAAA,KAACqiB,GAAA,CACC,IAAAlf,EACA,UAAWjD,EACT,8NACAM,CACF,EACC,GAAG0C,EAEJ,SAAA,CAAAjD,EAAA,IAAC,OAAK,CAAA,UAAU,+DACd,SAAAA,EAAAA,IAACkiB,GAAA,CACC,SAAAliB,EAAAA,IAACqiB,GAAO,CAAA,UAAU,sBAAuB,CAAA,CAC3C,CAAA,EACF,EACCvlB,CAAA,CAAA,CACH,CACD,EACDqlB,GAAsB,YAAcC,GAAgC,YAEpE,MAAME,GAAoBxe,EAAAA,WAKxB,CAAC,CAAE,UAAAvD,EAAW,MAAA8gB,EAAO,GAAGpe,CAAM,EAAGC,IACjClD,EAAA,IAACuiB,GAAA,CACC,IAAArf,EACA,UAAWjD,EACT,uEACAohB,GAAS,OACT9gB,CACF,EACC,GAAG0C,CAAA,CACN,CACD,EACDqf,GAAkB,YAAcC,GAA4B,YAE5D,MAAMC,GAAwB1e,EAG5B,WAAA,CAAC,CAAE,UAAAvD,EAAW,GAAG0C,CAAM,EAAGC,IAC1BlD,EAAA,IAACyiB,GAAA,CACC,IAAAvf,EACA,UAAWjD,EAAG,gDAAiDM,CAAS,EACvE,GAAG0C,CAAA,CACN,CACD,EACDuf,GAAsB,YAAcC,GAAgC,YC5JpE,MAAMC,GAAgB,CACpB,OAAQ,SACR,YAAa,eACb,OAAQ,OACR,eAAgB,UAChB,OAAQ,MACV,EAEA,SAAwBC,GAAU,CAAE,SAAA7xB,EAAU,MAAAR,GAAS,OACrD,KAAM,CAACutB,EAAoBC,CAAqB,EAAI9gB,WAAS,EAAK,EAC5D/L,EAAkB0N,EAAe1I,EAAM,eAAe,EAEtDoc,EAAOH,GAAQ,CACnB,KAAM,GACN,SAAAphB,EACA,MAAO,GACP,UAAW,MAAA,CACZ,EAEK8xB,GAAiBlwB,EAAAzB,GAAA,YAAAA,EAAkBH,KAAlB,YAAA4B,EAA6B,YAGpD,OAEIqN,EAAA,KAAA8C,WAAA,CAAA,SAAA,CAAA9C,EAAA,KAACoiB,GAAA,CACC,MAAA7xB,EACA,GAAIQ,EACJ,UAAU,qEAET,SAAA,CAAAuhB,EACAqQ,GAAc5xB,CAAQ,GAAKA,EAC3B,CAAC,CAAC,CAAC,cAAe,QAAQ,EAAE,KAAMnB,GAAMA,IAAMmB,CAAQ,GAAKkP,EAAAA,IAAC,OAAI,SAAC,GAAA,CAAA,EAClEA,EAAAA,IAAC,MAAI,CAAA,UAAU,iBAAkB,CAAA,EAChC4iB,EACC7iB,EAAA,KAAC,SAAA,CACC,UAAU,wLACV,QAAUpQ,GAAM,CACdA,EAAE,eAAe,EACjBmuB,EAAsB,EAAI,CAC5B,EAEA,SAAA,CAAC9d,EAAAA,IAAAsX,GAAA,CAAS,UAAU,kDAAmD,CAAA,EAAE,cAAA,CAAA,CAAA,EAGzE,IAAA,CAAA,CACN,EACAtX,EAAA,IAAC6c,GAAA,CACC,KAAMgB,EACN,aAAcC,EACd,SAAAhtB,CAAA,CACF,CACF,CAAA,CAAA,CAEJ,CC3DA,SAAwB+xB,GAAc,CAAE,UAAAnxB,EAAW,SAAAoxB,GAAY,CAC7D,OAEK9iB,EAAAA,IAAA6C,EAAAA,SAAA,CAAA,SAAAnR,EAAU,IAAKZ,GACdkP,EAAA,IAAC+iB,GAA4B,CAAA,MAAOjyB,EAAU,SAAAgyB,EAAoB,SAAAhyB,CAA/C,EAAAA,CAAmE,CACvF,CACH,CAAA,CAEJ,CCLA,SAAwBkyB,GAAW,CACjC,OAAAhwB,EAAS,CAAC,EACV,MAAA1C,EACA,SAAAwyB,EACA,eAAAG,EACA,eAAAC,CACF,EAAG,CACK,KAAA,CAAE,SAAApyB,CAAa,EAAAkC,EAEfqf,EAAOH,GAAQ,CACnB,KAAM,GACN,SAAUlf,GAAA,YAAAA,EAAQ,SAClB,MAAOA,GAAA,YAAAA,EAAQ,MACf,MAAO,GACP,UAAW,MAAA,CACZ,EAEKmwB,EAAiB,IAAM,CAC3B,IAAI3I,EAAS,GAAG1pB,IAEZ,GAAAA,IAAa,eAAiBA,IAAa,SAAU,CACjD,KAAA,CAAE,aAAA0hB,EAAc,MAAAJ,CAAU,EAAApf,EAC5Bof,IAAOoI,GAAU,KAAKpI,KACtBI,IAAcgI,GAAU,OAAOhI,aAC1B1hB,IAAa,SAAU,CAC1B,KAAA,CAAE,WAAA2hB,EAAY,MAAAL,CAAU,EAAApf,EAC1Bof,IAAOoI,GAAU,KAAKpI,KACtBK,IAAY+H,GAAU,OAAO/H,aACxB3hB,IAAa,SAAU,CAC1B,KAAA,CAAE,UAAA4hB,EAAW,UAAA8F,CAAc,EAAAxlB,EAC7BwlB,IAAWgC,GAAU,KAAKhC,KAC1B9F,IAAqB8H,GAAA,sBAChB1pB,IAAa,iBAAkB,CAClC,KAAA,CAAE,MAAAshB,CAAU,EAAApf,EACdof,IAAOoI,GAAU,KAAKpI,KAMrB,OAAAoI,CAAA,EAKP,OAAAza,EAAA,KAACoiB,GAAA,CACC,MAAA7xB,EACA,UAAU,qEAET,SAAA,CAAA+hB,EACArf,GAAA,YAAAA,EAAQ,MACT+M,EAAAA,KAAC,QAAM,CAAA,UAAU,OAAO,SAAA,CAAA,IAAEojB,EAAe,EAAE,GAAA,EAAC,EAC5CnjB,EAAAA,IAAC,MAAI,CAAA,UAAU,iBAAkB,CAAA,EACjCA,EAAA,IAAC,SAAA,CACC,UAAU,8IACV,QAAUrQ,GAAM,CACdA,EAAE,eAAe,EACjBszB,EAAejwB,CAAM,CACvB,EAEA,eAAC2d,GAAS,EAAA,CAAA,CACZ,EACA3Q,EAAA,IAAC,SAAA,CACC,UAAU,qIACV,QAAUrQ,GAAM,CACdA,EAAE,eAAe,EACjBuzB,EAAelwB,CAAM,CACvB,EAEA,eAACyO,GAAU,EAAA,CAAA,CACb,CAAA,CAAA,CAAA,CAGN,CC5EA,SAAwB2hB,GAAY,CAAE,QAAA7tB,EAAS,SAAAutB,EAAU,eAAAG,EAAgB,eAAAC,GAAkB,CACzF,OAEKljB,EAAAA,IAAA6C,EAAAA,SAAA,CAAA,SAAAtN,EAAQ,IAAKvC,GACZgN,EAAA,IAACgjB,GAAA,CAEC,MAAOhwB,EACP,SAAA8vB,EACA,eAAAG,EACA,eAAAC,EACA,OAAAlwB,CAAA,EALKA,GAAA,YAAAA,EAAQ,QAOhB,CAAA,CACH,CAAA,CAEJ,CCOA,SAAwBqwB,IAAsB,CAC5C,KAAM,CAACC,EAAUC,CAAW,EAAIvmB,WAAS,EAAK,EACxC,CAACwmB,EAAaC,CAAc,EAAIzmB,WAAS,EAAI,EAC7C,CAAC0mB,EAAeC,CAAgB,EAAI3mB,WAAS,EAAI,EACjD,CAAC4mB,EAAoBC,CAAqB,EAAI7mB,WAAS,EAAK,EAC5D,CAAChK,EAAQ4mB,CAAS,EAAI5c,WAAS,EAAK,EAEpCvL,EAAqBkN,EAAe1I,EAAM,kBAAkB,EAC5DhF,EAAkB0N,EAAe1I,EAAM,eAAe,EACtD,CAACV,EAASwY,CAAU,EAAInY,EAAeK,EAAM,OAAO,EAEpDvF,EAAeiO,EAAe1I,EAAM,YAAY,GAAK,CAAA,EACrD,CAAE,SAAAnF,EAAU,eAAAD,CAAmB,EAAAH,EAC/B,CAAE,gBAAAmP,CAAA,EAAoB5J,EAAM,gBAAgB,EAE5C6tB,EAAwBtoB,KACxB8Z,EAAuBla,KAEvB2oB,EAAgBtH,GAAa,CACZnH,EAAA,OACnB,CAAE,GAAGmH,CAAS,EACd,CACE,UAAYzsB,GAAS,CACnB+d,EAAW/d,CAAI,CACjB,EACA,QAAUkD,GAAU,CACV,QAAA,MAAM,8BAA+BA,CAAK,CACpD,CACF,CAAA,CACF,EAGI4oB,EAAkBW,GAAa,CAC7B,MAAAuH,EAAa,CAAE,GAAGvc,EAAc,CAAE,OAAQgV,EAAU,gBAAAxrB,EAAiB,EAAG,SAAU,MACxF8yB,EAAaC,CAAU,CAAA,EAKzB7lB,EAAAA,UAAU,IAAM,CACd,MAAM8lB,EAAwB,CAACxyB,EAAmB,KAAM9B,GAAMA,IAAMmB,CAAQ,EACxED,GAAkB,OAASozB,GACbpkB,GAClB,EACC,CAACpO,CAAkB,CAAC,EAGvB0M,EAAAA,UAAU,IAAM,CACd,GAAIrN,EAAU,CACN,MAAA0B,EAAoB,KAAK,MAAM,aAAa,QAAQ,mBAAmB,CAAC,GAAK,GACnF,aAAa,QAAQ,wBAAyB,KAAK,UAAU9B,CAAY,CAAC,EAC7D,aAAA,QACX,oBACA,KAAK,UAAU,CAAE,GAAG8B,EAAmB,CAAC1B,CAAQ,EAAGJ,EAAa,MAAO,CAAA,EAE3E,EACC,CAACA,CAAY,CAAC,EAGX,MAAAwzB,EAAoBC,GAAgB,CAGxC,GAFAZ,EAAY,EAAK,EAEZY,EAEHtkB,EAAgB,CAAA,EAAI,CAAE,SAAUskB,CAAa,CAAA,MAF7B,OAGlB,EAIIC,EAAkBC,GAAc,CAEpC,GADAd,EAAY,EAAK,EACZc,EAEaxkB,EAAA,CAAA,EAAIwkB,CAAS,MAFf,OAGhB,EAGIpB,EAAkBjwB,GAAW,CACjC6wB,EAAsB,EAAI,EAC1BjK,EAAU5mB,CAAM,CAAA,EAGZsxB,EAAkB,IAAM,CAC5BR,EAAsB,OAAO,CAAE,IAAK,CAAA,CAAI,CAAA,CAAA,EAGpCZ,EAAkBlwB,GAAW,CACjC8wB,EAAsB,OAAO,CAAE,IAAK9wB,CAAQ,CAAA,CAAA,EAGxCqf,EAAOH,GAAQ,CACnB,KAAM,GACN,GAAGxhB,EACH,gBAAiB,GACjB,MAAO,GACP,OAAQ,EAAA,CACT,EAGC,OAAAqP,EAAA,KAACkE,GAAO,CAAA,UAAU,UAChB,SAAA,CAAAlE,EAAA,KAAC+gB,GAAa,CAAA,KAAMwC,EAAU,aAAcC,EAC1C,SAAA,CAACvjB,EAAAA,IAAAghB,GAAA,CAAoB,QAAO,GAC1B,SAAAjhB,EAAA,KAAC8D,EAAA,CACC,GAAG,wBACH,QAAQ,UACR,UAAW,mMAEV,SAAA,CAAAwO,EACArS,EAAA,IAAA,OAAA,CAAK,UAAU,+MAA+M,SAE/N,MAAA,CAAA,CAAA,CAAA,EAEJ,EACAD,EAAA,KAAC2hB,GAAA,CACC,UAAU,yCACV,iBAAmB3xB,GAAUA,EAAM,eAAe,EAElD,SAAA,CAAAgQ,EAAA,KAACuiB,GAAA,CACC,UAAU,oCACV,QAAS,IAAMqB,EAAkB5tB,GAAS,CAACA,CAAI,EAE9C,SAAA,CAAA2tB,EAAgB,QAAU,QAAQ,YAAA,CAAA,CACrC,QACClB,GAAsB,EAAA,EACvBxiB,EAAA,IAACkhB,GAAA,CACC,MAAOpwB,EACP,cAAeozB,EACf,UAAU,kBAET,SACER,IAAAjyB,EAAmB,OAClBuO,EAAA,IAAC6iB,IAAc,UAAWpxB,EAAoB,SAAUyyB,EAAkB,EAE1ElkB,EAAA,IAACsiB,GAAkB,CAAA,UAAU,qBAAqB,SAElD,wBAAA,CAAA,EAAA,CAEN,EAEAtiB,EAAAA,IAAC,MAAI,CAAA,UAAU,aAAc,CAAA,EAE7BD,EAAAA,KAACuiB,GAAkB,CAAA,UAAU,uCAC3B,SAAA,CAACviB,EAAAA,KAAA,OAAA,CAAK,UAAU,0BAA0B,QAAS,IAAM0jB,EAAgB1tB,GAAS,CAACA,CAAI,EACpF,SAAA,CAAAytB,EAAc,QAAU,QAAQ,UAAA,EACnC,EACAxjB,MAAC6b,IAAW,eAAAC,EAAgC,SAC3C7X,GACC,CAAA,SAAA,CAACjE,EAAAA,IAAAmE,GAAA,CAAc,QAAO,GACpB,SAAApE,EAAA,KAAC,QAAA,CACC,QAAQ,cACR,UAAU,wRAMV,SAAA,CAACC,EAAAA,IAAAukB,GAAA,CAAO,UAAU,0CAA2C,CAAA,EAAE,QAAA,CAAA,CAAA,EAInE,EACAvkB,EAAA,IAACqF,GAAA,CACC,MAAM,SACN,YAAY,wBACZ,UAAW,CACT,cAAeif,EACf,cAAe,+DACf,WAAY,IACd,CAAA,CACF,CAAA,EACF,CAAA,EACF,QACC9B,GAAsB,EAAA,EACvBxiB,EAAA,IAACkhB,GAAA,CACC,cAAekD,EACf,UAAWnkB,EAAG,kBAAmByjB,EAAgB,gBAAkB,eAAe,EAEjF,SAAAF,IACEjuB,EAAQ,OACPyK,EAAA,IAACojB,GAAA,CACC,QAAA7tB,EACA,SAAU6uB,EACV,eAAAnB,EACA,eAAAC,CAAA,CAAA,EAGFljB,EAAAA,IAACsiB,GAAkB,CAAA,UAAU,qBAAqB,SAAc,gBAAA,CAAA,EAAA,CAEtE,CAAA,CAAA,CACF,CAAA,EACF,EACAtiB,EAAA,IAAC4gB,GAAA,CACC,KAAMgD,EACN,aAAcC,EACd,OAAA7wB,CAAA,CACF,CACF,CAAA,CAAA,CAEJ,CC7NwB,SAAAwxB,GAAa,CAAE,QAAAtV,GAAW,CAC1C,MAAApP,EAAgBnQ,GAAM,CAC1BA,EAAE,eAAe,EACTuf,GAAA,EAGR,OAAAlP,EAAA,IAAC,SAAA,CACC,QAASF,EACT,UAAU,gJAEV,SAAAE,EAAAA,IAAC,OAAI,UAAU,+MACb,eAAC6e,GAAU,CAAA,KAAK,MAAM,CACxB,CAAA,CAAA,CAAA,CAGN,CCfA,SAAwB4F,IAAS,CAGjC,CCYA,IAAIC,GAGJ,MAAM,8FAA8F,EACjG,KAAKjlB,GAAYA,EAAS,MAAM,EAChC,KAAazP,GAAA,CAEJ00B,GAAA10B,EAER,QAAS0W,KAAQge,GAAO,CAEtB,IAAIC,EAAMje,EAAK,IAEXoP,EAAS,SAAS,cAAc,QAAQ,EAE5CA,EAAO,MAAQ6O,EAEf7O,EAAO,YAAc6O,EAEL,SAAS,eAAe,WAAW,EAEzC,YAAY7O,CAAM,EAGhC,SAAS,eAAe,WAAW,EAAE,iBAAiB,SAAU,UAAW,CAE1E,IAAI8O,EAAc,KAAK,MAEvB,GAAIA,GAEH,QAASle,KAAQge,GAEZ,GAAAhe,EAAK,MAAQke,EAAa,CAE7B,IAAIC,EAASne,EAAK,OAEdoe,EAAY,SAAS,eAAe,WAAW,EAEnDA,EAAU,MAAQD,EAElB,OAGH,CACA,CACD,CAAC,EAGH,SAAwBE,GAAS,CAAE,aAAA7P,EAAe,IAAS,CACnD,MAAA9S,EAAWC,SAAO,IAAI,EACtB2iB,EAAc3iB,SAAO,EAAK,EAE1B3R,EAAeiO,EAAe1I,EAAM,YAAY,EAChD3C,EAAgBqL,EAAe1I,EAAM,aAAa,EAClD,CAAClB,EAAM2Z,CAAO,EAAI9Y,EAAeK,EAAM,IAAI,EAE3ChF,EAAkB0N,EAAe1I,EAAM,eAAe,EACtD9C,EAAewL,EAAe1I,EAAM,YAAY,EAKhD,CAAE,IAAA2c,EAAK,eAAAqS,CAAe,EAAItS,GAAkB,EAC5C,CAACuS,EAAqBC,CAAsB,EAAInoB,WAAS,EAAK,EAE9DooB,GAAkB9xB,GAAA,YAAAA,EAAe,YAAa,CAACH,IAAgBG,GAAA,YAAAA,EAAe,OAGpF6K,EAAAA,UAAU,IAAM,QACVzN,GAAA,YAAAA,EAAc,kBAAmB,YAAUgC,EAAA0P,EAAS,UAAT,MAAA1P,EAAkB,QAAM,EACtE,CAAChC,GAAA,YAAAA,EAAc,cAAc,CAAC,EAEjCyN,EAAAA,UAAU,IAAM,CACR,MAAA6c,EAAY,WAAW,IAAM,QACjCtoB,EAAA0P,EAAS,UAAT,MAAA1P,EAAkB,SACjB,GAAG,EAEC,MAAA,IAAM,aAAasoB,CAAS,CAAA,EAClC,CAAC7nB,CAAY,CAAC,EAEjB,MAAMwqB,EAAgB,IAAM,CACtB/K,EAAA,CAAE,KAAA7d,EAAM,EACZ2Z,EAAQ,EAAE,CAAA,EAGPkP,EAAwBjuB,GAAM,CACjCA,EAAE,eAAe,EACFs1B,GAAA,EAGZxiB,EAAiB9S,GAAM,CACtBA,EAAE,MAAQ,SAAWwD,IAIrBxD,EAAE,MAAQ,SAAW,CAACA,EAAE,UAC1BA,EAAE,eAAe,EAGfA,EAAE,MAAQ,SAAW,CAACA,EAAE,UAAY,EAACq1B,GAAA,MAAAA,EAAa,UACtCrH,IAChB,EAGIta,EAAe1T,GAAM,CAKzB,GAJIA,EAAE,UAAY,GAAKA,EAAE,OAAO,MAAM,SAAW,IACvC+e,EAAA/e,EAAE,OAAO,KAAK,EAGpBA,EAAE,MAAQ,SAAWA,EAAE,SAClB,OAAA,QAAQ,IAAI,eAAe,CAKpC,EAGI01B,EAAyB,IAAM,CACnCL,EAAY,QAAU,EAAA,EAGlBM,EAAuB,IAAM,CACjCN,EAAY,QAAU,EAAA,EAGlBO,EAAqB51B,GAAA,CACnB,KAAA,CAAE,MAAAW,CAAM,EAAIX,EAAE,OAEpB+e,EAAQpe,CAAK,CAAA,EAGTk1B,EAAqB,IACrBtQ,EACK,eAOLkQ,EACK,oBAGF,GAGHK,EAAwB,IAAM,CACXN,EAAC3F,GAAS,CAACA,CAAI,CAAA,EAGpC,OAAAtK,EAAuBlV,EAAA,IAAA6C,WAAA,CAAA,CAAA,EAIvB7C,EAAA,IAAA6C,WAAA,CAAA,SAAA9C,EAAAA,KAAC,MAAI,CAAA,UAAU,2CACb,SAAA,CAAAC,EAAAA,IAAC,OAAI,UAAU,oDACb,SAACD,EAAA,KAAA,OAAA,CAAK,UAAU,0FACd,SAAA,CAAAC,EAAA,IAACse,GAAc,EAAA,QACdQ,GAAe,EAAA,QACfwB,GAAc,EAAA,EACftgB,EAAAA,IAACuf,GAAc,CAAA,KAAM2F,CAAqB,CAAA,CAAA,CAAA,CAC5C,CACF,CAAA,EACAnlB,EAAAA,KAAC,MAAI,CAAA,UAAU,2PACb,SAAA,CAAAC,EAAAA,IAAC,QAAK,UAAU,kGACd,SAACA,MAAA,MAAA,CAAI,UAAU,0CACb,SAAAD,EAAA,KAAC,MAAA,CACC,UAAW,uOAMX,SAAA,CAAAC,EAAA,IAACqjB,GAAoB,EAAA,EAE7BrjB,EAAA,IAAC,SAAO,CAAA,GAAG,YAAY,MAAM,WACzB,SAAAA,EAAA,IAAC,SAAO,CAAA,MAAM,GAAG,SAAA,KAAG,CAAA,EACxB,EAEQA,EAAA,IAACsY,GAAA,CAEC,cAAY,aACZ,GAAG,YACH,SAAS,IACT,UAAS,GACT,IAAKlW,EAEL,KAAK,IACL,MAAmBgjB,EAAkB,GAAKrwB,EAC1C,QAASsO,EACT,UAAWZ,EACX,SAAU8iB,EACV,mBAAoBF,EACpB,iBAAkBC,EAClB,YAAaE,EAAmB,EAChC,SAAsBJ,EACtB,UAAU,0QAAA,CACZ,EACAplB,EAAA,IAAC0d,GAAA,CACC,cAAAC,EACA,qBAAAC,EACA,SAAsBwH,EACtB,aAAAjyB,EACA,gBAAAlC,EACA,SAAUP,GAAA,YAAAA,EAAc,QAAA,CAC1B,EACC4C,IAAiB5C,GAAA,MAAAA,EAAc,YAAaA,EAAa,WAAa,SACpEsP,EAAA,IAAA0lB,GAAA,CAAiB,QAASD,CAAA,CAAuB,EAChD,IAAA,CAAA,GAER,CACF,CAAA,QACChB,GAAO,EAAA,CAAA,EACV,CAAA,CACF,CAAA,CACF,CAAA,CAEJ,CCjOA,SAAwBkB,IAAO,CACvB,MAAAzwB,EAAcyJ,EAAe1I,EAAM,WAAW,EAC9C,CAACvF,EAAcgD,CAAe,EAAIkC,EAAeK,EAAM,YAAY,EACnErC,EAAcD,EAAkBsC,EAAM,QAAQ,EAC9C5C,EAAesL,EAAe1I,EAAM,YAAY,EAChD,CAAE,gBAAA4J,CAAA,EAAoB5J,EAAM,gBAAgB,EAC5C,CAAE,eAAApF,GAAmB+0B,KACrBroB,EAAWC,KAGXqoB,EAAgB9rB,GAAwBlJ,EAAgB,CAAE,QAAS,GAAO,EAC1Ei1B,EAA0B3rB,GAA+BtJ,CAAc,EAyD7E,OAtDAsN,EAAAA,UAAU,IAAM,CACVzN,IAAiB,KAEfG,IAAmB,MAELgP,IACPhP,GAETi1B,EAAwB,OAAOj1B,EAAgB,CAC7C,UAAYb,GAAS,CACnB0D,EAAgB1D,CAAI,CACtB,EACA,QAAUkD,GAAU,CAClB,QAAQ,MAAM,kCAAkC,EAChD,QAAQ,MAAMA,CAAK,EACnBqK,EAAS,WAAW,EACJsC,GAClB,CAAA,CACD,EACDjM,EAAY,IAAI,GAEhB2J,EAAS,WAAW,GAEb7M,GAAA,YAAAA,EAAc,kBAAmB,SAE1C6M,EAAS,WAAWrI,GAAa,GACxBxE,GAAA,YAAAA,EAAc,kBAAmBG,GAEjC0M,EAAA,SAAS7M,GAAA,YAAAA,EAAc,gBAAgB,EAElD,SAAS,OAAQA,GAAA,YAAAA,EAAc,QAAS,SAAkC,EACzE,CAACA,EAAcG,CAAc,CAAC,EAEjCsN,EAAAA,UAAU,IAAM,CACV9K,IAAiB,OAAQ3C,GAAA,MAAAA,EAAc,iBAC3Bm1B,EAAA,QAAQn1B,GAAA,YAAAA,EAAc,cAAc,GAEnD,CAACA,GAAA,YAAAA,EAAc,eAAgBm1B,EAAexyB,CAAY,CAAC,EAE9D8K,EAAAA,UAAU,IAAM,CACV0nB,EAAc,KAChBjyB,EAAYiyB,EAAc,IAAI,EACrBA,EAAc,UACvB,QAAQ,MAAM,8BAA8B,EACpC,QAAA,MAAMA,EAAc,KAAK,EACjCjyB,EAAY,IAAI,EAClB,EACC,CAACiyB,EAAc,KAAMA,EAAc,QAASjyB,CAAW,CAAC,GAGvDlD,GAAA,YAAAA,EAAc,kBAAmB,WAEjCA,GAAA,YAAAA,EAAc,kBAAmBG,GAEjC,CAACA,EAAuB,KAIvBkP,EAAA,KAAA8C,WAAA,CAAA,SAAA,CAAmBhS,IAAA,OAAS,EAACwC,GAAA,MAAAA,EAAc,cAAUob,GAAQ,EAAA,QAAMgM,GAAS,CAAA,CAAA,QAC5EsK,GAAS,EAAA,CACZ,CAAA,CAAA,CAEJ,CC9EA,SAAwBxhB,IAAS,CAC/B,KAAM,CAACrO,EAAakO,CAAc,EAAIxN,EAAeK,EAAM,WAAW,EAChEvF,EAAeiO,EAAe1I,EAAM,YAAY,EAChD,CAAE,8BAAA2W,CAAA,EAAkC3W,EAAM,gBAAgB,EAC1D,CAAE,MAAA8vB,GAAUH,KACZroB,EAAWC,KA2BjB,OAxBAW,EAAAA,UAAU,IAAM,CACVzN,IAAiB,KAEfq1B,GAE4BnZ,IAC9BxJ,EAAe2iB,CAAK,GAEpBxoB,EAAS,WAAW,GAEb7M,GAAA,YAAAA,EAAc,kBAAmB,SAEtCwE,IAAgB6wB,GAAOxoB,EAAS,WAAWrI,GAAa,EAGnDqI,EAAA,SAAS7M,GAAA,YAAAA,EAAc,gBAAgB,CAEjD,EAAA,CAACA,EAAcq1B,EAAO7wB,CAAW,CAAC,GAGjCxE,GAAA,YAAAA,EAAc,kBAAmB,UAEjCwE,IAAgB6wB,GAEhB,CAACA,EAAc,KAIfhmB,EAAA,KAAA8C,WAAA,CAAA,SAAA,CAAC7C,EAAAA,IAAAya,GAAA,CAAS,aAAc,EAAM,CAAA,EAC9Bza,EAAAA,IAAC+kB,GAAS,CAAA,aAAc,EAAM,CAAA,CAChC,CAAA,CAAA,CAEJ,CC3CA,SAASiB,IAAQ,CACf,KAAM,CAAE,MAAAxuB,EAAO,MAAAtE,EAAO,gBAAAmK,GAAoBkB,GAAe,EACnD,CACJ,SAAA7G,EACA,aAAAuuB,EACA,UAAW,CAAE,OAAAC,CAAO,GAClBC,GAAoB,EAElB5oB,EAAWC,KAEjBW,EAAAA,UAAU,IAAM,CACVd,GACFE,EAAS,WAAW,CACtB,EACC,CAACF,EAAiBE,CAAQ,CAAC,EAKxB,MAAA6oB,EAAkB,GAExB,aACG,MAAI,CAAA,UAAU,+EACb,SAACrmB,EAAA,KAAA,MAAA,CAAI,UAAU,yEACb,SAAA,CAACC,EAAA,IAAA,KAAA,CAAG,UAAU,0CAA0C,SAAY,eAAA,EACnE9M,GACC8M,EAAA,IAAC,MAAA,CACC,UAAU,gFACV,KAAK,QACN,SAAA,6FAAA,CAGD,EAEFD,EAAA,KAAC,OAAA,CACC,UAAU,OACV,aAAW,aACX,OAAO,OACP,SAAUkmB,EAAcj2B,GAASwH,EAAMxH,CAAI,CAAC,EAE5C,SAAA,CAAC+P,EAAAA,KAAA,MAAA,CAAI,UAAU,OACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,WACb,SAAA,CAAAC,EAAA,IAAC,QAAA,CACC,KAAK,QACL,GAAG,QACH,aAAa,QACb,aAAW,QACV,GAAGtI,EAAS,QAAS,CACpB,SAAU,oBACV,UAAW,CACT,MAAO,EACP,QAAS,qCACX,EACA,UAAW,CACT,MAAO,IACP,QAAS,gDACX,EACA,QAAS,CACP,MAAO,eACP,QAAS,sCACX,CAAA,CACD,EACD,eAAc,CAAC,CAACwuB,EAAO,MACvB,UAAU,gMACV,YAAY,GAAA,CACb,EACDlmB,EAAA,IAAC,QAAA,CACC,QAAQ,QACR,UAAU,qPACX,SAAA,eAAA,CAED,CAAA,EACF,EACCkmB,EAAO,OACNlmB,EAAAA,IAAC,OAAK,CAAA,KAAK,QAAQ,UAAU,4BAE1B,SAAOkmB,EAAA,MAAM,OAChB,CAAA,CAAA,EAEJ,EACAnmB,EAAAA,KAAC,MAAI,CAAA,UAAU,OACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,WACb,SAAA,CAAAC,EAAA,IAAC,QAAA,CACC,KAAK,WACL,GAAG,WACH,aAAa,mBACb,aAAW,WACV,GAAGtI,EAAS,WAAY,CACvB,SAAU,uBACV,UAAW,CACT,MAAO,EACP,QAAS,wCACX,EACA,UAAW,CACT,MAAO,GACP,QAAS,0CACX,CAAA,CACD,EACD,eAAc,CAAC,CAACwuB,EAAO,SACvB,UAAU,gMACV,YAAY,GAAA,CACb,EACDlmB,EAAA,IAAC,QAAA,CACC,QAAQ,WACR,UAAU,qPACX,SAAA,UAAA,CAED,CAAA,EACF,EAECkmB,EAAO,UACNlmB,EAAAA,IAAC,OAAK,CAAA,KAAK,QAAQ,UAAU,4BAE1B,SAAOkmB,EAAA,SAAS,OACnB,CAAA,CAAA,EAEJ,QACC,IAAE,CAAA,KAAK,mBAAmB,UAAU,yCAAyC,SAE9E,mBAAA,EACAlmB,EAAAA,IAAC,MAAI,CAAA,UAAU,OACb,SAAAA,EAAA,IAAC,SAAA,CACC,aAAW,UACX,KAAK,SACL,UAAU,sKACX,SAAA,UAAA,CAAA,EAGH,CAAA,CAAA,CACF,EACAD,EAAAA,KAAC,IAAE,CAAA,UAAU,oDACV,SAAA,CAAA,IAAI,yBACkB,UACtB,IAAE,CAAA,KAAK,YAAY,UAAU,qCAAqC,SAEnE,UAAA,CAAA,EACF,EACCqmB,CA+CC,CAEJ,CAAA,CACF,CAAA,CAEJ,CC3LA,SAASC,IAAe,CAMtB,MAAM9oB,EAAWC,KACX,CACJ,SAAA9F,EACA,MAAA4uB,EACA,aAAAL,EACA,UAAW,CAAE,OAAAC,CAAO,CAClB,EAAAC,GAAuB,CAAE,KAAM,UAAY,CAAA,EACzC,CAACjzB,EAAOgK,CAAQ,EAAIF,WAAkB,EAAK,EAC3C,CAAC2X,EAAc4R,CAAe,EAAIvpB,WAAiB,EAAE,EACrDwpB,EAAexqB,KAEfyqB,EAAWH,EAAM,UAAU,EAE3BI,EAA4B12B,GAAwB,CACxDw2B,EAAa,OAAOx2B,EAAM,CACxB,UAAW,IAAM,CACfuN,EAAS,WAAW,CACtB,EACA,QAAUrK,GAAU,aAClBgK,EAAS,EAAI,GACThK,GAAAA,EAAAA,EAAM,WAANA,YAAAA,EAAgB,OAAhBA,MAAAA,EAAsB,SACRA,GAAAA,GAAAA,EAAAA,EAAM,WAANA,YAAAA,EAAgB,OAAhBA,YAAAA,EAAsB,OAAO,CAEjD,CAAA,CACD,CAAA,EAGH,aACG,MAAI,CAAA,UAAU,+EACb,SAAC6M,EAAA,KAAA,MAAA,CAAI,UAAU,yEACb,SAAA,CAACC,EAAA,IAAA,KAAA,CAAG,UAAU,0CAA0C,SAAmB,sBAAA,EAC1E9M,GACC6M,EAAA,KAAC,MAAA,CACC,UAAU,gFACV,KAAK,QACN,SAAA,CAAA,6EAC4E4U,CAAA,CAAA,CAC7E,EAEF5U,EAAA,KAAC,OAAA,CACC,UAAU,OACV,aAAW,oBACX,OAAO,OACP,SAAUkmB,EAAcj2B,GAAS02B,EAAyB12B,CAAI,CAAC,EAE/D,SAAA,CAAC+P,EAAAA,KAAA,MAAA,CAAI,UAAU,OACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,WACb,SAAA,CAAAC,EAAA,IAAC,QAAA,CACC,GAAG,OACH,KAAK,OACL,aAAa,OACb,aAAW,OAEX,QAAUrQ,IACRA,EAAE,eAAe,EACV,IAER,GAAG+H,EAAS,OAAQ,CACnB,SAAU,mBACV,UAAW,CACT,MAAO,EACP,QAAS,oCACX,EACA,UAAW,CACT,MAAO,GACP,QAAS,sCACX,CAAA,CACD,EACD,eAAc,CAAC,CAACwuB,EAAO,KACvB,UAAU,gMACV,YAAY,GAAA,CACb,EACDlmB,EAAA,IAAC,QAAA,CACC,QAAQ,OACR,UAAU,6PACX,SAAA,WAAA,CAED,CAAA,EACF,EAECkmB,EAAO,MACNlmB,EAAAA,IAAC,OAAK,CAAA,KAAK,QAAQ,UAAU,4BAE1B,SAAOkmB,EAAA,KAAK,OACf,CAAA,CAAA,EAEJ,EACAnmB,EAAAA,KAAC,MAAI,CAAA,UAAU,OACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,WACb,SAAA,CAAAC,EAAA,IAAC,QAAA,CACC,KAAK,OACL,GAAG,WACH,aAAW,WACV,GAAGtI,EAAS,WAAY,CACvB,SAAU,uBACV,UAAW,CACT,MAAO,EACP,QAAS,wCACX,EACA,UAAW,CACT,MAAO,GACP,QAAS,0CACX,CAAA,CACD,EACD,eAAc,CAAC,CAACwuB,EAAO,SACvB,UAAU,gMACV,YAAY,IACZ,aAAa,KAAA,CACd,EACDlmB,EAAA,IAAC,QAAA,CACC,QAAQ,WACR,UAAU,6PACX,SAAA,UAAA,CAED,CAAA,EACF,EAECkmB,EAAO,UACNlmB,EAAAA,IAAC,OAAK,CAAA,KAAK,QAAQ,UAAU,4BAE1B,SAAOkmB,EAAA,SAAS,OACnB,CAAA,CAAA,EAEJ,EACAnmB,EAAAA,KAAC,MAAI,CAAA,UAAU,OACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,WACb,SAAA,CAAAC,EAAA,IAAC,QAAA,CACC,KAAK,QACL,GAAG,QACH,aAAa,QACb,aAAW,QACV,GAAGtI,EAAS,QAAS,CACpB,SAAU,oBACV,UAAW,CACT,MAAO,EACP,QAAS,qCACX,EACA,UAAW,CACT,MAAO,IACP,QAAS,gDACX,EACA,QAAS,CACP,MAAO,eACP,QAAS,sCACX,CAAA,CACD,EACD,eAAc,CAAC,CAACwuB,EAAO,MACvB,UAAU,gMACV,YAAY,GAAA,CACb,EACDlmB,EAAA,IAAC,QAAA,CACC,QAAQ,QACR,UAAU,6PACX,SAAA,OAAA,CAED,CAAA,EACF,EACCkmB,EAAO,OACNlmB,EAAAA,IAAC,OAAK,CAAA,KAAK,QAAQ,UAAU,4BAE1B,SAAOkmB,EAAA,MAAM,OAChB,CAAA,CAAA,EAEJ,EACAnmB,EAAAA,KAAC,MAAI,CAAA,UAAU,OACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,WACb,SAAA,CAAAC,EAAA,IAAC,QAAA,CACC,KAAK,WACL,GAAG,WACH,aAAa,mBACb,aAAW,WACV,GAAGtI,EAAS,WAAY,CACvB,SAAU,uBACV,UAAW,CACT,MAAO,EACP,QAAS,wCACX,EACA,UAAW,CACT,MAAO,GACP,QAAS,0CACX,CAAA,CACD,EACD,eAAc,CAAC,CAACwuB,EAAO,SACvB,UAAU,gMACV,YAAY,GAAA,CACb,EACDlmB,EAAA,IAAC,QAAA,CACC,QAAQ,WACR,UAAU,6PACX,SAAA,UAAA,CAED,CAAA,EACF,EAECkmB,EAAO,UACNlmB,EAAAA,IAAC,OAAK,CAAA,KAAK,QAAQ,UAAU,4BAE1B,SAAOkmB,EAAA,SAAS,OACnB,CAAA,CAAA,EAEJ,EACAnmB,EAAAA,KAAC,MAAI,CAAA,UAAU,OACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,WACb,SAAA,CAAAC,EAAA,IAAC,QAAA,CACC,KAAK,WACL,GAAG,mBACH,aAAW,mBAEX,QAAUrQ,IACRA,EAAE,eAAe,EACV,IAER,GAAG+H,EAAS,mBAAoB,CAC/B,SAAWpH,GAAUA,IAAUm2B,GAAY,wBAAA,CAC5C,EACD,eAAc,CAAC,CAACP,EAAO,iBACvB,UAAU,gMACV,YAAY,GAAA,CACb,EACDlmB,EAAA,IAAC,QAAA,CACC,QAAQ,mBACR,UAAU,6PACX,SAAA,kBAAA,CAED,CAAA,EACF,EAECkmB,EAAO,kBACNlmB,EAAAA,IAAC,OAAK,CAAA,KAAK,QAAQ,UAAU,4BAE1B,SAAOkmB,EAAA,iBAAiB,OAC3B,CAAA,CAAA,EAEJ,EACAlmB,EAAAA,IAAC,MAAI,CAAA,UAAU,OACb,SAAAA,EAAA,IAAC,SAAA,CACC,SACE,CAAC,CAACkmB,EAAO,OACT,CAAC,CAACA,EAAO,MACT,CAAC,CAACA,EAAO,UACT,CAAC,CAACA,EAAO,UACT,CAAC,CAACA,EAAO,iBAEX,KAAK,SACL,aAAW,sBACX,UAAU,sKACX,SAAA,UAAA,CAAA,EAGH,CAAA,CAAA,CACF,EACAnmB,EAAAA,KAAC,IAAE,CAAA,UAAU,oDACV,SAAA,CAAA,IAAI,2BACoB,UACxB,IAAE,CAAA,KAAK,SAAS,UAAU,iDAAiD,SAE5E,QAAA,CAAA,EACF,EACC,EAiDC,CAEJ,CAAA,CACF,CAAA,CAEJ,CClUA,SAAS4mB,IAAuB,CACxB,KAAA,CACJ,SAAAjvB,EACA,aAAAuuB,EACA,UAAW,CAAE,OAAAC,CAAO,GAClBC,GAA+B,EAC7BvuB,EAAuB0E,KACvB,CAACsqB,EAASC,CAAU,EAAI7pB,WAAkB,EAAK,EAC/C,CAAC8pB,EAAcC,CAAe,EAAI/pB,WAAkB,EAAK,EACzD,CAACgqB,EAAWC,CAAY,EAAIjqB,WAAiB,EAAE,EAE/CkqB,EAAYl3B,GAAgC,CAChD4H,EAAqB,OAAO5H,EAAM,CAChC,UAAYA,GAAS,CACnB62B,EAAW,EAAI,EACfI,EAAaj3B,EAAK,IAAI,CACxB,EACA,QAAS,IAAM,CACb+2B,EAAgB,EAAI,EACpB,WAAW,IAAM,CACfA,EAAgB,EAAK,GACpB,GAAI,CACT,CAAA,CACD,CAAA,EAGH,aACG,MAAI,CAAA,UAAU,+EACb,SAAChnB,EAAA,KAAA,MAAA,CAAI,UAAU,yEACb,SAAA,CAACC,EAAA,IAAA,KAAA,CAAG,UAAU,0CAA0C,SAAmB,sBAAA,EAC1E4mB,GACC7mB,EAAA,KAAC,MAAA,CACC,UAAU,sFACV,KAAK,QACN,SAAA,CAAA,QACO,UACL,IAAE,CAAA,UAAU,iCAAiC,KAAMinB,EAAW,SAE/D,OAAA,EAAK,IAAI,yBAAA,CAAA,CAGX,EAEDF,GACC9mB,EAAA,IAAC,MAAA,CACC,UAAU,gFACV,KAAK,QACN,SAAA,yHAAA,CAGD,EAEFD,EAAA,KAAC,OAAA,CACC,UAAU,OACV,aAAW,sBACX,OAAO,OACP,SAAUkmB,EAAaiB,CAAQ,EAE/B,SAAA,CAACnnB,EAAAA,KAAA,MAAA,CAAI,UAAU,OACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,WACb,SAAA,CAAAC,EAAA,IAAC,QAAA,CACC,KAAK,QACL,GAAG,QACH,aAAa,MACb,aAAW,QACV,GAAGtI,EAAS,QAAS,CACpB,SAAU,oBACV,UAAW,CACT,MAAO,EACP,QAAS,qCACX,EACA,UAAW,CACT,MAAO,IACP,QAAS,gDACX,EACA,QAAS,CACP,MAAO,eACP,QAAS,sCACX,CAAA,CACD,EACD,eAAc,CAAC,CAACwuB,EAAO,MACvB,UAAU,gMACV,YAAY,GAAA,CACb,EACDlmB,EAAA,IAAC,QAAA,CACC,QAAQ,QACR,UAAU,qPACX,SAAA,eAAA,CAED,CAAA,EACF,EACCkmB,EAAO,OACNlmB,EAAAA,IAAC,OAAK,CAAA,KAAK,QAAQ,UAAU,4BAE1B,SAAOkmB,EAAA,MAAM,OAChB,CAAA,CAAA,EAEJ,EACAlmB,EAAAA,IAAC,MAAI,CAAA,UAAU,OACb,SAAAA,EAAA,IAAC,SAAA,CACC,KAAK,SACL,SAAU,CAAC,CAACkmB,EAAO,MACnB,UAAU,wKACX,SAAA,UAAA,CAAA,EAGH,CAAA,CAAA,CACF,CAAA,CACF,CAAA,CACF,CAAA,CAEJ,CC9GA,SAASiB,IAAgB,CACjB,KAAA,CACJ,SAAAzvB,EACA,aAAAuuB,EACA,MAAAK,EACA,UAAW,CAAE,OAAAJ,CAAO,GAClBC,GAAwB,EACtBtuB,EAAgB2E,KAChB,CAAC4qB,EAAYC,CAAa,EAAIrqB,WAAkB,EAAK,EACrD,CAACsqB,CAAM,EAAIC,KACXhqB,EAAWC,KACXipB,EAAWH,EAAM,UAAU,EAE3BY,EAAYl3B,GAAyB,CACzC6H,EAAc,OAAO7H,EAAM,CACzB,QAAS,IAAM,CACbq3B,EAAc,EAAI,CACpB,CAAA,CACD,CAAA,EAGH,OAAIxvB,EAAc,gBAEb,MAAI,CAAA,UAAU,+EACb,SAACkI,EAAA,KAAA,MAAA,CAAI,UAAU,yEACb,SAAA,CAACC,EAAA,IAAA,KAAA,CAAG,UAAU,0CAA0C,SAAsB,yBAAA,EAC9EA,EAAA,IAAC,MAAA,CACC,UAAU,uGACV,KAAK,QACN,SAAA,2CAAA,CAED,EACAA,EAAA,IAAC,SAAA,CACC,QAAS,IAAMzC,EAAS,QAAQ,EAChC,aAAW,UACX,UAAU,sKACX,SAAA,UAAA,CAED,CAAA,CACF,CAAA,CACF,CAAA,QAIC,MAAI,CAAA,UAAU,+EACb,SAACwC,EAAA,KAAA,MAAA,CAAI,UAAU,yEACb,SAAA,CAACC,EAAA,IAAA,KAAA,CAAG,UAAU,0CAA0C,SAAmB,sBAAA,EAC1EonB,GACCrnB,EAAA,KAAC,MAAA,CACC,UAAU,gFACV,KAAK,QACN,SAAA,CAAA,gDAC+C,UAC7C,IAAE,CAAA,UAAU,+CAA+C,KAAK,mBAAmB,SAEpF,aAAA,EAAK,IAAI,eAAA,CAAA,CAEX,EAEFA,EAAA,KAAC,OAAA,CACC,UAAU,OACV,aAAW,sBACX,OAAO,OACP,SAAUkmB,EAAaiB,CAAQ,EAE/B,SAAA,CAACnnB,EAAAA,KAAA,MAAA,CAAI,UAAU,OACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,WACb,SAAA,CAAAC,EAAA,IAAC,QAAA,CACC,KAAK,SACL,GAAG,QACH,MAAOsnB,EAAO,IAAI,OAAO,EACxB,GAAG5vB,EAAS,QAAS,CAAE,SAAU,0CAA2C,CAAA,CAC/E,EACAsI,EAAA,IAAC,QAAA,CACC,KAAK,SACL,GAAG,SACH,MAAOsnB,EAAO,IAAI,QAAQ,EACzB,GAAG5vB,EAAS,SAAU,CAAE,SAAU,sCAAuC,CAAA,CAC5E,EACAsI,EAAA,IAAC,QAAA,CACC,KAAK,WACL,GAAG,WACH,aAAa,mBACb,aAAW,WACV,GAAGtI,EAAS,WAAY,CACvB,SAAU,uBACV,UAAW,CACT,MAAO,EACP,QAAS,wCACX,EACA,UAAW,CACT,MAAO,GACP,QAAS,0CACX,CAAA,CACD,EACD,eAAc,CAAC,CAACwuB,EAAO,SACvB,UAAU,gMACV,YAAY,GAAA,CACb,EACDlmB,EAAA,IAAC,QAAA,CACC,QAAQ,WACR,UAAU,6PACX,SAAA,UAAA,CAED,CAAA,EACF,EAECkmB,EAAO,UACNlmB,EAAAA,IAAC,OAAK,CAAA,KAAK,QAAQ,UAAU,4BAE1B,SAAOkmB,EAAA,SAAS,OACnB,CAAA,CAAA,EAEJ,EACAnmB,EAAAA,KAAC,MAAI,CAAA,UAAU,OACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,WACb,SAAA,CAAAC,EAAA,IAAC,QAAA,CACC,KAAK,WACL,GAAG,mBACH,aAAW,mBAEX,QAAUrQ,IACRA,EAAE,eAAe,EACV,IAER,GAAG+H,EAAS,mBAAoB,CAC/B,SAAWpH,GAAUA,IAAUm2B,GAAY,wBAAA,CAC5C,EACD,eAAc,CAAC,CAACP,EAAO,iBACvB,UAAU,gMACV,YAAY,GAAA,CACb,EACDlmB,EAAA,IAAC,QAAA,CACC,QAAQ,mBACR,UAAU,6PACX,SAAA,kBAAA,CAED,CAAA,EACF,EACCkmB,EAAO,kBACNlmB,EAAAA,IAAC,OAAK,CAAA,KAAK,QAAQ,UAAU,4BAE1B,SAAOkmB,EAAA,iBAAiB,OAC3B,CAAA,EAEDA,EAAO,OACNlmB,EAAAA,IAAC,OAAK,CAAA,KAAK,QAAQ,UAAU,4BAE1B,SAAOkmB,EAAA,MAAM,OAChB,CAAA,EAEDA,EAAO,QACNlmB,EAAAA,IAAC,OAAK,CAAA,KAAK,QAAQ,UAAU,4BAE1B,SAAOkmB,EAAA,OAAO,OACjB,CAAA,CAAA,EAEJ,EACAlmB,EAAAA,IAAC,MAAI,CAAA,UAAU,OACb,SAAAA,EAAA,IAAC,SAAA,CACC,SAAU,CAAC,CAACkmB,EAAO,UAAY,CAAC,CAACA,EAAO,iBACxC,KAAK,SACL,aAAW,sBACX,UAAU,sKACX,SAAA,UAAA,CAAA,EAGH,CAAA,CAAA,CACF,CAAA,CACF,CAAA,CACF,CAAA,CAGN,CC3KA,MAAMsB,GAA0B/X,GAAM,cAAoC,MAAS,EAEtEgY,GAA2B,CAAC,CACvC,MAAAn3B,EACA,SAAAwM,CACF,IAGM,CACJ,KAAM,CAAC5J,EAAOgK,CAAQ,EAAIF,WAAS,EAAK,EAEtC,OAAAgD,MAACwnB,GAAwB,SAAxB,CAAiC,MAAOl3B,GAAgB,CAAE,MAAA4C,EAAO,SAAAgK,GAC/D,SAAAJ,CACH,CAAA,CAEJ,EAEa4qB,GAAsB,IAAM,CACjC,MAAAlpB,EAAUiR,GAAM,WAAW+X,EAAuB,EAExD,GAAIhpB,IAAY,OACR,MAAA,IAAI,MAAM,kEAAkE,EAG7E,OAAAA,CACT,EC5BMmpB,GAAkB,IAAM,CACtB,KAAA,CAAE,MAAAz0B,GAAUw0B,KACZnqB,EAAWC,KACjB,OAAAiS,GAAM,UAAU,IAAM,QAChB/c,EAAAQ,GAAA,YAAAA,EAAO,WAAP,MAAAR,EAAiB,MAGrB,EACC,CAACQ,EAAOqK,CAAQ,CAAC,EAEb,IACT,ECDMqqB,GAAa,IACjB7nB,EAAAA,KAAClD,GACC,CAAA,SAAA,CAAAmD,EAAA,IAACmO,GAAO,EAAA,QACPwZ,GAAgB,EAAA,CAAA,CACnB,CAAA,EAEIE,GAASC,GAAoB,CACjC,CACE,KAAM,WACN,cAAUzB,GAAa,EAAA,CACzB,EACA,CACE,KAAM,kBACN,cAAUM,GAAqB,EAAA,CACjC,EACA,CACE,KAAM,iBACN,cAAUQ,GAAc,EAAA,CAC1B,EACA,CACE,cAAUS,GAAW,EAAA,EACrB,SAAU,CACR,CACE,KAAM,QACN,cAAU5B,GAAM,EAAA,CAClB,EACA,CACE,KAAM,IACN,cAAUpY,GAAK,EAAA,EACf,SAAU,CACR,CACE,MAAO,GACP,QAAU5N,EAAA,IAAA+nB,GAAA,CAAS,GAAG,YAAY,QAAS,GAAM,CACnD,EACA,CACE,KAAM,wBACN,cAAUpC,GAAK,EAAA,CACjB,EACA,CACE,KAAM,iBACN,cAAUpiB,GAAO,EAAA,CACnB,CACF,CACF,CACF,CACF,CACF,CAAC,EAEKykB,GAAM,IAAM,CACV,KAAA,CAAE,SAAA9qB,GAAawqB,KAEfttB,EAAc,IAAI6tB,GAAY,CAClC,WAAY,IAAIC,GAAW,CACzB,QAAUh1B,GAAU,SACdR,EAAAQ,GAAA,YAAAA,EAAO,WAAP,YAAAR,EAAiB,UAAW,KAC9BwK,EAAShK,CAAK,CAElB,CAAA,CACD,CAAA,CACF,EAED,aACGi1B,GAAoB,CAAA,OAAQ/tB,EAC3B,SAAC4F,MAAAooB,GAAA,CACC,gBAAC9d,GACC,CAAA,SAAA,CAAAtK,MAACqoB,IAAe,OAAAR,GAAgB,EAChC7nB,EAAAA,IAACsoB,GAAmB,CAAA,cAAe,EAAO,CAAA,CAAA,EAC5C,EACF,CACF,CAAA,CAEJ,EAEAC,GAAe,IACbvoB,EAAAA,IAACwH,GACC,CAAA,SAAAxH,EAAAA,IAACgoB,IAAI,CAAA,EACP,ECpFF,MAAM5a,GAAY,SAAS,eAAe,MAAM,EAC1CxC,GAAO4d,GAAWpb,EAAS,EAEjCxC,GAAK,OACF5K,EAAA,IAAAynB,GAAA,CACC,SAACznB,EAAA,IAAAgoB,GAAA,CAAI,CAAA,EACP,CACF"}